<?php

require('./config/config.php');
require('./classes/api.php');

if(isset($_POST['type']) && !empty($_POST['type']) && isset($_POST['username']) && !empty($_POST['username'])){
    $api = new Api;
    $type = $_POST['type'];
    $username = $_POST['username'];
    $system_date = date('Y-m-d');
    $current_time = date('H:i:s');
    $response = array();

    # -------------------------------------------------------------
    #   Generate elements functions
    # -------------------------------------------------------------

    # System modal
    if($type == 'system modal'){
        if(isset($_POST['title']) && isset($_POST['size']) && isset($_POST['scrollable']) && isset($_POST['submitbutton']) && isset($_POST['formid'])){
            $title = $_POST['title'];
            $size = $api->get_modal_size($_POST['size']);
            $scrollable = $api->check_modal_scrollable($_POST['scrollable']);
            $formid = $_POST['formid'];
            $submitbutton = $_POST['submitbutton'];

            if($submitbutton == 1){
                $button = '<button type="submit" class="btn btn-primary" id="submitform" form="'. $formid .'">Submit</button>';
            }
            else{
                $button = '';
            }

            $modal = '<div class="modal fade" id="System-Modal" role="dialog" aria-labelledby="modal-'. $formid .'" aria-hidden="true">
                            <div class="modal-dialog '. $scrollable .' '. $size .'">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="modal-'. $formid .'">'. $title .'</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body" id="modal-body"></div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                        '. $button .'
                                    </div>
                                </div>
                            </div>
                        </div>';

            $response[] = array(
                'MODAL' => $modal
            );

            echo json_encode($response);
        }
    }
    # -------------------------------------------------------------

    # System form
    else if($type == 'system form'){
        if(isset($_POST['formtype']) && isset($_POST['formid'])){
            $formtype = $_POST['formtype'];
            $formid = $_POST['formid'];

            $form = '<form class="cmxform" id="'. $formid .'" method="post" action="#">';

            if($formtype == 'change password form'){
                $form .= '<div class="mb-3">
                                <label class="form-label" for="change_username">Username <span class="required">*</span></label>
                                <input type="text" class="form-control" name="change_username" value="'. $username .'"  readonly/>
                                <div class="input-group auth-pass-inputgroup">
                                    <input type="password" id="change_password" name="change_password" class="form-control" aria-label="Password" aria-describedby="password-addon">
                                    <button class="btn btn-light" type="button" id="password-addon"><i class="mdi mdi-eye-outline"></i></button>
                                </div>
                            </div>';
            }
            else if($formtype == 'page form'){
                $form .= '<div class="mb-3">
                            <label for="pagename" class="form-label">Page <span class="required">*</span></label>
                            <input type="hidden" id="pageid" name="pageid">
                            <input type="text" class="form-control maxlength" autocomplete="off" id="pagename" name="pagename" maxlength="100">
                        </div>';
            }
            else if($formtype == 'permission form'){
                $form .= '<div class="row">
                            <div class="col-md-12">
                                <div class="mb-3">
                                    <label class="form-label">Page <span class="required">*</span></label>
                                    <select class="form-control form-select2" id="pageid" name="pageid">
                                    <option value="">--</option>';
                                    $form .= $api->generate_page();
                                    $form .='</select>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="mb-3">
                                    <label for="pagename" class="form-label">Permission <span class="required">*</span></label>
                                    <input type="hidden" id="permissionid" name="permissionid">
                                    <input type="text" class="form-control maxlength" autocomplete="off"  id="permissiondesc" name="permissiondesc" maxlength="100">
                                </div>
                            </div>
                        </div>';
            }
            else if($formtype == 'role form'){
                $form .= '<div class="mb-3">
                                <label for="roledesc" class="form-label">Role <span class="required">*</span></label>
                                <input type="hidden" id="roleid" name="roleid">
                                <input type="text" class="form-control maxlength" autocomplete="off" id="roledesc" name="roledesc" maxlength="100">
                            </div>';
            }
            else if($formtype == 'system code form'){
                $form .= '<div class="row">
                            <div class="col-md-12">
                                <div class="mb-3">
                                    <label class="form-label">System Type <span class="required">*</span></label>
                                    <select class="form-control form-select2" id="systemtype" name="systemtype">
                                    <option value="">--</option>';
                                    $form .= $api->generate_system_code_options();
                                    $form .='</select>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="pagename" class="form-label">System Code <span class="required">*</span></label>
                                        <input type="text" class="form-control maxlength" autocomplete="off" id="systemcode" name="systemcode" maxlength="20">
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="pagename" class="form-label">System Description <span class="required">*</span></label>
                                        <input type="text" class="form-control maxlength" autocomplete="off" id="systemdesc" name="systemdesc" maxlength="1000">
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'permission role form'){
                $form .= '<div class="row">
                                '. $api->generate_permission_check_box() .'
                            </div>';
            }



# PMW status update form generation
else if($formtype == 'pmw status form'){
    if(isset($_POST['employee_id']) && isset($_POST['period_id'])){
        $employee_id = $_POST['employee_id'];
        $period_id = $_POST['period_id'];
        $current_status = isset($_POST['current_status']) ? $_POST['current_status'] : 'PENDING';
        $full_name = isset($_POST['full_name']) ? $_POST['full_name'] : '';
        $period_name = isset($_POST['period_name']) ? $_POST['period_name'] : '';

        echo '<div class="row">
            <div class="col-md-12">
                <div class="mb-3">
                    <label class="form-label">Employee</label>
                    <input type="text" class="form-control" value="'. $full_name .'" readonly>
                    <input type="hidden" id="employee_id" name="employee_id" value="'. $employee_id .'">
                    <input type="hidden" id="period_id" name="period_id" value="'. $period_id .'">
                </div>
            </div>
            <div class="col-md-12">
                <div class="mb-3">
                    <label class="form-label">Period</label>
                    <input type="text" class="form-control" value="'. $period_name .'" readonly>
                </div>
            </div>
            <div class="col-md-12">
                <div class="mb-3">
                    <label for="status" class="form-label">Status <span class="text-danger">*</span></label>
                    <select class="form-select" id="status" name="status" required>
                        <option value="">Choose Status</option>
                        <option value="PENDING"'. ($current_status == 'PENDING' ? ' selected' : '') .'>Pending</option>
                        <option value="SUBMITTED"'. ($current_status == 'SUBMITTED' ? ' selected' : '') .'>Submitted</option>
                    </select>
                </div>
            </div>
            <div class="col-md-12">
                <div class="mb-3">
                    <label for="notes" class="form-label">Notes</label>
                    <textarea class="form-control" id="notes" name="notes" rows="3" placeholder="Enter any notes or comments about this PMW submission"></textarea>
                </div>
            </div>
        </div>';
    }
}
            else if($formtype == 'user role form'){
                $form .= '<div class="row">
                                '. $api->generate_user_check_box() .'
                            </div>';
            }
            else if($formtype == 'system parameter form'){
                $form .= '<div class="row">
                            <div class="col-md-12">
                                <div class="mb-3">
                                    <label for="pagename" class="form-label">Parameter <span class="required">*</span></label>
                                    <input type="hidden" id="parameterid" name="parameterid">
                                    <input type="text" class="form-control maxlength" autocomplete="off" id="description" name="description" maxlength="100">
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="pagename" class="form-label">Extension</label>
                                    <input type="text" class="form-control maxlength" autocomplete="off" id="extension" name="extension" maxlength="10">
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="paramnum" class="form-label">Number</label>
                                    <input id="paramnum" name="paramnum" class="form-control" type="number" min="0">
                                </div>
                            </div>
                        </div>';

            }

            else if($type == 'pmw status form'){
                if(isset($_POST['employee_id']) && isset($_POST['period_id'])){
                    $employee_id = $_POST['employee_id'];
                    $period_id = $_POST['period_id'];
                    $current_status = isset($_POST['current_status']) ? $_POST['current_status'] : 'PENDING';
                    $full_name = isset($_POST['full_name']) ? $_POST['full_name'] : '';
                    $period_name = isset($_POST['period_name']) ? $_POST['period_name'] : '';

                    $form . '<div class="row">
                        <div class="col-md-12">
                            <div class="mb-3">
                                <label class="form-label">Employee</label>
                                <input type="text" class="form-control" value="'. $full_name .'" readonly>
                                <input type="hidden" id="employee_id" name="employee_id" value="'. $employee_id .'">
                                <input type="hidden" id="period_id" name="period_id" value="'. $period_id .'">
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="mb-3">
                                <label class="form-label">Period</label>
                                <input type="text" class="form-control" value="'. $period_name .'" readonly>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="mb-3">
                                <label for="status" class="form-label">Status <span class="text-danger">*</span></label>
                                <select class="form-select" id="status" name="status" required>
                                    <option value="">Choose Status</option>
                                    <option value="PENDING"'. ($current_status == 'PENDING' ? ' selected' : '') .'>Pending</option>
                                    <option value="SUBMITTED"'. ($current_status == 'SUBMITTED' ? ' selected' : '') .'>Submitted</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="mb-3">
                                <label for="notes" class="form-label">Notes</label>
                                <textarea class="form-control" id="notes" name="notes" rows="3" placeholder="Enter any notes or comments about this PMW submission"></textarea>
                            </div>
                        </div>
                    </div>';
                }
            }
            else if($formtype == 'employee form'){
                $form .= '<div class="row">
                                <div class="col-md-3">
                                    <div class="mb-3">
                                        <label class="form-label">QR Code</label><br/>
                                        <div id="qr-code">
                                            <img class="avatar-xl img-thumbnail mb-3" alt="profile image" width="150" src="./assets/images/default/default-qr.jpg" id="qr-code" data-holder-rendered="true">
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-9">
                                    <div class="mb-3">
                                        <label for="profile_image" class="form-label">Profile Image</label><br/>
                                        <img class="rounded-circle avatar-xl img-thumbnail mb-3" alt="profile image" width="150" src="./assets/images/default/avatar-default.png" id="profile-img" data-holder-rendered="true">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="profile_image" class="form-label">Upload Profile Image</label><br/>
                                        <input class="form-control" type="file" name="profile_image" id="profile_image">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-2">
                                    <div class="mb-3">
                                        <input type="hidden" id="employeeid" name="employeeid">
                                        <label for="idnumber" class="form-label">ID Number <span class="required">*</span></label>
                                        <input type="text" class="form-control maxlength" autocomplete="off" id="idnumber" name="idnumber" maxlength="100">
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="mb-3">
                                        <label for="firstname" class="form-label">First Name <span class="required">*</span></label>
                                        <input type="text" class="form-control maxlength" autocomplete="off" id="firstname" name="firstname" maxlength="100">
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="mb-3">
                                        <label for="middlename" class="form-label">Middle Name</label>
                                        <input type="text" class="form-control maxlength" autocomplete="off" id="middlename" name="middlename" maxlength="100">
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="mb-3">
                                        <label for="lastname" class="form-label">Last Name <span class="required">*</span></label>
                                        <input type="text" class="form-control maxlength" autocomplete="off" id="lastname" name="lastname" maxlength="100">
                                    </div>
                                </div>
                                <div class="col-md-1">
                                    <div class="mb-3">
                                        <label class="form-label">Suffix</label>
                                        <select class="form-control form-select2" id="suffix" name="suffix">
                                        <option value="">--</option>';
                                        $form .= $api->generate_system_options('SUFFIX');
                                        $form .='</select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-3">
                                    <div class="mb-3">
                                        <label class="form-label">Department <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="department" name="department">
                                        <option value="">--</option>';
                                        $form .= $api->generate_department_options();
                                        $form .='</select>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="mb-3">
                                        <label class="form-label">Designation <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="designation" name="designation">
                                        <option value="">--</option>';
                                        $form .= $api->generate_designation_options();
                                        $form .='</select>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="mb-3">
                                        <label class="form-label">Hired Date <span class="required">*</span></label>
                                        <div class="input-group" id="join-date-container">
                                            <input type="text" class="form-control" id="joindate" name="joindate" autocomplete="off" data-date-format="m/dd/yyyy" data-date-container="#join-date-container" data-provide="datepicker" data-date-autoclose="true">
                                            <span class="input-group-text"><i class="mdi mdi-calendar"></i></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="mb-3">
                                        <label class="form-label">Exit Date</label>
                                        <div class="input-group" id="exit-date-container">
                                            <input type="text" class="form-control" id="exitdate" name="exitdate" autocomplete="off" data-date-format="m/dd/yyyy" data-date-container="#exit-date-container" data-provide="datepicker" data-date-autoclose="true">
                                            <span class="input-group-text"><i class="mdi mdi-calendar"></i></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-3">
                                    <div class="mb-3">
                                        <label class="form-label">Employment Type <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="employmenttp" name="employmenttp">
                                        <option value="">--</option>';
                                        $form .= $api->generate_system_options('EMPLOYMENTTP');
                                        $form .='</select>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="mb-3">
                                        <label class="form-label">Employment Status <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="employmentstatus" name="employmentstatus">
                                            <option value="">--</option>
                                            <option value="1">Active</option>
                                            <option value="0">Inactive</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="mb-3">
                                        <label class="form-label">Permanency Date</label>
                                        <div class="input-group" id="permanent-date-container">
                                            <input type="text" class="form-control" id="permanentdate" name="permanentdate" autocomplete="off" data-date-format="m/dd/yyyy" data-date-container="#permanent-date-container" data-provide="datepicker" data-date-autoclose="true">
                                            <span class="input-group-text"><i class="mdi mdi-calendar"></i></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="mb-3">
                                        <label class="form-label">Birthday <span class="required">*</span></label>
                                        <div class="input-group" id="birthday-container">
                                            <input type="text" class="form-control" id="birthday" name="birthday" autocomplete="off" data-date-format="m/dd/yyyy" data-date-container="#birthday-container" data-provide="datepicker" data-date-autoclose="true">
                                            <span class="input-group-text"><i class="mdi mdi-calendar"></i></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-3">
                                    <div class="mb-3">
                                        <label class="form-label">Branch <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="branch" name="branch">
                                        <option value="">--</option>';
                                        $form .= $api->generate_branch_options();
                                        $form .='</select>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="mb-3">
                                        <label for="superior" class="form-label">Superior</label>
                                        <select class="form-control form-select2" id="superior" name="superior">
                                        <option value="">--</option>';
                                        $form .= $api->generate_active_employee_options();
                                        $form .='</select>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="mb-3">
                                        <label for="subordinate" class="form-label">Subordinate</label>
                                        <select class="form-control form-select2" multiple="multiple" id="subordinate">';
                                        $form .= $api->generate_active_employee_options();
                                        $form .='</select>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="mb-3">
                                        <label for="authorizer" class="form-label">Authorizer</label>
                                        <select class="form-control form-select2" multiple="multiple" id="authorizer">';
                                        $form .= $api->generate_active_employee_options();
                                        $form .='</select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="accountname" class="form-label">Bank Account Name <span class="required">*</span></label>
                                        <input type="text" class="form-control maxlength" autocomplete="off" id="accountname" name="accountname" maxlength="100">
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="accountnumber" class="form-label">Account Number <span class="required">*</span></label>
                                        <input type="text" class="form-control maxlength" autocomplete="off" id="accountnumber" name="accountnumber" maxlength="20">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-3">
                                    <div class="mb-3">
                                        <label class="form-label">Payroll Period <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="payrollperiod" name="payrollperiod">
                                        <option value="">--</option>';
                                        $form .= $api->generate_system_options('PAYROLLPERIOD');
                                        $form .='</select>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="mb-3">
                                        <label for="basicpay" class="form-label">Basic Pay <span class="required">*</span></label>
                                        <input id="basicpay" name="basicpay" class="form-control" type="number" min="0" step="0.01">
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="mb-3">
                                        <label for="dailyrate" class="form-label">Daily Rate</label>
                                        <input type="text" class="form-control" autocomplete="off" id="dailyrate" name="dailyrate" readonly>
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="mb-3">
                                        <label for="hourlyrate" class="form-label">Hourly Rate</label>
                                        <input type="text" class="form-control" autocomplete="off" id="hourlyrate" name="hourlyrate" readonly>
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="mb-3">
                                        <label for="minuterate" class="form-label">Minute Rate</label>
                                        <input type="text" class="form-control" autocomplete="off" id="minuterate" name="minuterate" readonly>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-2">
                                    <div class="mb-2">
                                        <label class="form-label">Gender <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="gender" name="gender">
                                        <option value="">--</option>';
                                        $form .= $api->generate_system_options('GENDER');
                                        $form .='</select>
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="mb-2">
                                        <label class="form-label">Civil Status <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="civil_status" name="civil_status">
                                        <option value="">--</option>';
                                        $form .= $api->generate_system_options('CIVIL_STATUS');
                                        $form .='</select>
                                    </div>
                                </div>

                                <div class="col-md-2">
                                    <div class="mb-3">
                                        <label for="email" class="form-label">Email <span class="required">*</span></label>
                                        <input id="email" name="email" class="form-control email-inputmask maxlength" maxlength="50" autocomplete="off">
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="mb-3">
                                        <label for="phone" class="form-label">Mobile Number <span class="required">*</span></label>
                                        <input type="text" class="form-control maxlength" autocomplete="off" id="phone" name="phone" maxlength="30">
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="mb-3">
                                        <label for="telephone" class="form-label">Telephone</label>
                                        <input type="text" class="form-control maxlength" autocomplete="off" id="telephone" name="telephone" maxlength="30">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-2">
                                    <div class="mb-3">
                                        <label for="sss" class="form-label">SSS</label>
                                        <input type="text" class="form-control maxlength" autocomplete="off" id="sss" name="sss" maxlength="50">
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="mb-3">
                                        <label for="tin" class="form-label">TIN</label>
                                        <input type="text" class="form-control maxlength" autocomplete="off" id="tin" name="tin" maxlength="50">
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="mb-3">
                                        <label for="philhealth" class="form-label">Philhealth</label>
                                        <input type="text" class="form-control maxlength" autocomplete="off" id="philhealth" name="philhealth" maxlength="50">
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="mb-3">
                                        <label for="pagibig" class="form-label">Pag-ibig</label>
                                        <input type="text" class="form-control maxlength" autocomplete="off" id="pagibig" name="pagibig" maxlength="50">
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label for="driverlicense" class="form-label">Drivers License</label>
                                        <input type="text" class="form-control maxlength" autocomplete="off" id="driverlicense" name="driverlicense" maxlength="50">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="address" class="form-label">Address <span class="required">*</span></label>
                                        <textarea class="form-control maxlength" id="address" name="address" maxlength="500" rows="5"></textarea>
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'filter employee form'){
                $form .= '<div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label class="form-label">Filter By <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="employeefilterby" name="employeefilterby">
                                            <option value="">--</option>
                                            <option value="branch">Branch</option>
                                            <option value="department">Department</option>
                                            <option value="designation">Designation</option>
                                            <option value="employmenttype">Employment Type</option>
                                            <option value="status">Status</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label class="form-label">Filter <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="employeefiltervalue" name="employeefiltervalue" disabled>
                                            <option value="">--</option>
                                        </select>
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'department form'){
                $form .= '<div class="mb-3">
                                <label for="department" class="form-label">Department <span class="required">*</span></label>
                                <input type="hidden" id="departmentid" name="departmentid">
                                <input type="text" class="form-control maxlength" autocomplete="off" id="department" name="department" maxlength="200">
                            </div>';
            }
            else if($formtype == 'designation form'){
                $form .= '<div class="mb-3">
                                <label for="designation" class="form-label">Designation <span class="required">*</span></label>
                                <input type="hidden" id="designationid" name="designationid">
                                <input type="text" class="form-control maxlength" autocomplete="off" id="designation" name="designation" maxlength="200">
                            </div>';
            }
            else if($formtype == 'branch form'){
                $form .= '<div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="branch" class="form-label">Branch <span class="required">*</span></label>
                                        <input type="hidden" id="branchid" name="branchid">
                                        <input type="text" class="form-control maxlength" autocomplete="off" id="branch" name="branch" maxlength="100">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label for="email" class="form-label">Email</label>
                                        <input id="email" name="email" class="form-control email-inputmask maxlength" maxlength="50" autocomplete="off">
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label for="phone" class="form-label">Phone</label>
                                        <input type="text" class="form-control maxlength" autocomplete="off" id="phone" name="phone" maxlength="30">
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label for="telephone" class="form-label">Telephone</label>
                                        <input type="text" class="form-control maxlength" autocomplete="off" id="telephone" name="telephone" maxlength="30">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="address" class="form-label">Address <span class="required">*</span></label>
                                        <textarea class="form-control maxlength" id="address" name="address" maxlength="500" rows="5"></textarea>
                                    </div>
                                </div>
                            </div>';
            }

            else if($formtype == 'announcement form'){
            $form .= '<div class="row">
                        <div class="col-md-12">
                            <div class="mb-3">
                                <label for="title" class="form-label">Title <span class="required">*</span></label>
                                <input type="hidden" id="announcementid" name="announcementid">
                                <input type="text" class="form-control maxlength" autocomplete="off" id="title" name="title" maxlength="255">
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="type" class="form-label">Type <span class="required">*</span></label>
                                <select class="form-select" id="type" name="type">
                                    <option value="announcement">Announcement</option>
                                    <option value="policy">Policy Update</option>
                                    <option value="event">Event</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="is_priority" class="form-label">Priority</label>
                                <select class="form-select" id="is_priority" name="is_priority">
                                    <option value="0">Normal</option>
                                    <option value="1">Priority</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="start_date" class="form-label">Start Date <span class="required">*</span></label>
                                <input type="date" class="form-control" id="start_date" name="start_date" required>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="end_date" class="form-label">End Date</label>
                                <input type="date" class="form-control" id="end_date" name="end_date">
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="department" class="form-label">Department</label>
                                <select class="form-select" id="department" name="department">
                                    <option value="">All Departments</option>';

                                    $departments = $api->get_departments();
                                    foreach($departments as $dept) {
                                        $form .= '<option value="'. $dept['DEPARTMENT_ID'] .'">'. $dept['DEPARTMENT'] .'</option>';
                                    }

                      '</select>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="branch" class="form-label">Branch</label>
                                <select class="form-select" id="branch" name="branch">
                                    <option value="">All Branches</option>';

                                    $branches = $api->get_branches();
                                    foreach($branches as $branch) {
                                        $form .= '<option value="'. $branch['BRANCH_ID'] .'">'. $branch['BRANCH'] .'</option>';
                                    }

                 '</select>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="mb-3">
                                <label for="content" class="form-label">Content <span class="required">*</span></label>
                                <textarea class="form-control maxlength" id="content" name="content" maxlength="5000" rows="5"></textarea>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="mb-3">
                                <label for="attachment" class="form-label">Attachment</label>
                                <input type="file" class="form-control" id="attachment" name="attachment">
                                <div id="attachment_preview" class="mt-2" style="display: none;">
                                    <div class="d-flex align-items-center">
                                        <span id="attachment_name"></span>
                                        <button type="button" class="btn btn-sm btn-danger ms-2" id="remove_attachment">
                                            <i class="bx bx-x"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>';
        }
            else if($formtype == 'holiday form'){
                $form .= '<div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="holiday" class="form-label">Holiday <span class="required">*</span></label>
                                        <input type="hidden" id="holidayid" name="holidayid">
                                        <input type="text" class="form-control maxlength" autocomplete="off" id="holiday" name="holiday" maxlength="200">
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Holiday Date <span class="required">*</span></label>
                                        <div class="input-group" id="holiday-date-container">
                                            <input type="text" class="form-control" id="holidaydate" name="holidaydate" autocomplete="off" data-date-format="m/dd/yyyy" data-date-container="#holiday-date-container" data-provide="datepicker" data-date-autoclose="true">
                                            <span class="input-group-text"><i class="mdi mdi-calendar"></i></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label class="form-label">Holiday Type <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="holidaytype" name="holidaytype">
                                        <option value="">--</option>';
                                        $form .= $api->generate_system_options('HOLIDAYTYPE');
                                        $form .='</select>
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'leave type form'){
                $form .= '<div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="leave" class="form-label">Leave <span class="required">*</span></label>
                                        <input type="hidden" id="leavetypeid" name="leavetypeid">
                                        <input type="text" class="form-control maxlength" autocomplete="off" id="leave" name="leave" maxlength="100">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="noleaves" class="form-label">Number of Leave <span class="required">*</span></label>
                                        <input id="noleaves" name="noleaves" class="form-control" type="number" min="0">
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Paid Status <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="paidstatus" name="paidstatus">
                                        <option value="">--</option>';
                                        $form .= $api->generate_system_options('PAIDSTAT');
                                        $form .='</select>
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'leave entitlement form'){
                $form .= '<div class="row">
                                <div class="col-md-7">
                                    <div class="mb-3">
                                        <label for="leavetype" class="form-label">Leave Type <span class="required">*</span></label>
                                        <input type="hidden" id="entitlementid" name="entitlementid">
                                        <select class="form-control form-select2" id="leavetype" name="leavetype">
                                        <option value="">--</option>';
                                        $form .= $api->generate_leave_type_options();
                                        $form .='</select>
                                    </div>
                                </div>
                                <div class="col-md-5">
                                    <div class="mb-3">
                                        <label for="noleaves" class="form-label">Number of Leaves</label>
                                        <input id="noleaves" name="noleaves" class="form-control" type="number" min="0">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label class="form-label">Coverage Start Date <span class="required">*</span></label>
                                        <div class="input-group" id="start-date-container">
                                            <input type="text" class="form-control" id="startdate" name="startdate" autocomplete="off" data-date-format="m/dd/yyyy" data-date-container="#start-date-container" data-provide="datepicker" data-date-autoclose="true" value="1/01/'. date('Y') .'">
                                            <span class="input-group-text"><i class="mdi mdi-calendar"></i></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label class="form-label">Coverage End Date <span class="required">*</span></label>
                                        <div class="input-group" id="end-date-container">
                                            <input type="text" class="form-control" id="enddate" name="enddate" autocomplete="off" data-date-format="m/dd/yyyy" data-date-container="#end-date-container" data-provide="datepicker" data-date-autoclose="true" value="12/31/'. date('Y') .'">
                                            <span class="input-group-text"><i class="mdi mdi-calendar"></i></span>
                                        </div>
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'employee leave form'){
                $form .= '<div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="employeeleavetype" class="form-label">Leave Type <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="employeeleavetype" name="employeeleavetype">
                                        <option value="">--</option>';
                                        $form .= $api->generate_leave_type_options();
                                        $form .='</select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="leavestatus" class="form-label">Status <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="leavestatus" name="leavestatus">
                                            <option value="">--</option>
                                            <option value="2">Pending</option>
                                            <option value="1">Approved</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="leaveduration" class="form-label">Duration <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="leaveduration" name="leaveduration">
                                        <option value="">--</option>';
                                        $form .= $api->generate_system_options('LVDURATION');
                                        $form .='</select>
                                    </div>
                                </div>
                            </div>
                            <div class="row" id="leave-date-container"></div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="reason" class="form-label">Reason <span class="required">*</span></label>
                                        <textarea class="form-control maxlength" id="reason" name="reason" maxlength="500" rows="3"></textarea>
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'update employee leave form'){
                $form .= '<div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="employeeleavetype" class="form-label">Leave Type <span class="required">*</span></label>
                                        <input type="hidden" id="leaveid" name="leaveid">
                                        <input type="hidden" id="leavestatus">
                                        <select class="form-control form-select2" id="employeeleavetype" name="employeeleavetype">
                                        <option value="">--</option>';
                                        $form .= $api->generate_leave_type_options();
                                        $form .='</select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="leavedate" class="form-label">Leave Date <span class="required">*</span></label>
                                        <div class="input-group" id="date-leave-container">
                                            <input type="text" class="form-control" id="leavedate" name="leavedate" autocomplete="off" data-date-format="m/dd/yyyy" data-date-container="#date-leave-container" data-provide="datepicker" data-date-autoclose="true">
                                            <span class="input-group-text"><i class="mdi mdi-calendar"></i></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="starttime" class="form-label">Leave Start Time <span class="required">*</span></label>
                                        <input type="time" id="starttime" name="starttime" class="form-control" autocomplete="off">
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="endtime" class="form-label">Leave End Time <span class="required">*</span></label>
                                        <input type="time" id="endtime" name="endtime" class="form-control" autocomplete="off">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="reason" class="form-label">Reason <span class="required">*</span></label>
                                        <textarea class="form-control maxlength" id="reason" name="reason" maxlength="500" rows="3"></textarea>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="rejectionreason" class="form-label">Rejection Reason </label>
                                        <textarea class="form-control maxlength" id="rejectionreason" name="rejectionreason" maxlength="500" rows="3" disabled></textarea>
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'employee document form'){
                $form .= '<div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="documentname" class="form-label">Document Name <span class="required">*</span></label>
                                    <input type="text" class="form-control maxlength" autocomplete="off" id="documentname" name="documentname" maxlength="100">
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="category" class="form-label">Document Category <span class="required">*</span></label>
                                    <select class="form-control form-select2" id="category" name="category">
                                        <option value="">--</option>';
                                    $form .= $api->generate_system_options('EMPLOYEEDOC');
                                    $form .='</select>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="documentnote" class="form-label">Document Note <span class="required">*</span></label>
                                    <input type="text" class="form-control maxlength" autocomplete="off" id="documentnote" name="documentnote" maxlength="100">
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="documentdate" class="form-label">Document Date <span class="required">*</span></label>
                                    <div class="input-group" id="document-date-container">
                                        <input type="text" class="form-control" id="documentdate" name="documentdate" autocomplete="off" data-date-format="m/dd/yyyy" data-date-container="#document-date-container" data-provide="datepicker" data-date-autoclose="true">
                                        <span class="input-group-text"><i class="mdi mdi-calendar"></i></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="mb-3">
                                    <label for="documentfile" class="form-label">Document <span class="required">*</span></label>
                                    <input type="file" class="form-control" id="documentfile" name="documentfile">
                                </div>
                            </div>
                        </div>';
            }
            else if($formtype == 'import employee document form'){
                $form .= '<div class="row">
                                    <div class="col-md-12 document-repeater">
                                        <div data-repeater-list="documents">
                                            <div data-repeater-item class="row">
                                                <div class="col-md-4">
                                                    <div class="mb-3">
                                                        <label class="form-label">Employee <span class="required">*</span></label>
                                                        <select class="form-select docemployee">
                                                        <option value="">--</option>';
                                                        $form .= $api->Agenerate_active_employee_options();
                                                        $form .='</select>
                                                    </div>
                                                </div>
                                                <div class="col-md-4">
                                                    <div class="mb-3">
                                                        <label for="documentname" class="form-label">Document Name <span class="required">*</span></label>
                                                        <input type="text" class="form-control documentname" autocomplete="off" maxlength="100">
                                                    </div>
                                                </div>
                                                <div class="col-md-4">
                                                    <div class="mb-3">
                                                        <label for="category" class="form-label">Document Category <span class="required">*</span></label>
                                                        <select class="form-select category">
                                                            <option value="">--</option>';
                                                        $form .= $api->generate_system_options('EMPLOYEEDOC');
                                                        $form .='</select>
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="mb-3">
                                                        <label for="documentnote" class="form-label">Document Note <span class="required">*</span></label>
                                                        <input type="text" class="form-control documentnote" autocomplete="off" maxlength="100">
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="mb-3">
                                                        <label for="documentfile" class="form-label">Document <span class="required">*</span></label>
                                                        <input type="file" class="form-control" name="documentfile">
                                                    </div>
                                                </div>
                                                <div class="col-md-12">
                                                    <div class="mb-3">
                                                        <label class="form-label"></label>
                                                        <button data-repeater-delete type="button" class="btn btn-danger waves-effect waves-light">
                                                            <i class="bx bx-trash font-size-16 align-middle"></i>
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <input data-repeater-create type="button" class="btn btn-success mt-3 mt-lg-0 mb-3" value="Add Document"/>
                                    </div>
                            </div>';
            }
            else if($formtype == 'reject leave form'){
                $form .= '<div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="rejectionreason" class="form-label">Rejection Reason <span class="required">*</span></label>
                                        <input type="hidden" id="leaveid" name="leaveid">
                                        <input type="hidden" id="employeeid" name="employeeid">
                                        <textarea class="form-control maxlength" id="rejectionreason" name="rejectionreason" maxlength="500" rows="3"></textarea>
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'cancel leave form' || $formtype == 'cancel leave application form'){
                $form .= '<div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="cancelationreason" class="form-label">Cancelation Reason <span class="required">*</span></label>
                                        <input type="hidden" id="leaveid" name="leaveid">
                                        <input type="hidden" id="employeeid" name="employeeid">
                                        <textarea class="form-control maxlength" id="cancelationreason" name="cancelationreason" maxlength="500" rows="3"></textarea>
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'employee attendance log form'){
                $form .= '<div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <input type="hidden" id="attendanceid" name="attendanceid">
                                        <input type="hidden" id="locked" name="locked">
                                        <label for="timeindate" class="form-label">Time In Date <span class="required">*</span></label>
                                        <div class="input-group" id="time-in-date-container">
                                            <input type="text" class="form-control" id="timeindate" name="timeindate" autocomplete="off" data-date-format="m/dd/yyyy" data-date-container="#time-in-date-container" data-provide="datepicker" data-date-autoclose="true">
                                            <span class="input-group-text"><i class="mdi mdi-calendar"></i></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="timein" class="form-label">Time In <span class="required">*</span></label>
                                        <input type="time" id="timein" name="timein" class="form-control" autocomplete="off">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="timeoutdate" class="form-label">Time Out Date</label>
                                        <div class="input-group" id="time-out-date-container">
                                            <input type="text" class="form-control" id="timeoutdate" name="timeoutdate" autocomplete="off" data-date-format="m/dd/yyyy" data-date-container="#time-out-date-container" data-provide="datepicker" data-date-autoclose="true">
                                            <span class="input-group-text"><i class="mdi mdi-calendar"></i></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="timeout" class="form-label">Time Out</label>
                                        <input type="time" id="timeout" name="timeout" class="form-control" autocomplete="off">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="attachment_file" class="form-label">Attachment <span class="required">*</span></label>
                                        <input class="form-control" type="file" name="attachment_file" id="attachment_file">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="remarks" class="form-label">Remarks</label>
                                        <textarea class="form-control maxlength" id="remarks" name="remarks" maxlength="500" rows="3"></textarea>
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'deduction type form'){
                $form .= '<div class="row">
                                <div class="col-md-7">
                                    <div class="mb-3">
                                        <label for="deductiontype" class="form-label">Deduction Type <span class="required">*</span></label>
                                        <input type="hidden" id="deductiontypeid" name="deductiontypeid">
                                        <input type="text" class="form-control maxlength" autocomplete="off" id="deductiontype" name="deductiontype" maxlength="200">
                                    </div>
                                </div>
                                <div class="col-md-5">
                                    <div class="mb-3">
                                        <label for="category" class="form-label">Category <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="category" name="category">
                                        <option value="">--</option>';
                                        $form .= $api->generate_system_options('DEDUCTIONCATEGORY');
                                        $form .='</select>
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'payroll specification form'){
                $form .= '<div class="row">
                            <div class="col-md-12">
                                <div class="mb-3">
                                    <label for="specemployee" class="form-label">Employee <span class="required">*</span></label>
                                    <input type="hidden" id="deductioncategory">
                                    <select class="form-control form-select2" multiple="multiple" id="specemployee" name="specemployee">';
                                    $form .= $api->generate_employee_options();
                                    $form .='</select>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="specificationtype" class="form-label">Specification Type <span class="required">*</span></label>
                                    <select class="form-control form-select2" id="specificationtype" name="specificationtype">
                                    <option value="">--</option>';
                                    $form .= $api->generate_system_options('SPECTYPE');
                                    $form .='</select>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="specificationcategory" class="form-label">Category <span class="required">*</span></label>
                                    <select class="form-control form-select2" id="specificationcategory" name="specificationcategory" disabled>
                                        <option value="">--</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="specstartdate" class="form-label">Start Date <span class="required">*</span></label>
                                    <div class="input-group" id="spec-start-date-container">
                                        <input type="text" class="form-control" id="specstartdate" name="specstartdate" autocomplete="off" data-date-format="m/dd/yyyy" data-date-container="#spec-start-date-container" data-provide="datepicker" data-date-autoclose="true">
                                        <span class="input-group-text"><i class="mdi mdi-calendar"></i></span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="specenddate" class="form-label">End Date</label>
                                    <input id="specenddate" name="specenddate" class="form-control" type="text" readonly>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label for="specamount" class="form-label">Amount</label>
                                    <input id="specamount" name="specamount" class="form-control" type="number" min="0" step="0.01">
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="mb-3">
                                    <label class="form-label">Recurrence Pattern</label>
                                    <select class="form-control form-select2" id="recurrencepattern" name="recurrencepattern">
                                    <option value="">--</option>';
                                    $form .= $api->generate_system_options('RECURRENCEPATTERN');
                                    $form .='</select>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="mb-3">
                                    <label for="recurrencecount" class="form-label">Counter</label>
                                    <input id="recurrencecount" name="recurrencecount" class="form-control" type="number" min="0">
                                </div>
                            </div>
                        </div>';
            }
            else if($formtype == 'update payroll specification form'){
                $form .= '<div class="row">
                            <div class="col-md-12">
                                <div class="mb-3">
                                    <label for="specemployee" class="form-label">Employee <span class="required">*</span></label>
                                    <input type="hidden" id="specid" name="specid">
                                    <input type="hidden" id="deductioncategory">
                                    <input type="hidden" id="payrollspecstatus">
                                    <input type="hidden" id="payrollid">
                                    <input type="hidden" id="updatespecamount">
                                    <select class="form-control form-select2" id="specemployee" name="specemployee">';
                                    $form .= $api->generate_employee_options();
                                    $form .='</select>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="specificationtype" class="form-label">Specification Type <span class="required">*</span></label>
                                    <select class="form-control form-select2" id="specificationtype" name="specificationtype">
                                    <option value="">--</option>';
                                    $form .= $api->generate_system_options('SPECTYPE');
                                    $form .='</select>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="specificationcategory" class="form-label">Category <span class="required">*</span></label>
                                    <select class="form-control form-select2" id="specificationcategory" name="specificationcategory" disabled>
                                        <option value="">--</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="specpayrolldate" class="form-label">Payroll Date <span class="required">*</span></label>
                                    <div class="input-group" id="spec-payroll-date-container">
                                        <input type="text" class="form-control" id="specpayrolldate" name="specpayrolldate" autocomplete="off" data-date-format="m/dd/yyyy" data-date-container="#spec-payroll-date-container" data-provide="datepicker" data-date-autoclose="true">
                                        <span class="input-group-text"><i class="mdi mdi-calendar"></i></span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="specamount" class="form-label">Amount</label>
                                    <input id="specamount" name="specamount" class="form-control" type="number" min="0" step="0.01">
                                </div>
                            </div>
                        </div>';
            }
            else if($formtype == 'deduction amount form'){
                $form .= '<div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="startrange" class="form-label">Start Range <span class="required">*</span></label>
                                    <input type="hidden" id="deductiontypeid" name="deductiontypeid">
                                    <input id="startrange" name="startrange" class="form-control" type="number" min="0" step="0.01">
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="endrange" class="form-label">End Range <span class="required">*</span></label>
                                    <input id="endrange" name="endrange" class="form-control" type="number" min="0" step="0.01">
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="mb-3">
                                    <label for="deductionamount" class="form-label">Deduction Amount <span class="required">*</span></label>
                                    <input id="deductionamount" name="deductionamount" class="form-control" type="number" min="0" step="0.01">
                                </div>
                            </div>
                        </div>';
            }
            else if($formtype == 'import deduction amount form' || $formtype == 'import main deduction amount form'){
                $form .= '<div class="row">
                            <div class="col-md-12">
                                <div class="mb-3">
                                    <label for="deduction_amount_file" class="form-label">Deduction Amount File (CSV) <span class="required">*</span></label>
                                    <input class="form-control" type="file" name="deduction_amount_file" id="deduction_amount_file">
                                </div>
                            </div>
                        </div>';
            }
            else if($formtype == 'main deduction amount form'){
                $form .= '<div class="row">
                            <div class="col-md-12">
                                <div class="mb-3">
                                    <label for="deductiontypeid" class="form-label">Deduction Type <span class="required">*</span></label>
                                    <select class="form-control form-select2" id="deductiontypeid" name="deductiontypeid">
                                    <option value="">--</option>';
                                    $form .= $api->generate_deduction_type_options('GOVERNMENT');
                                    $form .='</select>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="startrange" class="form-label">Start Range <span class="required">*</span></label>
                                    <input id="startrange" name="startrange" class="form-control" type="number" min="0" step="0.01">
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="endrange" class="form-label">End Range <span class="required">*</span></label>
                                    <input id="endrange" name="endrange" class="form-control" type="number" min="0" step="0.01">
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="mb-3">
                                    <label for="deductionamount" class="form-label">Deduction Amount <span class="required">*</span></label>
                                    <input id="deductionamount" name="deductionamount" class="form-control" type="number" min="0" step="0.01">
                                </div>
                            </div>
                        </div>';
            }
            else if($formtype == 'allowance type form'){
                $form .= '<div class="row">
                                <div class="col-md-8">
                                    <div class="mb-3">
                                        <label for="allowancetype" class="form-label">Allowance Type <span class="required">*</span></label>
                                        <input type="hidden" id="allowancetypeid" name="allowancetypeid">
                                        <input type="text" class="form-control maxlength" autocomplete="off" id="allowancetype" name="allowancetype" maxlength="200">
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label class="form-label">Tax Type <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="taxtype" name="taxtype">
                                        <option value="">--</option>';
                                        $form .= $api->generate_system_options('TAXTYPE');
                                        $form .='</select>
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'other income type form'){
                $form .= '<div class="row">
                                <div class="col-md-8">
                                    <div class="mb-3">
                                        <label for="otherincometype" class="form-label">Other Income Type <span class="required">*</span></label>
                                        <input type="hidden" id="otherincometypeid" name="otherincometypeid">
                                        <input type="text" class="form-control maxlength" autocomplete="off" id="otherincometype" name="otherincometype" maxlength="200">
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label class="form-label">Tax Type <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="taxtype" name="taxtype">
                                        <option value="">--</option>';
                                        $form .= $api->generate_system_options('TAXTYPE');
                                        $form .='</select>
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'user account form'){
                $form .= '<div class="row">
                            <div class="col-md-12">
                                <div class="mb-3">
                                    <label for="employee" class="form-label">Employee</label>
                                    <select class="form-control form-select2" id="employeewouser" name="employee">
                                    <option value="">--</option>';
                                    $form .= $api->generate_employee_without_user_account_options();
                                    $form .='</select>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label for="usercd" class="form-label">Username <span class="required">*</span></label>
                                    <input type="text" class="form-control maxlength" autocomplete="off" id="usercd" name="usercd" maxlength="50">
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label for="password" class="form-label">Password <span class="required">*</span></label>
                                    <div class="input-group auth-pass-inputgroup">
                                        <input type="password" id="password" name="password" class="form-control" aria-label="Password" aria-describedby="password-addon">
                                        <button class="btn btn-light" type="button" id="password-addon"><i class="mdi mdi-eye-outline"></i></button>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label class="form-label">Role <span class="required">*</span></label>
                                    <select class="form-control form-select2" id="role" name="role">
                                    <option value="">--</option>';
                                    $form .= $api->generate_role_options();
                                    $form .='</select>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-3">
                                <div class="mb-3">
                                    <label for="firstname" class="form-label">First Name <span class="required">*</span></label>
                                    <input type="text" class="form-control maxlength" autocomplete="off" id="firstname" name="firstname" maxlength="100">
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="mb-3">
                                    <label for="middlename" class="form-label">Middle Name</label>
                                    <input type="text" class="form-control maxlength" autocomplete="off" id="middlename" name="middlename" maxlength="100">
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="mb-3">
                                    <label for="lastname" class="form-label">Last Name <span class="required">*</span></label>
                                    <input type="text" class="form-control maxlength" autocomplete="off" id="lastname" name="lastname" maxlength="100">
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="mb-3">
                                    <label class="form-label">Suffix</label>
                                    <select class="form-control form-select2" id="suffix" name="suffix">
                                    <option value="">--</option>';
                                    $form .= $api->generate_system_options('SUFFIX');
                                    $form .='</select>
                                </div>
                            </div>
                        </div>';
            }
            else if($formtype == 'update user account form'){
                $form .= '<div class="row">
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label for="usercd" class="form-label">Username <span class="required">*</span></label>
                                    <input type="hidden" id="employeeid">
                                    <input type="text" class="form-control maxlength" autocomplete="off" id="usercd" name="usercd" maxlength="50" readonly>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label for="password" class="form-label">Password</label>
                                    <div class="input-group auth-pass-inputgroup">
                                        <input type="password" id="password" name="password" class="form-control" aria-label="Password" aria-describedby="password-addon">
                                        <button class="btn btn-light " type="button" id="password-addon"><i class="mdi mdi-eye-outline"></i></button>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label class="form-label">Role <span class="required">*</span></label>
                                    <select class="form-control form-select2" id="role" name="role">
                                    <option value="">--</option>';
                                    $form .= $api->generate_role_options();
                                    $form .='</select>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-3">
                                <div class="mb-3">
                                    <label for="firstname" class="form-label">First Name <span class="required">*</span></label>
                                    <input type="text" class="form-control maxlength" autocomplete="off" id="firstname" name="firstname" maxlength="100">
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="mb-3">
                                    <label for="middlename" class="form-label">Middle Name</label>
                                    <input type="text" class="form-control maxlength" autocomplete="off" id="middlename" name="middlename" maxlength="100">
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="mb-3">
                                    <label for="lastname" class="form-label">Last Name <span class="required">*</span></label>
                                    <input type="text" class="form-control maxlength" autocomplete="off" id="lastname" name="lastname" maxlength="100">
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="mb-3">
                                    <label class="form-label">Suffix</label>
                                    <select class="form-control form-select2" id="suffix" name="suffix">
                                    <option value="">--</option>';
                                    $form .= $api->generate_system_options('SUFFIX');
                                    $form .='</select>
                                </div>
                            </div>
                        </div>';
            }
            else if($formtype == 'get location form'){
                $form .= '<div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="remarks" class="form-label">Remarks</label>
                                        <textarea class="form-control maxlength" id="remarks" name="remarks" maxlength="500" rows="3"></textarea>
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'email notification form'){
                $form .= '<div class="mb-3">
                                <label for="notification" class="form-label">Notification <span class="required">*</span></label>
                                <input type="hidden" id="notificationid" name="notificationid">
                                <input type="text" class="form-control maxlength" autocomplete="off" id="notification" name="notification" maxlength="100">
                            </div>';
            }
            else if($formtype == 'email recipient form'){
                $form .= '<div class="row">
                            <div class="col-md-12">
                                <div class="mb-3">
                                    <input type="hidden" id="notificationid" name="notificationid">
                                    <input type="hidden" id="recipientid" name="recipientid">
                                    <label for="email" class="form-label">Email <span class="required">*</span></label>
                                    <input id="email" name="email" class="form-control email-inputmask maxlength" maxlength="100" autocomplete="off">
                                </div>
                            </div>
                        </div>';

            }
            else if($formtype == 'test email form'){
                $form .= '<div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="email" class="form-label">Email <span class="required">*</span></label>
                                        <input id="email" name="email" class="form-control email-inputmask maxlength" maxlength="200" autocomplete="off">
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'generate payroll form'){
                $form .= '<div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="generatepayrolloption" class="form-label">Generation Option <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="generatepayrolloption" name="generatepayrolloption">
                                            <optgroup label="Default Generation Options">
                                                <option value="all">All Employees</option>
                                                <option value="selected">Selected Employee</option>
                                                <option value="exclude">Exclude Employee</option>
                                            </optgroup>
                                            <optgroup label="Payroll Group">
                                                '. $api->generate_payroll_group_option() .'
                                            </optgroup>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="employee" class="form-label">Employee</label>
                                        <select class="form-control form-select2" multiple="multiple" id="employee" name="employee" disabled>';
                                        $form .= $api->generate_active_employee_options();
                                        $form .='</select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Payroll Start Date <span class="required">*</span></label>
                                        <div class="input-group" id="payroll-start-date-container">
                                            <input type="text" class="form-control" id="payrollstartdate" name="payrollstartdate" autocomplete="off" data-date-format="m/dd/yyyy" data-date-container="#payroll-start-date-container" data-provide="datepicker" data-date-autoclose="true">
                                            <span class="input-group-text"><i class="mdi mdi-calendar"></i></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Payroll End Date <span class="required">*</span></label>
                                        <div class="input-group" id="payroll-end-date-container">
                                            <input type="text" class="form-control" id="payrollenddate" name="payrollenddate" autocomplete="off" data-date-format="m/dd/yyyy" data-date-container="#payroll-end-date-container" data-provide="datepicker" data-date-autoclose="true">
                                            <span class="input-group-text"><i class="mdi mdi-calendar"></i></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="remarks" class="form-label">Remarks</label>
                                        <textarea class="form-control maxlength" id="remarks" name="remarks" maxlength="500" rows="3"></textarea>
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'office shift form'){
                $form .= '<div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="employee" class="form-label">Employee <span class="required">*</span></label>
                                        <select class="form-control form-select2" multiple="multiple" id="employee" name="employee">';
                                        $form .= $api->generate_active_employee_options();
                                        $form .='</select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label for="timein" class="form-label">Time In <span class="required">*</span></label>
                                        <input type="time" id="timein" name="timein" class="form-control" autocomplete="off">
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label for="timeout" class="form-label">Time Out <span class="required">*</span></label>
                                        <input type="time" id="timeout" name="timeout" class="form-control" autocomplete="off">
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label for="late" class="form-label">Late Mark After (minutes) <span class="required">*</span></label>
                                        <input id="late" name="late" class="form-control" type="number" min="1" value="1">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label for="lunchstarttime" class="form-label">Lunch Start Time <span class="required">*</span></label>
                                        <input type="time" id="lunchstarttime" name="lunchstarttime" class="form-control" autocomplete="off">
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label for="lunchendtime" class="form-label">Lunch End Time <span class="required">*</span></label>
                                        <input type="time" id="lunchendtime" name="lunchendtime" class="form-control" autocomplete="off">
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label for="halfday" class="form-label">Half-Day Mark <span class="required">*</span></label>
                                        <input type="time" id="halfday" name="halfday" class="form-control" autocomplete="off">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="timein" class="form-label">DTR Day <span class="required">*</span></label>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-3">
                                    <div class="form-group">
                                        <div class="form-check form-switch mb-3">
                                            <input class="form-check-input dtrday" type="checkbox" id="monday" value="1">
                                            <label class="form-check-label" for="monday">Monday</label>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-3">
                                    <div class="form-group">
                                        <div class="form-check form-switch mb-3">
                                            <input class="form-check-input dtrday" type="checkbox" id="tuesday" value="2">
                                            <label class="form-check-label" for="tuesday">Tuesday</label>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-3">
                                    <div class="form-group">
                                        <div class="form-check form-switch mb-3">
                                            <input class="form-check-input dtrday" type="checkbox" id="wednesday" value="3">
                                            <label class="form-check-label" for="wednesday">Wednesday</label>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-3">
                                    <div class="form-group">
                                        <div class="form-check form-switch mb-3">
                                            <input class="form-check-input dtrday" type="checkbox" id="thursday" value="4">
                                            <label class="form-check-label" for="thursday">Thursday</label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-3">
                                    <div class="form-group">
                                        <div class="form-check form-switch mb-3">
                                            <input class="form-check-input dtrday" type="checkbox" id="friday" value="5">
                                            <label class="form-check-label" for="friday">Friday</label>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-3">
                                    <div class="form-group">
                                        <div class="form-check form-switch mb-3">
                                            <input class="form-check-input dtrday" type="checkbox" id="saturday" value="6">
                                            <label class="form-check-label" for="saturday">Saturday</label>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-3">
                                    <div class="form-group">
                                        <div class="form-check form-switch mb-3">
                                            <input class="form-check-input dtrday" type="checkbox" id="sunday" value="0">
                                            <label class="form-check-label" for="sunday">Sunday</label>
                                        </div>
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'update office shift form'){
                $form .= '<div class="row">
                                <div class="col-md-8">
                                    <div class="mb-3">
                                        <label for="employee" class="form-label">Employee</label>
                                        <input type="hidden" id="employeeid" name="employeeid">
                                        <input type="hidden" id="dtrday" name="dtrday">
                                        <input type="text" class="form-control" id="employeename" readonly/>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label for="dtrdayname" class="form-label">DTR Day</label>
                                        <input type="text" class="form-control" id="dtrdayname" readonly/>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-2">
                                    <div class="mb-3">
                                        <label for="dayoff" class="form-label">Day Off <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="dayoff" name="dayoff">
                                            <option value="">--</option>
                                            <option value="1">True</option>
                                            <option value="0">False</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="mb-3">
                                        <label for="timein" class="form-label">Time In <span class="required">*</span></label>
                                        <input type="time" id="timein" name="timein" class="form-control" autocomplete="off">
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="mb-3">
                                        <label for="timeout" class="form-label">Time Out <span class="required">*</span></label>
                                        <input type="time" id="timeout" name="timeout" class="form-control" autocomplete="off">
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label for="late" class="form-label">Late Mark After (minutes) <span class="required">*</span></label>
                                        <input id="late" name="late" class="form-control" type="number" min="1" value="1">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label for="lunchstarttime" class="form-label">Lunch Start Time <span class="required">*</span></label>
                                        <input type="time" id="lunchstarttime" name="lunchstarttime" class="form-control" autocomplete="off">
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label for="lunchendtime" class="form-label">Lunch End Time <span class="required">*</span></label>
                                        <input type="time" id="lunchendtime" name="lunchendtime" class="form-control" autocomplete="off">
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label for="halfday" class="form-label">Half-Day Mark <span class="required">*</span></label>
                                        <input type="time" id="halfday" name="halfday" class="form-control" autocomplete="off">
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'pay payroll form'){
                $form .= '<div class="mb-3">
                                <label for="bankreference" class="form-label">Bank Transaction Number <span class="required">*</span></label>
                                <input type="hidden" id="payrollid" name="payrollid">
                                <input type="hidden" id="employeeid" name="employeeid">
                                <input type="text" class="form-control maxlength" autocomplete="off" id="bankreference" name="bankreference" maxlength="50">
                            </div>';
            }
            else if($formtype == 'payroll group form'){
                $form .= '<div class="mb-3">
                                <label for="payrollgroup" class="form-label">Payroll Group <span class="required">*</span></label>
                                <input type="hidden" id="payrollgroupid" name="payrollgroupid">
                                <input type="text" class="form-control maxlength" autocomplete="off" id="payrollgroup" name="payrollgroup" maxlength="100">
                            </div>';
            }
            else if($formtype == 'payroll group employee form'){
                $form .= '<div class="row">
                                '. $api->generate_payroll_group_employee_check_box() .'
                            </div>';
            }
            else if($formtype == 'database backup form'){
                $form .= '<div class="mb-3">
                                <label for="filename" class="form-label">File Name <span class="required">*</span></label>
                                <input type="text" class="form-control" autocomplete="off" id="filename" name="filename" maxlength="50">
                            </div>';
            }
            else if($formtype == 'attendance log form'){
                $form .= '<div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="employeeid" class="form-label">Employee <span class="required">*</span></label>
                                        <input type="hidden" id="attendanceid" name="attendanceid">
                                        <input type="hidden" id="locked" name="locked">
                                        <select class="form-control form-select2" id="employeeid" name="employeeid">
                                        <option value="">--</option>';
                                        $form .= $api->generate_employee_options();
                                        $form .='</select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="timeindate" class="form-label">Time In Date <span class="required">*</span></label>
                                        <div class="input-group" id="time-in-date-container">
                                            <input type="text" class="form-control" id="timeindate" name="timeindate" autocomplete="off" data-date-format="m/dd/yyyy" data-date-container="#time-in-date-container" data-provide="datepicker" data-date-autoclose="true">
                                            <span class="input-group-text"><i class="mdi mdi-calendar"></i></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="timein" class="form-label">Time In <span class="required">*</span></label>
                                        <input type="time" id="timein" name="timein" class="form-control" autocomplete="off">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="timeoutdate" class="form-label">Time Out Date</label>
                                        <div class="input-group" id="time-out-date-container">
                                            <input type="text" class="form-control" id="timeoutdate" name="timeoutdate" autocomplete="off" data-date-format="m/dd/yyyy" data-date-container="#time-out-date-container" data-provide="datepicker" data-date-autoclose="true">
                                            <span class="input-group-text"><i class="mdi mdi-calendar"></i></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="timeout" class="form-label">Time Out</label>
                                        <input type="time" id="timeout" name="timeout" class="form-control" autocomplete="off">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="attachment_file" class="form-label">Attachment <span class="required">*</span></label>
                                        <input class="form-control" type="file" name="attachment_file" id="attachment_file">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="remarks" class="form-label">Remarks</label>
                                        <textarea class="form-control maxlength" id="remarks" name="remarks" maxlength="500" rows="3"></textarea>
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'import attendance log form'){
                $form .= '<div class="row">
                            <div class="col-md-12">
                                <div class="mb-3">
                                    <label for="attendance_log_file" class="form-label">Attendance Log File (CSV) <span class="required">*</span></label>
                                    <input class="form-control" type="file" name="attendance_log_file" id="attendance_log_file">
                                </div>
                            </div>
                        </div>';
            }
            else if($formtype == 'career form'){
                $form .= '<div class="row">
                            <div class="col-md-8">
                                <div class="mb-3">
                                    <label for="position" class="form-label">Position <span class="required">*</span></label>
                                    <input type="hidden" id="careerid" name="careerid">
                                    <input type="hidden" id="publish">
                                    <input type="text" class="form-control maxlength" autocomplete="off" id="position" name="position" maxlength="100">
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label for="availableposition" class="form-label">Available Position</label>
                                    <input id="availableposition" name="availableposition" class="form-control" type="number" min="0">
                                </div>
                            </div>
                        </div>
                        <div class = "row">
                             <div class="col-md-12">
                                <div class="mb-3">
                                    <label class="form-label">Branch <span class="required">*</span></label>
                                    <select class="form-control form-select" id="branch" name="branch">
                                    <option value="">--</option>';
                                    $form .= $api->generate_branch_options();
                                    $form .='</select>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="mb-3">
                                    <label for="careersummary" class="form-label">Career Summary <span class="required">*</span></label>
                                    <textarea class="form-control maxlength" id="careersummary" name="careersummary" maxlength="500" rows="5"></textarea>
                                </div>
                            </div>
                        </div>';

            }
            else if($formtype == 'import employee leave form'){
                $form .= '<div class="row">
                            <div class="col-md-12">
                                <div class="mb-3">
                                    <label for="employee_leave_file" class="form-label">Employee Leave File (CSV) <span class="required">*</span></label>
                                    <input class="form-control" type="file" name="employee_leave_file" id="employee_leave_file">
                                </div>
                            </div>
                        </div>';
            }
            else if($formtype == 'import payroll specification form'){
                $form .= '<div class="row">
                            <div class="col-md-12">
                                <div class="mb-3">
                                    <label for="payroll_specification_file" class="form-label">Payroll Specification File (CSV) <span class="required">*</span></label>
                                    <input class="form-control" type="file" name="payroll_specification_file" id="payroll_specification_file">
                                </div>
                            </div>
                        </div>';
            }
            else if($formtype == 'apply leave form'){
                $form .= '<div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="employeeleavetype" class="form-label">Leave Type <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="employeeleavetype" name="employeeleavetype">
                                        <option value="">--</option>';
                                        $form .= $api->generate_available_leave_type_options($username);
                                        $form .='</select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="leaveduration" class="form-label">Duration <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="leaveduration" name="leaveduration">
                                        <option value="">--</option>';
                                        $form .= $api->generate_system_options('LVDURATION');
                                        $form .='</select>
                                    </div>
                                </div>
                                <div class="col-md-12" style="display:none;" id="leave_attachement_container">
                                    <div class="mb-3">
                                        <label>  Leave attachement <span class="required">*</span></label>
                                        <input type="file" id="leave_attachement" class="form-control" required name="leave_attachement">
                                    </div>
                                </div>
                            </div>
                            <div class="row" id="leave-date-container"></div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="reason" class="form-label">Reason <span class="required">*</span></label>
                                        <textarea class="form-control maxlength" id="reason" name="reason" maxlength="500" rows="3"></textarea>
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'request employee attendance adjustment form'){
                $form .= '<div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <input type="hidden" id="attendanceid" name="attendanceid">
                                        <input type="hidden" id="employeeid" name="employeeid">
                                        <input type="hidden" id="timeoutdatedef" name="timeoutdatedef">
                                        <input type="hidden" id="timeoutdef" name="timeoutdef">
                                        <label for="timeindate" class="form-label">Time In Date <span class="required">*</span></label>
                                        <div class="input-group" id="time-in-date-container">
                                            <input type="text" class="form-control" id="timeindate" name="timeindate" autocomplete="off" data-date-format="m/dd/yyyy" data-date-container="#time-in-date-container" data-provide="datepicker" data-date-autoclose="true">
                                            <span class="input-group-text"><i class="mdi mdi-calendar"></i></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="timein" class="form-label">Time In <span class="required">*</span></label>
                                        <input type="time" id="timein" name="timein" class="form-control" autocomplete="off">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="timeoutdate" class="form-label">Time Out Date</label>
                                        <div class="input-group" id="time-out-date-container">
                                            <input type="text" class="form-control" id="timeoutdate" name="timeoutdate" autocomplete="off" data-date-format="m/dd/yyyy" data-date-container="#time-out-date-container" data-provide="datepicker" data-date-autoclose="true">
                                            <span class="input-group-text"><i class="mdi mdi-calendar"></i></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="timeout" class="form-label">Time Out</label>
                                        <input type="time" id="timeout" name="timeout" class="form-control" autocomplete="off">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="attachment_file" class="form-label">Attachment <span class="required">*</span></label>
                                        <input class="form-control" type="file" name="attachment_file" id="attachment_file">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="reason" class="form-label">Reason <span class="required">*</span></label>
                                        <textarea class="form-control maxlength" id="reason" name="reason" maxlength="500" rows="3"></textarea>
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'update employee attendance adjustment form'){
                $form .= '<div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <input type="hidden" id="adjustmentid" name="adjustmentid">
                                        <input type="hidden" id="attendanceid" name="attendanceid">
                                        <input type="hidden" id="employeeid" name="employeeid">
                                        <input type="hidden" id="timeoutdatedef" name="timeoutdatedef">
                                        <input type="hidden" id="timeoutdef" name="timeoutdef">
                                        <input type="hidden" id="status" name="status">
                                        <label for="timeindate" class="form-label">Time In Date <span class="required">*</span></label>
                                        <div class="input-group" id="time-in-date-container">
                                            <input type="text" class="form-control" id="timeindate" name="timeindate" autocomplete="off" data-date-format="m/dd/yyyy" data-date-container="#time-in-date-container" data-provide="datepicker" data-date-autoclose="true">
                                            <span class="input-group-text"><i class="mdi mdi-calendar"></i></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="timein" class="form-label">Time In <span class="required">*</span></label>
                                        <input type="time" id="timein" name="timein" class="form-control" autocomplete="off">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="timeoutdate" class="form-label">Time Out Date</label>
                                        <div class="input-group" id="time-out-date-container">
                                            <input type="text" class="form-control" id="timeoutdate" name="timeoutdate" autocomplete="off" data-date-format="m/dd/yyyy" data-date-container="#time-out-date-container" data-provide="datepicker" data-date-autoclose="true">
                                            <span class="input-group-text"><i class="mdi mdi-calendar"></i></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="timeout" class="form-label">Time Out</label>
                                        <input type="time" id="timeout" name="timeout" class="form-control" autocomplete="off">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="attachment_file" class="form-label">Attachment</label>
                                        <input class="form-control" type="file" name="attachment_file" id="attachment_file">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="reason" class="form-label">Reason <span class="required">*</span></label>
                                        <textarea class="form-control maxlength" id="reason" name="reason" maxlength="500" rows="3"></textarea>
                                    </div>
                                </div>
                            </div>';
            }

            else if($formtype == 'filter attendance summary' || $formtype == 'filter transmittal' || $formtype == 'filter suggest to win' || $formtype == 'filter suggest to win approval' || $formtype == 'filter employee attendance record' || $formtype == 'filter employee attendance adjustment' || $formtype == 'filter attendance log' || $formtype == 'filter training room log' || $formtype == 'filter health declaration summary' || $formtype == 'filter meeting' || $formtype == 'filter attendance adjustment'){
                $form .= '<div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Start Date <span class="required">*</span></label>
                                        <div class="input-group" id="start-date-container">
                                            <input type="text" class="form-control" id="startdate" name="startdate" autocomplete="off" data-date-format="m/dd/yyyy" data-date-container="#start-date-container" data-provide="datepicker" data-date-autoclose="true" value="'. date('m/01/Y') .'">
                                            <span class="input-group-text"><i class="mdi mdi-calendar"></i></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">End Date <span class="required">*</span></label>
                                        <div class="input-group" id="end-date-container">
                                            <input type="text" class="form-control" id="enddate" name="enddate" autocomplete="off" data-date-format="m/dd/yyyy" data-date-container="#end-date-container" data-provide="datepicker" data-date-autoclose="true" value="'. date('m/t/Y') .'">
                                            <span class="input-group-text"><i class="mdi mdi-calendar"></i></span>
                                        </div>
                                    </div>
                                </div>
                            </div>';
            }

            else if($formtype == 'filter payroll' || $formtype == 'filter payroll summary'){
                $form .= '<div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label class="form-label">Payroll Period <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="payrollperiod" name="payrollperiod">
                                        '. $api->generate_payroll_period_options() .'
                                        </select>
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'telephone log form'){
                $form .= '<div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <input type="hidden" id="logid" name="logid">
                                        <input type="hidden" id="status" name="status">
                                        <label for="recipient" class="form-label">Recipient <span class="required">*</span></label>
                                        <input type="text" class="form-control maxlength" autocomplete="off" id="recipient" name="recipient" maxlength="300">
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="telephone" class="form-label">Telephone/Mobile <span class="required">*</span></label>
                                        <input type="text" class="form-control maxlength" autocomplete="off" id="telephone" name="telephone" maxlength="30">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="initialcalldate" class="form-label">Initial Call Date <span class="required">*</span></label>
                                        <div class="input-group" id="initial-call-date-container">
                                            <input type="text" class="form-control" id="initialcalldate" name="initialcalldate" autocomplete="off" data-date-format="m/dd/yyyy" data-date-container="#initial-call-date-container" data-provide="datepicker" data-date-autoclose="true">
                                            <span class="input-group-text"><i class="mdi mdi-calendar"></i></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="initialcalltime" class="form-label">Initial Call Time <span class="required">*</span></label>
                                        <input type="time" id="initialcalltime" name="initialcalltime" class="form-control" autocomplete="off">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="reason" class="form-label">Reason <span class="required">*</span></label>
                                        <textarea class="form-control maxlength" id="reason" name="reason" maxlength="500" rows="3"></textarea>
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'consumed telephone log form'){
                $form .= '<div class="row">
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label for="actualcalldate" class="form-label">Actual Call Date <span class="required">*</span></label>
                                        <input type="hidden" id="logid" name="logid">
                                        <div class="input-group" id="actual-call-date-container">
                                            <input type="text" class="form-control" id="actualcalldate" name="actualcalldate" autocomplete="off" data-date-format="m/dd/yyyy" data-date-container="#actual-call-date-container" data-provide="datepicker" data-date-autoclose="true">
                                            <span class="input-group-text"><i class="mdi mdi-calendar"></i></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label for="actualcalltime" class="form-label">Actual Call Time <span class="required">*</span></label>
                                        <input type="time" id="actualcalltime" name="actualcalltime" class="form-control" autocomplete="off">
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label for="duration" class="form-label">Duration (Minutes)</label>
                                        <input id="duration" name="duration" class="form-control" type="number" min="0" step="0.01">
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'document form'){

                $form .= '
                <div class="row">
                    <div class="col-md-12">
                        <div class="mb-3">
                            <label for="publish" class="form-label">Publish <span class="required">*</span></label>
                            <select class="form-control" id="publish" name="publish">
                                <option value="0">Pending</option>
                            </select>

                        </div>
                    </div>
                </div>

                <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="document_file" class="form-label">Document <span class="required">*</span></label>
                                        <input type="hidden" id="documentid" name="documentid">
                                        <input type="hidden" id="update" name="update" value="0">
                                        <input class="form-control" type="file" name="document_file" id="document_file">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="documentname" class="form-label">Document Name <span class="required">*</span></label>
                                        <input type="text" class="form-control maxlength" autocomplete="off" id="documentname" name="documentname" maxlength="300">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="category" class="form-label">Document Category <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="category" name="category">
                                        <option value="">--</option>';
                                        $form .= $api->generate_system_options('DOCUMENTCATEGORY');
                                        $form .='</select>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-12">
                                <form onsubmit="return false;">
                                    <div class="mb-3">
                                        <label for="tags" class="form-label">Tags <span class="required">*</span></label>
                                        <input type="text" class="form-control maxlength" id="tags" name="tags" data-role="tagsinput" placeholder="Enter tags">
                                        <small class="form-text text-muted">Separate keywords with a comma, space bar, or enter key</small>
                                    </div>
                                </form>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="description" class="form-label">Description <span class="required">*</span></label>
<textarea class="form-control maxlength" id="description" name="description" maxlength="500" rows="3"></textarea>                                    </div>
                                </div>
                            </div>




                            ';
            }
                          else if($formtype == 'document form1'){
                    $employee_profile_details = $api->get_data_details_one_parameter('employee profile', $username);
                    $employee_id = $employee_profile_details[0]['EMPLOYEE_ID'];
                    $employee_department = $employee_profile_details[0]['DEPARTMENT'];

                    // Check if the user is a document authorizer
                    $is_authorizer = $api->check_authorizer($employee_department, $employee_id);
                    $assign_permission_to_employee = $api->check_role_permissions($username, 183);

                    $form .= '
                    <div class="row">
                        <div class="col-md-12">';

                    // Only show the Publish option for authorizers
                    if($assign_permission_to_employee > 1){
                        $form .= '
                            <div class="mb-3">
                                <label for="publish" class="form-label">Publish <span class="required">*</span></label>
                                <select class="form-control" id="publish" name="publish" required>
                                    <option value="0">Pending</option>
                                    <option value="2">Rescinded</option>
                                    <option value="1">Published</option>
                                </select>
                            </div>';
                    } else {
                        // Add a hidden input for non-authorizers to maintain the current publish status
                        $form .= '<input type="hidden" id="publish" name="publish" value="0">';
                    }

                    $form .= '
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-12">
                            <div class="mb-3">
                                <label for="document_file" class="form-label">Document <span class="required">*</span></label>
                                <input type="hidden" id="documentid" name="documentid">
                                <input type="hidden" id="update" name="update" value="0">
                                <input class="form-control" type="file" name="document_file" id="document_file">
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="mb-3">
                                <label for="documentname" class="form-label">Document Name <span class="required">*</span></label>
                                <input type="text" class="form-control maxlength" autocomplete="off" id="documentname" name="documentname" maxlength="300">
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="mb-3">
                                <label for="category" class="form-label">Document Category <span class="required">*</span></label>
                                <select class="form-control form-select2" id="category" name="category">
                                <option value="">--</option>';
                                $form .= $api->generate_system_options('DOCUMENTCATEGORY');
                                $form .='</select>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="mb-3">
                                <label for="tags" class="form-label">Tags <span class="required">*</span></label>
                                <input type="text" class="form-control" id="tags" name="tags" data-role="tagsinput" placeholder="Enter tags">
                                <small class="form-text text-muted">Separate keywords with a comma, space bar, or enter key</small>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="mb-3">
                                <label for="description" class="form-label">Description <span class="required">*</span></label>
                                <textarea class="form-control maxlength" id="description" name="description" maxlength="500" rows="3"></textarea>
                            </div>
                        </div>
                    </div>';
                }
            else if($formtype == 'document authorizer form'){
                $form .= '<div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label class="form-label">Department <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="department" name="department">
                                        <option value="">--</option>';
                                        $form .= $api->generate_department_options();
                                        $form .='</select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="authorizer" class="form-label">Authorizer <span class="required">*</span></label>
                                        <select class="form-control form-select2" multiple="multiple" id="authorizer">
                                        <option value="">--</option>';
                                        $form .= $api->generate_active_employee_options();
                                        $form .='</select>
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'document permission department form'){
                $form .= '<div class="row">
                                '. $api->generate_document_department_permission_check_box($username) .'
                            </div>';
            }
            else if($formtype == 'document permission employee form'){
                $form .= '<div class="row">
                                '. $api->generate_document_employee_permission_check_box() .'
                            </div>';
            }
            else if($formtype == 'download document form'){
                $form .= '<div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="password" class="form-label">Document Password <span class="required">*</span></label>
                                        <input type="hidden" id="documentid" name="documentid">
                                        <div class="input-group auth-pass-inputgroup">
                                            <input type="password" id="password" name="password" class="form-control" aria-label="Password" aria-describedby="password-addon">
                                            <button class="btn btn-light " type="button" id="password-addon"><i class="mdi mdi-eye-outline"></i></button>
                                        </div>
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'filter document form'){
                $form .= '<div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label class="form-label">Filter By <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="documentfilterby" name="documentfilterby">
                                            <option value="">--</option>
                                            <option value="author">Author</option>
                                            <option value="department">Department</option>
                                            <option value="category">Category</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label class="form-label">Filter <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="documentfiltervalue" name="documentfiltervalue" disabled>
                                            <option value="">--</option>
                                        </select>
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'search document form'){
    $form .= '<div class="row">
                    <div class="col-md-12">
                        <div class="mb-3">
                            <label class="form-label">Search By <span class="required">*</span></label>
                            <select class="form-control form-select2" id="documentsearchby" name="documentsearchby">
                                <option value="">--</option>
                                <option value="author">Author</option>
                                <option value="department">Department</option>
                                <option value="category">Category</option>
                                <option value="description">Description</option>
                                <option value="documentid">Document ID</option>
                                <option value="documentname">Document Name</option>
                                <option value="tags">Tags</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="row" id="tagsRow" style="display:none;">
                    <div class="col-md-12">
                        <div class="mb-3">
                            <label for="tags" class="form-label">Tags <span class="required">*</span></label>
                            <input type="text" name="tags" id="tags" class="form-control" data-role="tagsinput">
                            <small class="form-text text-muted">Separate keywords with a comma, space bar, or enter key</small>
                        </div>
                    </div>
                </div>
                <div class="row" id="keywordRow">
                    <div class="col-md-12">
                        <div class="mb-3">
                            <label for="documentsearch" class="form-label">Keyword <span class="required">*</span></label>
                            <input type="text" class="form-control" autocomplete="off" id="documentsearch" name="documentsearch" maxlength="100">
                        </div>
                    </div>
                </div>';
                }
                 else if($formtype == 'search document category form'){
                         $form .= '<div class="row">
                    <div class="col-md-12">
                        <div class="mb-3">
                            <label class="form-label">Search By <span class="required">*</span></label>
                            <select class="form-control form-select2" id="documentsearchby" name="documentsearchby">
                                <option value="">--</option>
                                <option value="author">Author</option>
                                <option value="department">Department</option>
                                <option value="category">Category</option>
                                <option value="description">Description</option>
                                <option value="documentid">Document ID</option>
                                <option value="documentname">Document Name</option>
                                <option value="tags">Tags</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="row" id="tagsRow" style="display:none;">
                    <div class="col-md-12">
                        <div class="mb-3">
                            <label for="tags" class="form-label">Tags <span class="required">*</span></label>
                            <input type="text" name="tags" id="tags" class="form-control" data-role="tagsinput">
                            <small class="form-text text-muted">Separate keywords with a comma, space bar, or enter key</small>
                        </div>
                    </div>
                </div>
                <div class="row" id="keywordRow">
                    <div class="col-md-12">
                        <div class="mb-3">
                            <label for="documentsearch" class="form-label">Keyword <span class="required">*</span></label>
                            <input type="text" class="form-control" autocomplete="off" id="documentsearch" name="documentsearch" maxlength="100">
                        </div>
                    </div>
                </div>';
                }
            else if($formtype == 'search document category form'){
                $form .= '<div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label class="form-label">Search By <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="documentsearchby" name="documentsearchby">
                                            <option value="">--</option>
                                            <option value="author">Author</option>
                                            <option value="department">Department</option>
                                            <option value="description">Description</option>
                                            <option value="documentid">Document ID</option>
                                            <option value="documentname">Document Name</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="documentsearch" class="form-label">Keyword <span class="required">*</span></label>
                                        <input type="text" class="form-control maxlength" autocomplete="off" id="documentsearch" name="documentsearch" maxlength="100">
                                    </div>
                                </div>
                            </div>';
            }


            else if($formtype == 'filter document category form'){
                $form .= '<div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label class="form-label">Filter By <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="documentfilterby" name="documentfilterby">
                                            <option value="">--</option>
                                            <option value="author">Author</option>
                                            <option value="department">Department</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label class="form-label">Filter <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="documentfiltervalue" name="documentfiltervalue" disabled>
                                            <option value="">--</option>
                                        </select>
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'transmittal form'){
                $form .= '<div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Department <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="transmittaldepartment" name="transmittaldepartment">
                                        <option value="">--</option>';
                                        $form .= $api->generate_department_with_employee_options();
                                        $form .='</select>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Priority Person</label>
                                        <select class="form-control form-select2" id="priorityperson" name="priorityperson" disabled>
                                            <option value="">--</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                            <div class="col-md-12">
                                <div class="mb-3">
                                    <label for="description" class="form-label">Description <span class="required">*</span></label>
                                    <input type="text" class="form-control maxlength" autocomplete="off" id="description" name="description" maxlength="200">
                                </div>
                            </div>
                        </div>
                        <div class="row">
                                <div class="col-md-12 repeater">
                                    <div data-repeater-list="descriptions">
                                        <div data-repeater-item class="row">
                                            <div  class="mb-3 col-lg-10">
                                                <label for="description" class="form-label">Description</label>
                                                <input type="text" class="form-control" name="addon" autocomplete="off" maxlength="200">
                                            </div>
                                            <div class="col-lg-2 align-self-center">
                                                <div class="d-grid">
                                                    <label class="form-label"></label>
                                                    <button data-repeater-delete type="button" class="btn btn-danger waves-effect waves-light">
                                                        <i class="bx bx-trash font-size-16 align-middle"></i>
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <input data-repeater-create type="button" class="btn btn-success mt-3 mt-lg-0 mb-3" value="Add Transmittal"/>
                                </div>
                        </div>';
            }
            else if($formtype == 'update transmittal form'){
                $form .= '<div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Department <span class="required">*</span></label>
                                        <input type="hidden" id="transmittalid" name="transmittalid">
                                        <input type="hidden" id="status" name="status">
                                        <select class="form-control form-select2" id="transmittaldepartment" name="transmittaldepartment">
                                        <option value="">--</option>';
                                        $form .= $api->generate_department_options();
                                        $form .='</select>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Priority Person</label>
                                        <select class="form-control form-select2" id="priorityperson" name="priorityperson" disabled>
                                            <option value="">--</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                            <div class="col-md-12">
                                <div class="mb-3">
                                    <label for="description" class="form-label">Description <span class="required">*</span></label>
                                    <input type="text" class="form-control maxlength" autocomplete="off" id="description" name="description" maxlength="200">
                                </div>
                            </div>
                        </div>';
            }
            else if($formtype == 'retransmit transmittal form'){
                $form .= '<div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Department <span class="required">*</span></label>
                                        <input type="hidden" id="transmittalid" name="transmittalid">
                                        <select class="form-control form-select2" id="transmittaldepartment" name="transmittaldepartment">
                                        <option value="">--</option>';
                                        $form .= $api->generate_department_options();
                                        $form .='</select>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Priority Person</label>
                                        <select class="form-control form-select2" id="priorityperson" name="priorityperson" disabled>
                                            <option value="">--</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                            <div class="col-md-12">
                                <div class="mb-3">
                                    <label for="description" class="form-label">Description <span class="required">*</span></label>
                                    <input type="text" class="form-control maxlength" autocomplete="off" id="description" name="description" maxlength="200" readonly>
                                </div>
                            </div>
                        </div>';
            }
            else if($formtype == 'suggest to win form'){
                $form .= '<div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="title" class="form-label">Suggestion Title <span class="required">*</span></label>
                                        <input type="hidden" id="stwid" name="stwid">
                                        <input type="hidden" id="status" name="status">
                                        <input type="text" class="form-control maxlength" autocomplete="off" id="title" name="title" maxlength="100">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="description" class="form-label">Description <span class="required">*</span></label>
                                        <textarea class="form-control maxlength" id="description" name="description" maxlength="1000" rows="3"></textarea>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="reason" class="form-label">Reason <span class="required">*</span></label>
                                        <textarea class="form-control maxlength" id="reason" name="reason" maxlength="1000" rows="8"></textarea>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="benefits" class="form-label">Benefits <span class="required">*</span></label>
                                        <textarea class="form-control maxlength" id="benefits" name="benefits" maxlength="1000" rows="8"></textarea>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="stw_attachment_file" class="form-label">Attachment</label>
                                        <input class="form-control" type="file" name="stw_attachment_file" id="stw_attachment_file">
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'suggest to win vote form'){
                $form .= '<div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="title" class="form-label">Suggestion Title</label>
                                        <input type="hidden" id="stwid" name="stwid">
                                        <input type="hidden" id="employeeid" name="employeeid">
                                        <input type="text" class="form-control maxlength" autocomplete="off" id="title" name="title" maxlength="100" readonly>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Satisfaction (30%) <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="satisfaction" name="satisfaction">
                                        <option value="1">1</option>
                                        <option value="2">2</option>
                                        <option value="3" selected>3</option>
                                        <option value="4">4</option>
                                        <option value="5">5</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Quality (20%) <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="quality" name="quality">
                                        <option value="1">1</option>
                                        <option value="2">2</option>
                                        <option value="3" selected>3</option>
                                        <option value="4">4</option>
                                        <option value="5">5</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Innovation (20%) <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="innovation" name="innovation">
                                        <option value="1">1</option>
                                        <option value="2">2</option>
                                        <option value="3" selected>3</option>
                                        <option value="4">4</option>
                                        <option value="5">5</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Feasibility (30%) <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="feasibility" name="feasibility">
                                        <option value="1">1</option>
                                        <option value="2">2</option>
                                        <option value="3" selected>3</option>
                                        <option value="4">4</option>
                                        <option value="5">5</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="remarks" class="form-label">Remarks</label>
                                        <textarea class="form-control maxlength" id="remarks" name="remarks" maxlength="500" rows="5"></textarea>
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'stw vote end date form'){
                $form .= '<div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label class="form-label">Vote End Date <span class="required">*</span></label>
                                        <div class="input-group" id="vote-end-date-container">
                                            <input type="hidden" id="stwid" name="stwid">
                                            <input type="text" class="form-control" id="voteenddate" name="voteenddate" autocomplete="off" data-date-format="m/dd/yyyy" data-date-container="#vote-end-date-container" data-provide="datepicker" data-date-autoclose="true">
                                            <span class="input-group-text"><i class="mdi mdi-calendar"></i></span>
                                        </div>
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'filter suggest to win votes'){
                $form .= '<div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Month <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="month" name="month">
                                            <option value="">--</option>
                                            <option value="1">January</option>
                                            <option value="2">February</option>
                                            <option value="3">March</option>
                                            <option value="4">April</option>
                                            <option value="5">May</option>
                                            <option value="6">June</option>
                                            <option value="7">July</option>
                                            <option value="8">August</option>
                                            <option value="9">September</option>
                                            <option value="10">October</option>
                                            <option value="11">November</option>
                                            <option value="12">December</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Year <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="year" name="year">
                                        <option value="">--</option>';
                                        $form .= $api->generate_year(date('Y'), date('Y') - 15, 'desc');
                                        $form .='</select>
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'import transmittal form'){
                $form .= '<div class="row">
                            <div class="col-md-12">
                                <div class="mb-3">
                                    <label for="transmittal_file" class="form-label">Transmittal File (CSV) <span class="required">*</span></label>
                                    <input class="form-control" type="file" name="transmittal_file" id="transmittal_file">
                                </div>
                            </div>
                        </div>';
            }
            else if($formtype == 'import transmittal history form'){
                $form .= '<div class="row">
                            <div class="col-md-12">
                                <div class="mb-3">
                                    <label for="transmittal_history_file" class="form-label">Transmittal History File (CSV) <span class="required">*</span></label>
                                    <input class="form-control" type="file" name="transmittal_history_file" id="transmittal_history_file">
                                </div>
                            </div>
                        </div>';
            }
            else if($formtype == 'import document form'){
                $form .= '<div class="row">
                            <div class="col-md-12">
                                <div class="mb-3">
                                    <label for="document_file" class="form-label">Document File (CSV) <span class="required">*</span></label>
                                    <input class="form-control" type="file" name="document_file" id="document_file">
                                </div>
                            </div>
                        </div>';
            }
            else if($formtype == 'import department document permission form'){
                $form .= '<div class="row">
                            <div class="col-md-12">
                                <div class="mb-3">
                                    <label for="department_permission_file" class="form-label">Department Permission File (CSV) <span class="required">*</span></label>
                                    <input class="form-control" type="file" name="department_permission_file" id="department_permission_file">
                                </div>
                            </div>
                        </div>';
            }
            else if($formtype == 'import employee document permission form'){
                $form .= '<div class="row">
                            <div class="col-md-12">
                                <div class="mb-3">
                                    <label for="employee_permission_file" class="form-label">Employee Permission File (CSV) <span class="required">*</span></label>
                                    <input class="form-control" type="file" name="employee_permission_file" id="employee_permission_file">
                                </div>
                            </div>
                        </div>';
            }
            else if($formtype == 'training room log form'){
                $form .= '<div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="participants" class="form-label">Employee Participants <span class="required">*</span></label>
                                        <input type="hidden" id="logid" name="logid">
                                        <input type="hidden" id="status" name="status">
                                        <input type="hidden" id="locked" name="locked">
                                        <select class="form-control form-select2" multiple="multiple" name="participants" id="participants">';
                                        $form .= $api->generate_active_employee_options();
                                        $form .='</select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="otherparticipants" class="form-label">Other Participants</label>
                                        <input type="text" class="form-control maxlength" autocomplete="off" id="otherparticipants" name="otherparticipants" maxlength="1000">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="startdate" class="form-label">Date <span class="required">*</span></label>
                                        <div class="input-group" id="start-date-container">
                                            <input type="text" class="form-control" id="startdate" name="startdate" autocomplete="off" data-date-format="m/dd/yyyy" data-date-container="#start-date-container" data-provide="datepicker" data-date-autoclose="true">
                                            <span class="input-group-text"><i class="mdi mdi-calendar"></i></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="starttime" class="form-label">Start Time <span class="required">*</span></label>
                                        <input type="time" id="starttime" name="starttime" class="form-control" autocomplete="off">
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="endtime" class="form-label">End Time <span class="required">*</span></label>
                                        <input type="time" id="endtime" name="endtime" class="form-control" autocomplete="off">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label class="form-label">Lights</label>
                                        <select class="form-control form-select2" id="lights" name="lights">
                                            <option value="0">0</option>
                                            <option value="1">1</option>
                                            <option value="2">2</option>
                                            <option value="3">3</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label class="form-label">Fan</label>
                                        <select class="form-control form-select2" id="fan" name="fan">
                                            <option value="0">0</option>
                                            <option value="1">1</option>
                                            <option value="2">2</option>
                                            <option value="3">3</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label class="form-label">Aircon</label>
                                        <select class="form-control form-select2" id="aircon" name="aircon">
                                            <option value="0">0</option>
                                            <option value="1">1</option>
                                            <option value="2">2</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="reason" class="form-label">Purpose <span class="required">*</span></label>
                                        <textarea class="form-control maxlength" id="reason" name="reason" maxlength="500" rows="3"></textarea>
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'weekly cash flow form'){
                $form .= '<div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="startdate" class="form-label">Start Date <span class="required">*</span></label>
                                        <input type="hidden" id="wcfid" name="wcfid">
                                        <input type="hidden" id="status" name="status">
                                        <div class="input-group" id="start-date-container">
                                            <input type="text" class="form-control" id="startdate" name="startdate" autocomplete="off" data-date-format="m/dd/yyyy" data-date-container="#start-date-container" data-provide="datepicker" data-date-autoclose="true">
                                            <span class="input-group-text"><i class="mdi mdi-calendar"></i></span>
                                        </div>
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'weekly cash flow particulars form'){
                $form .= '<div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="details" class="form-label">Particular <span class="required">*</span></label>
                                        <input type="hidden" id="wcfid" name="wcfid">
                                        <input type="hidden" id="particularid" name="particularid">
                                        <input type="hidden" id="status" name="status">
                                        <input type="text" class="form-control maxlength" autocomplete="off" id="details" name="details" maxlength="100">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Particular Type <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="wcftype" name="wcftype">
                                        <option value="">--</option>';
                                        $form .= $api->generate_system_options('WCFTYPE');
                                        $form .='</select>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Loan Particular Type</label>
                                        <select class="form-control form-select2" id="wcfloantype" name="wcfloantype" disabled>
                                        <option value="">--</option>';
                                        $form .= $api->generate_system_options('WCFLOANTYPE');
                                        $form .='</select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label for="monday" class="form-label">Monday</label>
                                        <input id="monday" name="monday" class="form-control wcfdays" type="number" value="0" min="0" step="0.01">
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label for="tuesday" class="form-label">Tuesday</label>
                                        <input id="tuesday" name="tuesday" class="form-control wcfdays" type="number" value="0" min="0" step="0.01">
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label for="wednesday" class="form-label">Wednesday</label>
                                        <input id="wednesday" name="wednesday" class="form-control wcfdays" type="number" value="0" min="0" step="0.01">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label for="thursday" class="form-label">Thursday</label>
                                        <input id="thursday" name="thursday" class="form-control wcfdays" type="number" value="0" min="0" step="0.01">
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label for="friday" class="form-label">Friday</label>
                                        <input id="friday" name="friday" class="form-control wcfdays" type="number" value="0" min="0" step="0.01">
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label for="wcftotal" class="form-label">Total</label>
                                        <input id="wcftotal" class="form-control" type="text" value="0" readonly>
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'filter weekly cash flow' || $formtype == 'filter weekly cash flow summary'){
                $form .= '<div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label class="form-label">Weekly Cash Flow Period <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="wcfperiod" name="wcfperiod">
                                        '. $api->generate_weekly_cash_flow_period_options() .'
                                        </select>
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'ticket form'){
                $form .= '<div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label class="form-label">Department <span class="required">*</span></label>
                                        <input type="hidden" id="priorityperson" name="priorityperson">
                                        <select class="form-control form-select2" id="ticketdepartment" name="ticketdepartment">
                                            <option value="">--</option>
                                            <option value="DEPT1">Data Center</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label class="form-label">Category <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="category" name="category">
                                        <option value="">--</option>';
                                        $form .= $api->generate_system_options('TICKETCATEGORY');
                                        $form .='</select>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label for="duedate" class="form-label">Due Date <span class="required">*</span></label>
                                        <div class="input-group" id="due-date-container">
                                            <input type="text" class="form-control" id="duedate" name="duedate" autocomplete="off" data-date-format="m/dd/yyyy" data-date-container="#due-date-container" data-provide="datepicker" data-date-autoclose="true">
                                            <span class="input-group-text"><i class="mdi mdi-calendar"></i></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label for="duetime" class="form-label">Due Time <span class="required">*</span></label>
                                        <input type="time" id="duetime" name="duetime" class="form-control" autocomplete="off" value="5:00 pm">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="subject" class="form-label">Subject <span class="required">*</span></label>
                                        <input type="text" class="form-control maxlength" autocomplete="off" id="subject" name="subject" maxlength="200">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="description" class="form-label">Description <span class="required">*</span></label>
                                        <textarea class="form-control maxlength" id="description" name="description" maxlength="1000" rows="3"></textarea>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="ticket_file" class="form-label">Attachment</label>
                                        <input class="form-control" type="file" name="ticket_file[]" id="ticket_file" multiple>
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'update ticket form'){
                $form .= '<div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Department <span class="required">*</span></label>
                                        <input type="hidden" id="ticketid" name="ticketid">
                                        <input type="hidden" id="locked" name="locked">
                                        <select class="form-control form-select2" id="ticketdepartment" name="ticketdepartment">
                                            <option value="">--</option>
                                            <option value="DEPT1">Data Center</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Priority Person</label>
                                        <select class="form-control form-select2" id="priorityperson" name="priorityperson" disabled>
                                            <option value="">--</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label class="form-label">Category <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="category" name="category">
                                        <option value="">--</option>';
                                        $form .= $api->generate_system_options('TICKETCATEGORY');
                                        $form .='</select>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label for="duedate" class="form-label">Due Date <span class="required">*</span></label>
                                        <div class="input-group" id="due-date-container">
                                            <input type="text" class="form-control" id="duedate" name="duedate" autocomplete="off" data-date-format="m/dd/yyyy" data-date-container="#due-date-container" data-provide="datepicker" data-date-autoclose="true">
                                            <span class="input-group-text"><i class="mdi mdi-calendar"></i></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label for="duetime" class="form-label">Due Time <span class="required">*</span></label>
                                        <input type="time" id="duetime" name="duetime" class="form-control" autocomplete="off" value="5:00 pm">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="subject" class="form-label">Subject <span class="required">*</span></label>
                                        <input type="text" class="form-control maxlength" autocomplete="off" id="subject" name="subject" maxlength="200">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="description" class="form-label">Description <span class="required">*</span></label>
                                        <textarea class="form-control maxlength" id="description" name="description" maxlength="1000" rows="3"></textarea>
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'reject ticket form' || $formtype == 'cancel ticket form'){
                $form .= '<div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="reason" class="form-label">Reason <span class="required">*</span></label>
                                        <input type="hidden" id="ticketid" name="ticketid">
                                        <textarea class="form-control maxlength" id="reason" name="reason" maxlength="500" rows="3"></textarea>
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'ticket note form'){
                $form .= '<div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="note" class="form-label">Note <span class="required">*</span></label>
                                        <input type="hidden" id="ticketid" name="ticketid">
                                        <textarea class="form-control maxlength" id="note" name="note" maxlength="1000" rows="3"></textarea>
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'ticket attachment form'){
                $form .= '<div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="ticket_file" class="form-label">Attachment <span class="required">*</span></label>
                                        <input type="hidden" id="ticketid" name="ticketid">
                                        <input class="form-control" type="file" name="ticket_file[]" id="ticket_file" multiple>
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'filter ticket form'){
                $form .= '<div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label class="form-label">Filter By <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="filterby" name="filterby">
                                            <option value="">All Ticket</option>
                                            <option value="duetoday">Tickets Due Today</option>
                                            <option value="assignedtome">Tickets Assigned To Me</option>
                                            <option value="openticket">Open Ticket</option>
                                            <option value="acceptedticket">Accepted Ticket</option>
                                            <option value="overdueticket">Over Due Ticket</option>
                                            <option value="solvedticket">Solved Ticket</option>
                                            <option value="unsolvedticket">Unsolved Ticket</option>
                                            <option value="closedticket">Closed Ticket</option>
                                        </select>
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'filter ticket by date'){
                $form .= '<div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label class="form-label">Filter By <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="filterby" name="filterby">
                                            <option value="requestdate">Request Date</option>
                                            <option value="duedate">Due Date</option>
                                            <option value="solveddate">Solved Date</option>
                                            <option value="closeddate">Closed Date</option>
                                            <option value="decisiondate">Decision Date</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Start Date <span class="required">*</span></label>
                                        <div class="input-group" id="start-date-container">
                                            <input type="text" class="form-control" id="startdate" name="startdate" autocomplete="off" data-date-format="m/dd/yyyy" data-date-container="#start-date-container" data-provide="datepicker" data-date-autoclose="true" value="'. date('m/01/Y') .'">
                                            <span class="input-group-text"><i class="mdi mdi-calendar"></i></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">End Date <span class="required">*</span></label>
                                        <div class="input-group" id="end-date-container">
                                            <input type="text" class="form-control" id="enddate" name="enddate" autocomplete="off" data-date-format="m/dd/yyyy" data-date-container="#end-date-container" data-provide="datepicker" data-date-autoclose="true" value="'. date('m/t/Y') .'">
                                            <span class="input-group-text"><i class="mdi mdi-calendar"></i></span>
                                        </div>
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'add ticket adjustment form'){
                $form .= '<div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Department</label>
                                        <input type="hidden" id="ticketid" name="ticketid">
                                        <select class="form-control form-select2" id="ticketdepartment" disabled>
                                            <option value="">--</option>
                                            <option value="DEPT1">Data Center</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Priority Person <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="priorityperson" name="priorityperson" disabled>
                                            <option value="">--</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-3">
                                    <div class="mb-3">
                                        <label class="form-label">Category <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="category" name="category">
                                        <option value="">--</option>';
                                        $form .= $api->generate_system_options('TICKETCATEGORY');
                                        $form .='</select>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="mb-3">
                                        <label class="form-label">Priority <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="priority" name="priority">
                                            <option value="">--</option>
                                            <option value="1">Low</option>
                                            <option value="2">Medium</option>
                                            <option value="3">High</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="mb-3">
                                        <label for="duedate" class="form-label">Due Date <span class="required">*</span></label>
                                        <div class="input-group" id="due-date-container">
                                            <input type="text" class="form-control" id="duedate" name="duedate" autocomplete="off" data-date-format="m/dd/yyyy" data-date-container="#due-date-container" data-provide="datepicker" data-date-autoclose="true">
                                            <span class="input-group-text"><i class="mdi mdi-calendar"></i></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="mb-3">
                                        <label for="duetime" class="form-label">Due Time <span class="required">*</span></label>
                                        <input type="time" id="duetime" name="duetime" class="form-control" autocomplete="off" value="5:00 pm">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="subject" class="form-label">Subject <span class="required">*</span></label>
                                        <input type="text" class="form-control maxlength" autocomplete="off" id="subject" name="subject" maxlength="200">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="description" class="form-label">Description <span class="required">*</span></label>
                                        <textarea class="form-control maxlength" id="description" name="description" maxlength="1000" rows="3"></textarea>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="reason" class="form-label">Reason <span class="required">*</span></label>
                                        <textarea class="form-control maxlength" id="reason" name="reason" maxlength="500" rows="3"></textarea>
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'update ticket adjustment form'){
                $form .= '<div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Department <span class="required">*</span></label>
                                        <input type="hidden" id="adjustmentid" name="adjustmentid">
                                        <select class="form-control form-select2" id="ticketdepartment" disabled>
                                            <option value="">--</option>
                                            <option value="DEPT1">Data Center</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Priority Person</label>
                                        <select class="form-control form-select2" id="priorityperson" name="priorityperson" disabled>
                                            <option value="">--</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-3">
                                    <div class="mb-3">
                                        <label class="form-label">Category <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="category" name="category">
                                        <option value="">--</option>';
                                        $form .= $api->generate_system_options('TICKETCATEGORY');
                                        $form .='</select>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="mb-3">
                                        <label class="form-label">Priority <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="priority" name="priority">
                                            <option value="">--</option>
                                            <option value="1">Low</option>
                                            <option value="2">Medium</option>
                                            <option value="3">High</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="mb-3">
                                        <label for="duedate" class="form-label">Due Date <span class="required">*</span></label>
                                        <div class="input-group" id="due-date-container">
                                            <input type="text" class="form-control" id="duedate" name="duedate" autocomplete="off" data-date-format="m/dd/yyyy" data-date-container="#due-date-container" data-provide="datepicker" data-date-autoclose="true">
                                            <span class="input-group-text"><i class="mdi mdi-calendar"></i></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="mb-3">
                                        <label for="duetime" class="form-label">Due Time <span class="required">*</span></label>
                                        <input type="time" id="duetime" name="duetime" class="form-control" autocomplete="off" value="5:00 pm">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="subject" class="form-label">Subject <span class="required">*</span></label>
                                        <input type="text" class="form-control maxlength" autocomplete="off" id="subject" name="subject" maxlength="200">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="description" class="form-label">Description <span class="required">*</span></label>
                                        <textarea class="form-control maxlength" id="description" name="description" maxlength="1000" rows="3"></textarea>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="reason" class="form-label">Reason <span class="required">*</span></label>
                                        <textarea class="form-control maxlength" id="reason" name="reason" maxlength="500" rows="3"></textarea>
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'filter telephone log summary'){
                $form .= '<div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label class="form-label">Filter By <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="filterby" name="filterby">
                                            <option value="initialcalldate">Initial Call Date</option>
                                            <option value="actualcalldate">Actual Call Date</option>
                                            <option value="requestdate">Request Date</option>
                                            <option value="decisiondate">Decision Date</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Start Date <span class="required">*</span></label>
                                        <div class="input-group" id="start-date-container">
                                            <input type="text" class="form-control" id="startdate" name="startdate" autocomplete="off" data-date-format="m/dd/yyyy" data-date-container="#start-date-container" data-provide="datepicker" data-date-autoclose="true" value="'. date('m/01/Y') .'">
                                            <span class="input-group-text"><i class="mdi mdi-calendar"></i></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">End Date <span class="required">*</span></label>
                                        <div class="input-group" id="end-date-container">
                                            <input type="text" class="form-control" id="enddate" name="enddate" autocomplete="off" data-date-format="m/dd/yyyy" data-date-container="#end-date-container" data-provide="datepicker" data-date-autoclose="true" value="'. date('m/t/Y') .'">
                                            <span class="input-group-text"><i class="mdi mdi-calendar"></i></span>
                                        </div>
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'filter transmittal by category'){
                $form .= '<div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label class="form-label">Filter By <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="transmittalfilterby" name="transmittalfilterby">
                                            <option value="">--</option>
                                            <option value="transmittedto">Transmitted To</option>
                                            <option value="transmittedby">Transmitted By</option>
                                            <option value="status">Status</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label class="form-label">Filter <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="transmittalfiltervalue" name="transmittalfiltervalue" disabled>
                                            <option value="">--</option>
                                        </select>
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'health declaration form'){
                $form .= '<div class="row mb-4">
                            <div class="col-md-10">
                                <label for="temperature" class="col-form-label">Temperature <span class="required">*</span></label>
                            </div>
                            <div class="col-md-2">
                                <input id="temperature" name="temperature" class="form-control" type="number" min="0" step="0.01">
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="mb-3">
                                    <label class="form-label">1. Are you experiencing:  <span class="required">*</span></label>
                                </div>
                            </div>
                        </div>
                        <div class="row mb-4">
                            <div class="col-md-10">
                                <label for="sorethroat" class="col-form-label">Sore throat (Pananakit ng lalamunan/ masakit lumunok)</label>
                            </div>
                            <div class="col-md-2">
                                <select class="form-control form-select2" id="sorethroat" name="sorethroat">
                                    <option value="1">Yes</option>
                                    <option value="0" selected>No</option>
                                </select>
                            </div>
                        </div>
                        <div class="row mb-4">
                            <div class="col-md-10">
                                <label for="bodypain" class="col-form-label">Body pains (Pananakit ng katawan)</label>
                            </div>
                            <div class="col-md-2">
                                <select class="form-control form-select2" id="bodypain" name="bodypain">
                                    <option value="2">Yes</option>
                                    <option value="0" selected>No</option>
                                </select>
                            </div>
                        </div>
                        <div class="row mb-4">
                            <div class="col-md-10">
                                <label for="headache" class="col-form-label">Headache (Pananakit ng ulo)</label>
                            </div>
                            <div class="col-md-2">
                                <select class="form-control form-select2" id="headache" name="headache">
                                    <option value="4">Yes</option>
                                    <option value="0" selected>No</option>
                                </select>
                            </div>
                        </div>
                        <div class="row mb-4">
                            <div class="col-md-10">
                                <label for="fever" class="col-form-label">Fever for the past few days (Lagnat sa nakalipas na mga araw)</label>
                            </div>
                            <div class="col-md-2">
                                <select class="form-control form-select2" id="fever" name="fever">
                                    <option value="8">Yes</option>
                                    <option value="0" selected>No</option>
                                </select>
                            </div>
                        </div>
                        <div class="row mb-4">
                            <div class="col-md-10">
                                <label for="fever" class="col-form-label">2. Have you worked together or stayed in the same close environment ofa confirmed COVID-19 case? (May nakasama ka ba o nakatrabahong tao na kumpirmadong may COVID-19 / may impeksyon ng coronavirus?) <span class="required">*</span></label>
                            </div>
                            <div class="col-md-2">
                                <select class="form-control form-select2" id="question2" name="question2">
                                    <option value="1">Yes</option>
                                    <option value="0" selected>No</option>
                                </select>
                            </div>
                        </div>
                        <div class="row mb-4">
                            <div class="col-md-10">
                                <label for="fever" class="col-form-label">3. Have you had any contact with anyone with fever, cough, colds, and sore throat in the past 2 weeks? (Mayroon ka bang nakasama na may lagnat, ubo, sipon o sakit ng lalamunan sa nakalipas ng dalawang (2) lingo?) <span class="required">*</span></label>
                            </div>
                            <div class="col-md-2">
                                <select class="form-control form-select2" id="question3" name="question3">
                                    <option value="1">Yes</option>
                                    <option value="0" selected>No</option>
                                </select>
                            </div>
                        </div>
                        <div class="row mb-4">
                            <div class="col-md-10">
                                <label for="fever" class="col-form-label">4. Have you travelled outside of the Philippines in the last 14 days? (Ikaw ba ay nagbyahe sa labas ng Pilipinas sa nakalipas na 14 na araw?) <span class="required">*</span></label>
                            </div>
                            <div class="col-md-2">
                                <select class="form-control form-select2" id="question4" name="question4">
                                    <option value="1">Yes</option>
                                    <option value="0" selected>No</option>
                                </select>
                            </div>
                        </div>
                        <div class="row mb-4">
                            <div class="col-md-10">
                                <label for="fever" class="col-form-label">5. Have you travelled to any area in NCR aside from your home? (Ikaw ba ay nagpunta sa iba pang parte ng NCR o Metro Manila bukod sa iyong bahay?) <span class="required">*</span></label>
                            </div>
                            <div class="col-md-2">
                                <select class="form-control form-select2" id="question5" name="question5">
                                    <option value="1">Yes</option>
                                    <option value="0" selected>No</option>
                                </select>
                            </div>
                        </div>
                        <div class="row mb-4">
                            <div class="col-md-6">
                                <label for="fever" class="col-form-label">If yes, specify which city/municipality you went to (Sabihin kung saan)</label>
                            </div>
                            <div class="col-md-6">
                                <input type="text" class="form-control maxlength" autocomplete="off" id="specific" name="specific" maxlength="100" disabled>
                            </div>
                        </div>';
            }
            else if($formtype == 'approve attendance adjustment leave form' || $formtype == 'reject attendance adjustment leave form' || $formtype == 'cancel attendance adjustment leave form'){
                $form .= '<div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="remarks" class="form-label">Remarks</label>
                                        <input type="hidden" id="adjustmentid" name="adjustmentid">
                                        <textarea class="form-control maxlength" id="remarks" name="remarks" maxlength="500" rows="3"></textarea>
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'meeting form'){
                $form .= '<div class="row">
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label for="meetingtitle" class="form-label">Meeting Title <span class="required">*</span></label>
                                        <input type="hidden" id="meetingid" name="meetingid">
                                        <input type="hidden" id="status">
                                        <input type="text" class="form-control maxlength" autocomplete="off" id="meetingtitle" name="meetingtitle" maxlength="100">
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label class="form-label">Meeting Type <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="meetingtype" name="meetingtype">
                                        <option value="">--</option>';
                                        $form .= $api->generate_system_options('MEETINGTYPE');
                                        $form .='</select>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label class="form-label">Previous Meeting</label>
                                        <select class="form-control form-select2" id="previousmeeting" name="previousmeeting">
                                        <option value="">--</option>';
                                        $form .= $api->generate_previous_meeting_options($username);
                                        $form .='</select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label for="meetingdate" class="form-label">Meeting Date <span class="required">*</span></label>
                                        <div class="input-group" id="date-meeting-container">
                                            <input type="text" class="form-control" id="meetingdate" name="meetingdate" autocomplete="off" data-date-format="m/dd/yyyy" data-date-container="#date-meeting-container" data-provide="datepicker" data-date-autoclose="true">
                                            <span class="input-group-text"><i class="mdi mdi-calendar"></i></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label for="starttime" class="form-label">Start Time <span class="required">*</span></label>
                                        <input type="time" id="starttime" name="starttime" class="form-control" autocomplete="off">
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label for="endtime" class="form-label">End Time <span class="required">*</span></label>
                                        <input type="time" id="endtime" name="endtime" class="form-control" autocomplete="off">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label"> Presider <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="presider" name="presider">
                                        <option value="">--</option>';
                                        $form .= $api->generate_active_employee_options();
                                        $form .='</select>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Noted By <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="notedby" name="notedby">
                                        <option value="">--</option>';
                                        $form .= $api->generate_active_employee_options();
                                        $form .='</select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="attendees" class="form-label">Attendees <span class="required">*</span></label>
                                        <select class="form-control form-select2" multiple="multiple" name="attendees" id="attendees">';
                                        $form .= $api->generate_active_employee_options();
                                        $form .='</select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="absentees" class="form-label">Absent Attendees</label>
                                        <select class="form-control form-select2" multiple="multiple" name="absentees" id="absentees">';
                                        $form .= $api->generate_active_employee_options();
                                        $form .='</select>
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'meeting permission form'){
                $form .= '<div class="row">
                                '. $api->generate_meeting_permission_check_box($username) .'
                            </div>';
            }
            else if($formtype == 'meeting note form'){
                $form .= '<div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="note" class="form-label">Note <span class="required">*</span></label>
                                        <input type="hidden" id="meetingid" name="meetingid">
                                        <textarea class="form-control maxlength" id="note" name="note" maxlength="1000" rows="3"></textarea>
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'meeting task form'){
                $form .= '<div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="task" class="form-label">Point of Discussion <span class="required">*</span></label>
                                        <input type="hidden" id="meetingstatus" name="meetingstatus">
                                        <textarea class="form-control maxlength" id="task" name="task" maxlength="500" rows="3"></textarea>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="agenda" class="form-label">Meeting Agenda <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="agenda" name="agenda">
                                            <option value="">--</option>';
                                        $form .= $api->generate_system_options('MEETINGAGENDA');
                                        $form .='</select>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Task Status <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="taskstatus" name="taskstatus">
                                            <option value="">--</option>
                                            <option value="0">On-Going</option>
                                            <option value="1">Done</option>
                                            <option value="2">Cancelled</option>
                                            <option value="3">On-Hold</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label class="form-label">Person Responsible <span class="required">*</span></label>
                                        <select class="form-control form-select2" multiple="multiple" id="meetingemployee" name="meetingemployee">
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Due Date Type <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="duedatetype" name="duedatetype">
                                            <option value="">--</option>';
                                            $form .= $api->generate_system_options('DUEDATETYPE');
                                            $form .='</select>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="duedate" class="form-label">Due Date</label>
                                        <div class="input-group" id="date-due-container">
                                            <input type="text" class="form-control" id="duedate" name="duedate" autocomplete="off" data-date-format="m/dd/yyyy" data-date-container="#date-due-container" data-provide="datepicker" data-date-autoclose="true" disabled>
                                            <span class="input-group-text"><i class="mdi mdi-calendar"></i></span>
                                        </div>
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'meeting task update form'){
                $form .= '<div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="task" class="form-label">Point of Discussion <span class="required">*</span></label>
                                        <input type="hidden" id="taskid" name="taskid">
                                        <input type="hidden" id="meetingstatus" name="meetingstatus">
                                        <textarea class="form-control maxlength" id="task" name="task" maxlength="500" rows="3"></textarea>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label for="agenda" class="form-label">Meeting Agenda <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="agenda" name="agenda">
                                            <option value="">--</option>';
                                        $form .= $api->generate_system_options('MEETINGAGENDA');
                                        $form .='</select>
                                    </div>
                                </div>
                                <div class="col-md-8">
                                    <div class="mb-3">
                                        <label class="form-label">Person Responsible <span class="required">*</span></label>
                                        <select class="form-control form-select2" multiple="multiple" id="meetingemployee" name="meetingemployee[]">
                                            <option value="">--</option>
                                        </select>
                                    </div>
                                </div>

                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label class="form-label">Task Status <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="taskstatus" name="taskstatus">
                                            <option value="">--</option>
                                            <option value="0">On-Going</option>
                                            <option value="1">Done</option>
                                            <option value="2">Cancelled</option>
                                            <option value="3">On-Hold</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label class="form-label">Due Date Type <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="duedatetype" name="duedatetype">
                                            <option value="">--</option>';
                                            $form .= $api->generate_system_options('DUEDATETYPE');
                                            $form .='</select>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label for="duedate" class="form-label">Due Date</label>
                                        <div class="input-group" id="date-due-container">
                                            <input type="text" class="form-control" id="duedate" name="duedate" autocomplete="off" data-date-format="m/dd/yyyy" data-date-container="#date-due-container" data-provide="datepicker" data-date-autoclose="true" disabled>
                                            <span class="input-group-text"><i class="mdi mdi-calendar"></i></span>
                                        </div>
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'meeting memo form'){
                $form .= '<div class="row">
                            <div class="col-md-12">
                                <div class="mb-3">
                                    <label for="memo" class="form-label">Memo & Procedure  <span class="required">*</span></label>
                                    <select class="form-control form-select2" multiple="multiple" id="memo">';
                                    $form .= $api->generate_documents('MEMORANDUMS');
                                    $form .= $api->generate_documents('ADMINPOLICY');
                                    $form .= $api->generate_documents('ADMINPROCEDURE');

                                    $form .='</select>
                                </div>
                            </div>
                        </div>';
            }
            else if($formtype == 'meeting other matters form'){
                $form .= '<div class="row">
                            <div class="col-md-12 other-matters-repeater">
                                <div data-repeater-list="descriptions">
                                    <div data-repeater-item class="row">
                                        <div  class="mb-3 col-lg-10">
                                            <label for="othermatters" class="form-label">Other Matters</label>
                                            <input type="hidden" id="taskid" name="taskid">
                                            <input type="text" class="form-control" name="othermatters" autocomplete="off" maxlength="1000">
                                        </div>
                                        <div class="col-lg-2 align-self-center">
                                            <div class="d-grid">
                                                <label class="form-label"></label>
                                                <button data-repeater-delete type="button" class="btn btn-danger waves-effect waves-light">
                                                    <i class="bx bx-trash font-size-16 align-middle"></i>
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <input data-repeater-create type="button" class="btn btn-success mt-3 mt-lg-0 mb-3" value="Add Other Matters"/>
                            </div>
                        </div>';
            }
            else if($formtype == 'meeting other matters update form'){
                $form .= '<div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="meetingtitle" class="form-label">Other Matters <span class="required">*</span></label>
                                        <input type="hidden" id="othermattersid" name="othermattersid">
                                        <input type="text" class="form-control" id="othermatters" name="othermatters" autocomplete="off" maxlength="1000">
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'add previous discussion to agenda form'){
                $form .= '<div class="row">
                            <div class="col-md-12">
                                <div class="mb-3">
                                    <label for="meetingagenda" class="form-label">Agenda <span class="required">*</span></label>
                                    <input type="hidden" id="taskid" name="taskid">
                                    <select class="form-control form-select2" id="meetingagenda" name="meetingagenda">
                                        <option value="">--</option>';
                            $form .= $api->generate_system_options('MEETINGAGENDA');
                            $form .='</select>
                                </div>
                            </div>
                        </div>';
            }

             //changes rcmercado Overtime
          else if($formtype == 'overtime form'){
                $form .= '<div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="overtimetitle" class="form-label">Title <span class="required">*</span></label>
                                        <input type="hidden" id="overtimeid" name="overtimeid">
                                        <input type="hidden" id="status">
                                        <input type="text" class="form-control maxlength" autocomplete="off" id="overtimetitle" name="overtimetitle" maxlength="100">
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Type of Holiday <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="holidaytype" name="holidaytype">
                                        <option value="">--</option>';
                                        $form .= $api->generate_system_options('HOLIDAYTYPE');
                                        $form .='</select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label for="overtimedate" class="form-label">Overtime Date <span class="required">*</span></label>
                                        <div class="input-group" id="date-overtime-container">
                                            <input type="text" class="form-control" id="overtimedate" name="overtimedate" autocomplete="off" data-date-format="m/dd/yyyy" data-date-container="#date-overtime-container" data-provide="datepicker" data-date-autoclose="true">
                                            <span class="input-group-text"><i class="mdi mdi-calendar"></i></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label for="overtimestart" class="form-label">Start Time <span class="required">*</span></label>
                                        <input type="time" id="overtimestart" name="starttime" class="form-control" autocomplete="off">
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label for="overtimeend" class="form-label">End Time <span class="required">*</span></label>
                                        <input type="time" id="overtimeend" name="endtime" class="form-control" autocomplete="off">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="Reason" class="form-label">Reason <span class="required">*</span></label>
                                        <textarea class="form-control maxlength" id="reason" name="reason" maxlength="500" rows="3"></textarea>
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'training form'){
                $form .= '<div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="trainingtitle" class="form-label">Title <span class="required">*</span></label>
                                        <input type="hidden" id="trainingid" name="trainingid">
                                        <input type="hidden" id="status">
                                        <input type="text" class="form-control maxlength" autocomplete="off" id="trainingtitle" name="trainingtitle" maxlength="100">
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Type <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="trainingtype" name="trainingtype">
                                        <option value="">--</option>';
                                        $form .= $api->generate_system_options('TRAININGTYPE');
                                        $form .='</select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label for="trainingdate" class="form-label">Training Date <span class="required">*</span></label>
                                        <div class="input-group" id="date-training-container">
                                            <input type="text" class="form-control" id="trainingdate" name="trainingdate" autocomplete="off" data-date-format="m/dd/yyyy" data-date-container="#date-training-container" data-provide="datepicker" data-date-autoclose="true">
                                            <span class="input-group-text"><i class="mdi mdi-calendar"></i></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label for="starttime" class="form-label">Start Time <span class="required">*</span></label>
                                        <input type="time" id="starttime" name="starttime" class="form-control" autocomplete="off">
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label for="endtime" class="form-label">End Time <span class="required">*</span></label>
                                        <input type="time" id="endtime" name="endtime" class="form-control" autocomplete="off">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="description" class="form-label">Description <span class="required">*</span></label>
                                        <textarea class="form-control maxlength" id="description" name="description" maxlength="500" rows="3"></textarea>
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'training attendees form'){
                $form .= '<div class="row">
                                '. $api->generate_user_check_box() .'
                            </div>';
            }
            else if($formtype == 'reject training form' || $formtype == 'cancel training form'){
                $form .= '<div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="reason" class="form-label">Reason <span class="required">*</span></label>
                                        <input type="hidden" id="trainingid" name="trainingid">
                                        <textarea class="form-control maxlength" id="reason" name="reason" maxlength="500" rows="3"></textarea>
                                    </div>
                                </div>
                            </div>';
            }

              else if($formtype == 'reject overtime form' || $formtype == 'cancel overtime form'){
                $form .= '<div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="reason_cancellation" class="form-label">Reason <span class="required">*</span></label>
                                        <input type="hidden" id="overtimeid" name="overtimeid">
                                        <textarea class="form-control maxlength" id="reason_cancellation" name="reason_cancellation" maxlength="500" rows="3"></textarea>
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'training report form'){
                $form .= '<div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="learnings" class="form-label">Benefits/Learnings <span class="required">*</span></label>
                                        <input type="hidden" id="trainingid" name="trainingid">
                                        <textarea class="form-control maxlength" id="learnings" name="learnings" maxlength="1000" rows="3"></textarea>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="comments" class="form-label">Comments <span class="required">*</span></label>
                                        <textarea class="form-control maxlength" id="comments" name="comments" maxlength="1000" rows="3"></textarea>
                                    </div>
                                </div>
                            </div>';
            }
			else if($formtype == 'tag ticket as closed form'){
                $form .= '<div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="auto_close_reason" class="form-label">Close Reason <span class="required">*</span></label>
                                        <input type="hidden" id="ticketid" name="ticketid">
                                        <textarea class="form-control maxlength" id="auto_close_reason" name="auto_close_reason" maxlength="500" rows="3"></textarea>
                                    </div>
                                </div>
                            </div>';
            }
			else if($formtype == 'car search parameter form'){
                $form .= '<div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="parameter_code" class="form-label">Parameter Code <span class="required">*</span></label>
                                        <input type="hidden" id="parameterid" name="parameterid">
                                        <input type="text" class="form-control maxlength" autocomplete="off" id="parameter_code" name="parameter_code" maxlength="50">
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="parameter_value" class="form-label">Parameter <span class="required">*</span></label>
                                        <input type="text" class="form-control maxlength" autocomplete="off" id="parameter_value" name="parameter_value" maxlength="200">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label class="form-label">Category Type <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="category_type" name="category_type">
                                        <option value="">--</option>';
                                        $form .= $api->generate_system_options('CARSEARCHCATEGORY');
                                        $form .='</select>
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'import car search parameter form'){
                $form .= '<div class="row">
                            <div class="col-md-12">
                                <div class="mb-3">
                                    <label for="car_search_parameter_file" class="form-label">Car Search Parameter File (CSV) <span class="required">*</span></label>
                                    <input class="form-control" type="file" name="car_search_parameter_file" id="car_search_parameter_file">
                                </div>
                            </div>
                        </div>';
            }
            else if($formtype == 'price index item form'){
                $form .= '<div class="row">
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label class="form-label">Brand <span class="required">*</span></label>
                                        <input type="hidden" id="itemid" name="itemid">
                                        <select class="form-control form-select2" id="brand" name="brand">
                                        <option value="">--</option>';
                                        $form .= $api->generate_car_search_parameter_options('BRAND');
                                        $form .='</select>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label class="form-label">Model <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="model" name="model">
                                        <option value="">--</option>';
                                        $form .= $api->generate_car_search_parameter_options('MODEL');
                                        $form .='</select>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label class="form-label">Variant</label>
                                        <select class="form-control form-select2" id="variant" name="variant">
                                        <option value="">--</option>';
                                        $form .= $api->generate_car_search_parameter_options('VARIANT');
                                        $form .='</select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label class="form-label">Engine Size</label>
                                        <select class="form-control form-select2" id="engine_size" name="engine_size">
                                        <option value="">--</option>';
                                        $form .= $api->generate_car_search_parameter_options('ENGINESIZE');
                                        $form .='</select>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label class="form-label">Gas Type</label>
                                        <select class="form-control form-select2" id="gas_type" name="gas_type">
                                        <option value="">--</option>';
                                        $form .= $api->generate_car_search_parameter_options('GASTYPE');
                                        $form .='</select>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label class="form-label">Transmission</label>
                                        <select class="form-control form-select2" id="transmission" name="transmission">
                                        <option value="">--</option>';
                                        $form .= $api->generate_car_search_parameter_options('TRANSMISSION');
                                        $form .='</select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label class="form-label">Drive Train</label>
                                        <select class="form-control form-select2" id="drive_train" name="drive_train">
                                        <option value="">--</option>';
                                        $form .= $api->generate_car_search_parameter_options('DRIVETRAIN');
                                        $form .='</select>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label class="form-label">Body Type</label>
                                        <select class="form-control form-select2" id="body_type" name="body_type">
                                        <option value="">--</option>';
                                        $form .= $api->generate_car_search_parameter_options('BODYTYPE');
                                        $form .='</select>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label class="form-label">Seating Capacity</label>
                                        <select class="form-control form-select2" id="seating_capacity" name="seating_capacity">
                                        <option value="">--</option>';
                                        $form .= $api->generate_car_search_parameter_options('SEATINGCAPACITY');
                                        $form .='</select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label class="form-label">Camshaft Profile</label>
                                        <select class="form-control form-select2" id="camshaft_profile" name="camshaft_profile">
                                        <option value="">--</option>';
                                        $form .= $api->generate_car_search_parameter_options('CAMSHAFTPROFILE');
                                        $form .='</select>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label class="form-label">Color Type</label>
                                        <select class="form-control form-select2" id="color_type" name="color_type">
                                        <option value="">--</option>';
                                        $form .= $api->generate_car_search_parameter_options('COLORTYPE');
                                        $form .='</select>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label class="form-label">Aircon Type</label>
                                        <select class="form-control form-select2" id="aircon_type" name="aircon_type">
                                        <option value="">--</option>';
                                        $form .= $api->generate_car_search_parameter_options('AIRCONTYPE');
                                        $form .='</select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label for="other_information" class="form-label">Other Information</label>
                                        <textarea class="form-control maxlength" id="other_information" name="other_information" maxlength="1000" rows="3"></textarea>
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'import price index item form'){
                $form .= '<div class="row">
                            <div class="col-md-12">
                                <div class="mb-3">
                                    <label for="price_index_item_file" class="form-label">Price Index Item File (CSV) <span class="required">*</span></label>
                                    <input class="form-control" type="file" name="price_index_item_file" id="price_index_item_file">
                                </div>
                            </div>
                        </div>';
            }
            else if($formtype == 'price index amount form'){
                $form .= '<div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Brand</label>
                                        <select class="form-control form-select2" id="search_brand" name="search_brand">
                                        <option value="">--</option>';
                                        $form .= $api->generate_car_search_parameter_options('BRAND');
                                        $form .='</select>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Model</label>
                                        <select class="form-control form-select2" id="search_model" name="search_model">
                                        <option value="">--</option>';
                                        $form .= $api->generate_car_search_parameter_options('MODEL');
                                        $form .='</select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label class="form-label">Price Index Item <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="price_index_item" name="price_index_item" disabled>
                                        <option value="">--</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Year <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="year" name="year">
                                        <option value="">--</option>';
                                        $form .= $api->generate_year(date('Y'), date("Y", strtotime("-15 years")), 'desc');
                                        $form .='</select>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="amount" class="form-label">Amount <span class="required">*</span></label>
                                        <input id="amount" name="amount" class="form-control" type="number" min="1" step="0.01">
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'update price index amount form' || $formtype == 'add price index amount adjustment form'){
                $form .= '<div class="row">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label class="form-label">Price Index Item <span class="required">*</span></label>
                                        <input type="hidden" id="itemid" name="itemid">
                                        <input type="text" class="form-control" autocomplete="off" id="item" readonly>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Year <span class="required">*</span></label>
                                        <select class="form-control form-select2" id="year" name="year" disabled>
                                        <option value="">--</option>';
                                        $form .= $api->generate_year(date('Y'), date("Y", strtotime("-15 years")), 'desc');
                                        $form .='</select>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="amount" class="form-label">Amount <span class="required">*</span></label>
                                        <input id="amount" name="amount" class="form-control" type="number" min="1" step="0.01">
                                    </div>
                                </div>
                            </div>';
            }
            else if($formtype == 'import price index amount form'){
                $form .= '<div class="row">
                            <div class="col-md-12">
                                <div class="mb-3">
                                    <label for="price_index_amount_file" class="form-label">Price Index Amount File (CSV) <span class="required">*</span></label>
                                    <input class="form-control" type="file" name="price_index_amount_file" id="price_index_amount_file">
                                </div>
                            </div>
                        </div>';
            }

            $form .= '</form>';

            $response[] = array(
                'FORM' => $form
            );

            echo json_encode($response);
        }
    }
    # -------------------------------------------------------------

    # System element
    else if($type == 'system element'){
        if(isset($_POST['elementtype']) && !empty($_POST['elementtype']) && isset($_POST['value'])){
            $elementtype = $_POST['elementtype'];
            $value = $_POST['value'];
            $element = '';

            if($elementtype == 'leave duration'){
                $element .= '<label class="form-label">Leave Date <span class="required">*</span></label>';

                if($value == 'SINGLE' || $value == 'HLFDAYMOR' || $value == 'HLFDAYAFT'){
                    $element .= '<div class="col-md-12">
                        <div class="mb-3">
                            <div class="input-group" id="date-leave-container">
                                <input type="text" class="form-control" id="leavedate" name="leavedate" autocomplete="off" data-date-format="m/dd/yyyy" data-date-container="#date-leave-container" data-provide="datepicker" data-date-autoclose="true">
                                <span class="input-group-text"><i class="mdi mdi-calendar"></i></span>
                            </div>
                        </div>
                    </div>';
                }
                else if($value == 'CUSTOM'){
                    $element .= '<div class="col-md-12">
                        <div class="mb-3">
                            <div class="input-group" id="date-leave-container">
                                <input type="text" class="form-control" id="leavedate" name="leavedate" autocomplete="off" data-date-format="m/dd/yyyy" data-date-container="#date-leave-container" data-provide="datepicker" data-date-autoclose="false" data-date-multidate="true">
                                <span class="input-group-text"><i class="mdi mdi-calendar"></i></span>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label for="starttime" class="form-label">Leave Start Time <span class="required">*</span></label>
                            <input type="time" id="starttime" name="starttime" class="form-control" autocomplete="off">
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label for="endtime" class="form-label">Leave End Time <span class="required">*</span></label>
                            <input type="time" id="endtime" name="endtime" class="form-control" autocomplete="off">
                        </div>
                    </div>';
                }
                else {
                    $element .= '<div class="col-md-12">
                        <div class="mb-3">
                            <div class="input-group" id="date-leave-container">
                                <input type="text" class="form-control" id="leavedate" name="leavedate" autocomplete="off" data-date-format="m/dd/yyyy" data-date-container="#date-leave-container" data-provide="datepicker" data-date-autoclose="false" data-date-multidate="true">
                                <span class="input-group-text"><i class="mdi mdi-calendar"></i></span>
                            </div>
                        </div>
                    </div>';
                }
            }
            else if($elementtype == 'scan attendance qr code form'){
               $element .= '<div class="row">
                    <div class="col-md-12">
                        <div id="attendance-reader"></div>
                        <div>
                            <select class="form-control select2 mt-3" id="cam_option">

                            </select>
                            <div>
                                <button class="btn btn-danger mt-3" id="btn_stop_scan">stop scan</button>
                            </div>
                        </div>
                    </div>
                </div>';
            }
              else if($elementtype == 'attendance summary details'){
                $element .= '<div class="row">
                                <div class="col-md-3">
                                    <div class="nav flex-column nav-pills" id="v-pills-tab" role="tablist" aria-orientation="vertical">
                                    <a class="nav-link mb-2 active" id="v-pills-attendance-record-tab" data-bs-toggle="pill" href="#v-pills-attendance-record" role="tab" aria-controls="v-pills-attendance-record" aria-selected="true">Attendance Record</a>
                                    <a class="nav-link mb-2" id="v-pills-overtime-tab" data-bs-toggle="pill" href="#v-pills-overtime" role="tab" aria-controls="v-pills-overtime" aria-selected="false">Overtime</a>
                                    <a class="nav-link mb-2" id="v-pills-leave-tab" data-bs-toggle="pill" href="#v-pills-leave" role="tab" aria-controls="v-pills-leave" aria-selected="false">Leave</a>
                                    <a class="nav-link mb-2" id="v-pills-attendance-adjustment-tab" data-bs-toggle="pill" href="#v-pills-attendance-adjustment" role="tab" aria-controls="v-pills-attendance-adjustment" aria-selected="false">Attendance Adjustment</a>
                                    </div>
                                </div>
                                <div class="col-md-9">
                                    <div class="tab-content text-muted mt-4 mt-md-0" id="v-pills-tabContent">
                                        <div class="tab-pane fade show active" id="v-pills-attendance-record" role="tabpanel" aria-labelledby="v-pills-attendance-record-tab">
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <table id="attendance-summary-attendance-record-datatable" class="table table-bordered align-middle mb-0 table-hover table-striped dt-responsive nowrap w-100">
                                                        <thead>
                                                            <tr>
                                                                <th class="all">Time In</th>
                                                                <th>Time In By</th>
                                                                <th>Time In IP</th>
                                                                <th class="all">Time Out</th>
                                                                <th>Time Out By</th>
                                                                <th>Time Out IP</th>
                                                                <th class="all">Total Hours</th>
                                                                <th class="all">Late</th>
                                                                <th class="all">Early Leave</th>
                                                                <th class="all">Overtime</th>
                                                                <th>Remarks</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody></tbody>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                            <div class="tab-pane fade" id="v-pills-overtime" role="tabpanel" aria-labelledby="v-pills-overtime-tab">
                                            <div class="row">
                                                <div class="col-md-12">
                                                   <table id="overtime-summary-datatable" class="table table-bordered align-middle mb-0 table-hover table-striped dt-responsive nowrap w-100">
                                                        <thead>
                                                            <tr>
                                                                <th class="all">Title</th>
                                                                <th class="all">Overtime Date</th>
                                                                <th class="all">Time</th>
                                                                <th class="all">Decimal Hours</th>  <!-- Added to match PHP response -->
                                                                <th class="all">Holiday Type</th>
                                                                <th class="all">Status</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody></tbody>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="tab-pane fade" id="v-pills-leave" role="tabpanel" aria-labelledby="v-pills-leave-tab">
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <table id="attendance-summary-leave-datatable" class="table table-bordered align-middle mb-0 table-hover table-striped dt-responsive nowrap w-100">
                                                        <thead>
                                                            <tr>
                                                                <th class="all">Attachment</th>
                                                                <th class="all">Leave</th>
                                                                <th class="all">Date</th>
                                                                <th class="all">Status</th>
                                                                <th>Reason</th>
                                                                <th>Approval Date</th>
                                                                <th>Cancelation Reason</th>
                                                                <th>Rejection Reason</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody></tbody>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="tab-pane fade" id="v-pills-attendance-adjustment" role="tabpanel" aria-labelledby="v-pills-attendance-adjustment-tab">
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <table id="attendance-summary-attendance-adjustment-datatable" class="table table-bordered align-middle mb-0 table-hover table-striped dt-responsive nowrap w-100">
                                                        <thead>
                                                            <tr>
                                                                <th class="all">Time In Date</th>
                                                                <th class="all">Time In</th>
                                                                <th class="all">Time Out Date</th>
                                                                <th class="all">Time Out</th>
                                                                <th class="all">Status</th>
                                                                <th class="all">Attachment</th>
                                                                <th class="all">Reason</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody></tbody>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>';
            }
            else if($elementtype == 'payroll summary details'){
                $element .= '<div class="row">
                                <div class="col-md-3">
                                    <div class="nav flex-column nav-pills" id="v-pills-tab" role="tablist" aria-orientation="vertical">
                                    <a class="nav-link mb-2 active" id="v-pills-attendance-record-tab" data-bs-toggle="pill" href="#v-pills-attendance-record" role="tab" aria-controls="v-pills-attendance-record" aria-selected="true">Attendance Record</a>
                                    <a class="nav-link mb-2" id="v-pills-leave-tab" data-bs-toggle="pill" href="#v-pills-leave" role="tab" aria-controls="v-pills-leave" aria-selected="false">Leave</a>
                                    <a class="nav-link mb-2" id="v-pills-payroll-specification-tab" data-bs-toggle="pill" href="#v-pills-payroll-specification" role="tab" aria-controls="v-pills-payroll-specification" aria-selected="false">Payroll Specification</a>
                                    </div>
                                </div>
                                <div class="col-md-9">
                                    <div class="tab-content text-muted mt-4 mt-md-0" id="v-pills-tabContent">
                                        <div class="tab-pane fade show active" id="v-pills-attendance-record" role="tabpanel" aria-labelledby="v-pills-attendance-record-tab">
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <table id="attendance-summary-attendance-record-datatable" class="table table-bordered align-middle mb-0 table-hover table-striped dt-responsive nowrap w-100">
                                                        <thead>
                                                            <tr>
                                                                <th class="all">Time In</th>
                                                                <th>Time In By</th>
                                                                <th>Time In IP</th>
                                                                <th class="all">Time Out</th>
                                                                <th>Time Out By</th>
                                                                <th>Time Out IP</th>
                                                                <th class="all">Total Hours</th>
                                                                <th class="all">Late</th>
                                                                <th class="all">Early Leave</th>
                                                                <th class="all">Overtime</th>
                                                                <th>Remarks</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody></tbody>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="tab-pane fade" id="v-pills-leave" role="tabpanel" aria-labelledby="v-pills-leave-tab">
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <table id="attendance-summary-leave-datatable" class="table table-bordered align-middle mb-0 table-hover table-striped dt-responsive nowrap w-100">
                                                        <thead>
                                                            <tr>
                                                            <th class="all">Attachment</th>
                                                            <th class="all">Leave</th>
                                                            <th class="all">Date</th>
                                                            <th class="all">Status</th>
                                                            <th>Reason</th>
                                                            <th>Approval Date</th>
                                                            <th>Cancelation Reason</th>
                                                            <th>Rejection Reason</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody></tbody>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="tab-pane fade" id="v-pills-payroll-specification" role="tabpanel" aria-labelledby="v-pills-payroll-specification-tab">
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <table id="payroll-summary-payroll-specification-datatable" class="table table-bordered align-middle mb-0 table-hover table-striped dt-responsive nowrap w-100">
                                                        <thead>
                                                            <tr>
                                                                <th class="all">Employee</th>
                                                                <th class="all">Payroll ID</th>
                                                                <th class="all">Specification Type</th>
                                                                <th class="all">Category</th>
                                                                <th class="all">Status</th>
                                                                <th class="all">Amount</th>
                                                                <th class="all">Payroll Date</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody></tbody>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>';
            }
            else if($elementtype == 'transmittal history details'){
                $element .= '<div class="row">
                    <div class="col-md-12">
                        <table id="transmittal-history-datatable" class="table table-bordered align-middle mb-0 table-hover table-striped dt-responsive nowrap w-100">
                            <thead>
                                <tr>
                                    <th class="all">Transmittal Date</th>
                                    <th class="all">Transmittal Type</th>
                                    <th class="all">Transmittal From</th>
                                    <th class="all">Transmittal To</th>
                                    <th class="all">Received/Filed/Cancelled By</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                </div>';
            }
            else if($elementtype == 'suggest to win votes details'){
                $element .= '<div class="row">
                    <div class="col-md-12">
                        <table id="suggest-to-win-vote-details-datatable" class="table table-bordered align-middle mb-0 table-hover table-striped dt-responsive nowrap w-100">
                            <thead>
                                <tr>
                                    <th class="all">Voter</th>
                                    <th class="all">Title</th>
                                    <th class="all">Satisfaction</th>
                                    <th class="all">Quality</th>
                                    <th class="all">Innovation</th>
                                    <th class="all">Feasibility</th>
                                    <th class="all">Total</th>
                                    <th>Vote Date</th>
                                    <th class="all">Remarks</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                </div>';
            }

            $response[] = array(
                'ELEMENT' => $element
            );

            echo json_encode($response);
        }
    }
    # -------------------------------------------------------------

    # -------------------------------------------------------------
    #   Generate table functions
    # -------------------------------------------------------------

    # Page table
    else if($type == 'page table'){
        if ($api->databaseConnection()) {
            # Get permission
            $delete_page = $api->check_role_permissions($username, 11);

            $sql = $api->db_connection->prepare('SELECT PAGE_ID, PAGE_NAME FROM tblpage ORDER BY PAGE_ID');

            if($sql->execute()){
                while($row = $sql->fetch()){
                    $page_id = $row['PAGE_ID'];
                    $page_name = $row['PAGE_NAME'];

                    if($delete_page > 0){
                        $delete = '<button type="button" class="btn btn-danger waves-effect waves-light delete-page" data-pageid="'. $page_id .'" title="Delete Page">
                            <i class="bx bx-trash font-size-16 align-middle"></i>
                        </button>';
                    }
                    else{
                        $delete = '';
                    }

                    $response[] = array(
                        'PAGE_NAME' => $page_name,
                        'ACTION' => '<div class="d-flex gap-2">
                                            <button type="button" class="btn btn-primary waves-effect waves-light update-page" data-pageid="'. $page_id .'"  title="View Details">
                                                <i class="bx bx-show font-size-16 align-middle"></i>
                                            </button>
                                            '. $delete .'
                                        </div>'
                    );
                }

                echo json_encode($response);
            }
            else{
                echo $sql->errorInfo()[2];
            }
        }
    }
    # -------------------------------------------------------------

    # Permission table
    else if($type == 'permission table'){
        if ($api->databaseConnection()) {
            # Get permission
            $delete_permission = $api->check_role_permissions($username, 14);

            $sql = $api->db_connection->prepare('SELECT PERMISSION_ID, PAGE_ID, PERMISSION_DESC FROM tblpermission ORDER BY PERMISSION_ID');

            if($sql->execute()){
                while($row = $sql->fetch()){
                    $permission_id = $row['PERMISSION_ID'];
                    $page_id = $row['PAGE_ID'];
                    $permission_desc = $row['PERMISSION_DESC'];
                    $page_name = $api->get_data_details_one_parameter('page', $page_id)[0]['PAGE_NAME'];

                    if($delete_permission > 0){
                        $delete = '<button type="button" class="btn btn-danger waves-effect waves-light delete-permission" data-permissionid="'. $permission_id .'" title="Delete Permission">
                        <i class="bx bx-trash font-size-16 align-middle"></i>
                        </button>';
                    }
                    else{
                        $delete = '';
                    }

                    $response[] = array(
                        'PERMISSION_ID' => $permission_id,
                        'PAGE_NAME' => $page_name,
                        'PERMISSION_DESC' => $permission_desc,
                        'ACTION' => '<div class="d-flex gap-2">
                            <button type="button" class="btn btn-primary waves-effect waves-light update-permission" data-permissionid="'. $permission_id .'" title="View Details">
                                <i class="bx bx-show font-size-16 align-middle"></i>
                            </button>
                            '. $delete .'
                        </div>'
                    );
                }

                echo json_encode($response);
            }
            else{
                echo $sql->errorInfo()[2];
            }
        }
    }
    # -------------------------------------------------------------

    # Roles table
    else if($type == 'roles table'){
        if ($api->databaseConnection()) {
            # Get role permission
            $delete_role = $api->check_role_permissions($username, 4);
            $assign_permission_to_role = $api->check_role_permissions($username, 5);
            $activate_role = $api->check_role_permissions($username, 6);
            $deactivate_role = $api->check_role_permissions($username, 7);
            $assign_user_to_role = $api->check_role_permissions($username, 188);

            $sql = $api->db_connection->prepare('SELECT ROLE_ID, ROLE_DESC, ACTIVE FROM tblrole ORDER BY ROLE_DESC');

            if($sql->execute()){
                while($row = $sql->fetch()){
                    $role_id = trim($row['ROLE_ID']);
                    $role_desc = trim($row['ROLE_DESC']);
                    $active = $row['ACTIVE'];
                    $role_status = $api->get_role_status($active)[0]['BADGE'];

                    if($active == '1'){
                        if($assign_permission_to_role > 0){
                            $assign_permission_role = '<button type="button" class="btn btn-info waves-effect waves-light assign-permission-role" data-roleid="'. $role_id .'" title="Assign Permission">
                            <i class="bx bx-list-check font-size-16 align-middle"></i>
                            </button>';
                        }
                        else{
                            $assign_permission_role = '';
                        }

                        if($deactivate_role > 0 && $role_id != 'ROLE1'){
                            $active_inactive = '<button type="button" class="btn btn-warning waves-effect waves-light deactivate-role" data-roleid="'. $role_id .'" title="Deactivate Role">
                                <i class="bx bx-x font-size-16 align-middle"></i>
                            </button>';
                        }
                        else{
                            $active_inactive = '';
                        }

                        if($assign_user_to_role > 0){
                            $assign_user = '<button type="button" class="btn btn-dark waves-effect waves-light assign-user-role" data-roleid="'. $role_id .'" title="Assign User To Role">
                            <i class="bx bx-user-check font-size-16 align-middle"></i>
                            </button>';
                        }
                        else{
                            $assign_user = '';
                        }

                        $delete = '';
                    }
                    else{
                        if($activate_role > 0 && $role_id != 'ROLE1'){
                            $active_inactive = ' <button type="button" class="btn btn-success waves-effect waves-light activate-role" data-roleid="'. $role_id .'" title="Activate Role">
                                <i class="bx bx-check font-size-16 align-middle"></i>
                            </button>';
                        }
                        else{
                            $active_inactive = '';
                        }

                        $assign_permission_role = '';
                        $assign_user = '';

                        if($delete_role > 0 && $role_id != 'ROLE1'){
                            $delete = '<button type="button" class="btn btn-danger waves-effect waves-light delete-role" data-roleid="'. $role_id .'" title="Delete Role">
                                        <i class="bx bx-trash font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $delete = '';
                        }
                    }

                    $response[] = array(
                        'ROLE_DESC' => $role_desc,
                        'ACTIVE' => $role_status,
                        'ACTION' => '<div class="d-flex gap-2">
                            <button type="button" class="btn btn-primary waves-effect waves-light update-role" data-roleid="'. $role_id .'" title="View Details">
                                <i class="bx bx-show font-size-16 align-middle"></i>
                            </button>
                            '. $assign_user . $delete . $assign_permission_role . $active_inactive .'
                        </div>'
                    );
                }

                echo json_encode($response);
            }
            else{
                echo $sql->errorInfo()[2];
            }
        }
    }
    # -------------------------------------------------------------

    # System code table
    else if($type == 'system code table'){
        if ($api->databaseConnection()) {
            # Get permission
            $delete_system_code = $api->check_role_permissions($username, 18);

            $sql = $api->db_connection->prepare('SELECT SYSTEM_TYPE, SYSTEM_CODE, SYSTEM_DESC FROM tblsystemcode ORDER BY SYSTEM_TYPE');

            if($sql->execute()){
                while($row = $sql->fetch()){
                    $system_type = $row['SYSTEM_TYPE'];
                    $system_code = $row['SYSTEM_CODE'];
                    $system_desc = $row['SYSTEM_DESC'];

                    if($delete_system_code > 0 && $system_code != 'SYSTYPE'){
                        $delete = '<button type="button" class="btn btn-danger waves-effect waves-light delete-system-code" data-systemtype="'. $system_type .'" data-systemcode="'. $system_code .'" title="Delete System Code">
                        <i class="bx bx-trash font-size-16 align-middle"></i>
                        </button>';
                    }
                    else{
                        $delete = '';
                    }

                    $response[] = array(
                        'SYSTEM_TYPE' => $system_type,
                        'SYSTEM_CODE' => $system_code,
                        'SYSTEM_DESC' => $system_desc,
                        'ACTION' => '<div class="d-flex gap-2">
                            <button type="button" class="btn btn-primary waves-effect waves-light update-system-code" data-systemtype="'. $system_type .'" data-systemcode="'. $system_code .'" title="View Details">
                            <i class="bx bx-show font-size-16 align-middle"></i>
                            </button>
                            '. $delete .'
                        </div>'
                    );
                }

                echo json_encode($response);
            }
            else{
                echo $sql->errorInfo()[2];
            }
        }
    }
    # -------------------------------------------------------------

    # System parameter table
    else if($type == 'system parameter table'){
        if ($api->databaseConnection()) {
            # Get permission
            $delete_system_parameter = $api->check_role_permissions($username, 22);

            $sql = $api->db_connection->prepare('SELECT PARAMETER_ID, PARAMETER_DESC, PARAMETER_EXTENSION, PARAMETER_NUMBER FROM tblsystemparameters ORDER BY PARAMETER_ID');

            if($sql->execute()){
                while($row = $sql->fetch()){
                    $parameter_id = $row['PARAMETER_ID'];
                    $parameter_desc = $row['PARAMETER_DESC'];
                    $parameter_extenstion = $row['PARAMETER_EXTENSION'];
                    $parameter_number = $row['PARAMETER_NUMBER'];

                    if($delete_system_parameter > 0 && $parameter_id > 1){
                        $delete = '<button type="button" class="btn btn-danger waves-effect waves-light delete-system-parameter" data-parameterid="'. $parameter_id .'" title="Delete System Parameter">
                        <i class="bx bx-trash font-size-16 align-middle"></i>
                        </button>';
                    }
                    else{
                        $delete = '';
                    }

                    $response[] = array(
                        'PARAMETER_DESC' => $parameter_desc,
                        'PARAMETER_EXTENSION' => $parameter_extenstion,
                        'PARAMETER_NUMBER' => $parameter_number,
                        'ACTION' => '<div class="d-flex gap-2">
                            <button type="button" class="btn btn-primary waves-effect waves-light update-system-parameter" data-parameterid="'. $parameter_id .'" title="View Details">
                            <i class="bx bx-show font-size-16 align-middle"></i>
                            </button>
                            '. $delete .'
                        </div>'
                    );
                }

                echo json_encode($response);
            }
            else{
                echo $sql->errorInfo()[2];
            }
        }
    }
    # -------------------------------------------------------------

    # User logs table
    else if($type == 'user logs table'){
        if ($api->databaseConnection()) {
            $sql = $api->db_connection->prepare('SELECT USERNAME, LOG_TYPE, LOG_DATE, LOG_TIME, LOG FROM tbluserlogs ORDER BY USERNAME');

            if($sql->execute()){
                while($row = $sql->fetch()){
                    $employee_details = $api->get_data_details_one_parameter('employee profile', $row['USERNAME']);
                    $first_name = trim($employee_details[0]['FIRST_NAME']);
                    $last_name = trim($employee_details[0]['LAST_NAME']);
                    $middle_name = trim($employee_details[0]['MIDDLE_NAME']);
                    $suffix = trim($employee_details[0]['SUFFIX']);
                    $full_name = $api->get_full_name($first_name, $middle_name, $last_name, $suffix)[0]['REVERSE_FULL_NAME'];
                    $log_type = $row['LOG_TYPE'];
                    $log_time = $row['LOG_TIME'];
                    $log = $row['LOG'];
                    $log_date = $api->check_date('empty', $row['LOG_DATE'], '', 'm/d/Y', '', '', '');

                    $response[] = array(
                        'USERNAME' => $full_name,
                        'LOG_TYPE' => $log_type,
                        'LOG_DATE' => $log_date . ' ' . $log_time,
                        'LOG' => $log
                    );
                }

                echo json_encode($response);
            }
            else{
                echo $sql->errorInfo()[2];
            }
        }
    }
    # -------------------------------------------------------------

    # Employee list table
    else if($type == 'employee list table'){
        if(isset($_POST['parameter1']) && isset($_POST['parameter2'])){
            if ($api->databaseConnection()) {
                $parameter1 = $_POST['parameter1'];
                $parameter2 = $_POST['parameter2'];

                # Get role permission
                $delete_employee = $api->check_role_permissions($username, 34);
                $view_employee_page = $api->check_role_permissions($username, 55);

                if(!empty($parameter1) && !empty($parameter2)){
                    if($parameter1 == 'branch'){
                        $sql = $api->db_connection->prepare("SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME, MIDDLE_NAME, SUFFIX, EMPLOYEMENT_TYPE, EMPLOYMENT_STATUS, DEPARTMENT, DESIGNATION FROM tblemployeeprofile WHERE BRANCH = :parameter2 AND EMPLOYEE_ID NOT LIKE 'USER-%'");
                    }
                    else if($parameter1 == 'department'){
                        $sql = $api->db_connection->prepare("SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME, MIDDLE_NAME, SUFFIX, EMPLOYEMENT_TYPE, EMPLOYMENT_STATUS, DEPARTMENT, DESIGNATION FROM tblemployeeprofile WHERE DEPARTMENT = :parameter2 AND EMPLOYEE_ID NOT LIKE 'USER-%'");
                    }
                    else if($parameter1 == 'designation'){
                        $sql = $api->db_connection->prepare("SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME, MIDDLE_NAME, SUFFIX, EMPLOYEMENT_TYPE, EMPLOYMENT_STATUS, DEPARTMENT, DESIGNATION FROM tblemployeeprofile WHERE DESIGNATION = :parameter2 AND EMPLOYEE_ID NOT LIKE 'USER-%'");
                    }
                    else if($parameter1 == 'employmenttype'){
                        $sql = $api->db_connection->prepare("SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME, MIDDLE_NAME, SUFFIX, EMPLOYEMENT_TYPE, EMPLOYMENT_STATUS, DEPARTMENT, DESIGNATION FROM tblemployeeprofile WHERE EMPLOYEMENT_TYPE = :parameter2 AND EMPLOYEE_ID NOT LIKE 'USER-%'");
                    }
                    else{
                        $sql = $api->db_connection->prepare("SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME, MIDDLE_NAME, SUFFIX, EMPLOYEMENT_TYPE, EMPLOYMENT_STATUS, DEPARTMENT, DESIGNATION FROM tblemployeeprofile WHERE EMPLOYMENT_STATUS = :parameter2 AND EMPLOYEE_ID NOT LIKE 'USER-%'");
                    }

                    $sql->bindParam(':parameter2', $parameter2);
                }
                else{
                    $sql = $api->db_connection->prepare("SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME, MIDDLE_NAME, SUFFIX, EMPLOYEMENT_TYPE, EMPLOYMENT_STATUS, DEPARTMENT, DESIGNATION FROM tblemployeeprofile WHERE EMPLOYEE_ID NOT LIKE 'USER-%'");
                }

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $employee_id = trim($row['EMPLOYEE_ID']);
                        $first_name = trim($row['FIRST_NAME']);
                        $last_name = trim($row['LAST_NAME']);
                        $middle_name = trim($row['MIDDLE_NAME']);
                        $suffix = trim($row['SUFFIX']);
                        $employee_type = $api->get_system_description('EMPLOYMENTTP', $row['EMPLOYEMENT_TYPE']);
                        $full_name = $api->get_full_name($first_name, $middle_name, $last_name, $suffix)[0]['REVERSE_FULL_NAME'];
                        $employment_status = $api->get_employment_status($row['EMPLOYMENT_STATUS'])[0]['BADGE'];
                        $employee_id_encrypted = $api->encrypt_data($employee_id);
                        $department_details = $api->get_data_details_one_parameter('department', $row['DEPARTMENT']);
                        $designation_details = $api->get_data_details_one_parameter('designation', $row['DESIGNATION']);
                        $department = $department_details[0]['DEPARTMENT'];
                        $designation = $designation_details[0]['DESIGNATION'];

                        if($view_employee_page > 0){
                            $view = '<a href="employee.php?id='. $employee_id_encrypted .'" class="btn btn-warning waves-effect waves-light view-employee" title="View Employee Page">
                                        <i class="bx bx-user font-size-16 align-middle"></i>
                                    </a>';
                        }
                        else{
                            $view = '';
                        }

                        if($delete_employee > 0){
                            $delete = '<button type="button" class="btn btn-danger waves-effect waves-light delete-employee" data-employeeid="'. $employee_id .'" title="Delete Employee">
                                        <i class="bx bx-trash font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $delete = '';
                        }

                        $response[] = array(
                            'EMPLOYEE_ID' => $employee_id,
                            'FULL_NAME' => $full_name,
                            'DEPARTMENT' => $department,
                            'DESIGNATION' => $designation,
                            'EMPLOYEMENT_TYPE' => $employee_type,
                            'EMPLOYEE_STATUS' => $employment_status,
                            'ACTION' => '<div class="d-flex gap-2">
                                <button type="button" class="btn btn-primary waves-effect waves-light update-employee" data-employeeid="'. $employee_id .'" title="View Details">
                                    <i class="bx bx-show font-size-16 align-middle"></i>
                                </button>
                                '.  $view . $delete .'
                            </div>'
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo()[2];
                }
            }
        }
    }
    # -------------------------------------------------------------
    //test only
   // In system-generation.php


    # Department table
    else if($type == 'department table'){
        if ($api->databaseConnection()) {
            # Get role permission
            $delete_department = $api->check_role_permissions($username, 38);

            $sql = $api->db_connection->prepare('SELECT DEPARTMENT_ID, DEPARTMENT FROM tbldepartment ORDER BY DEPARTMENT_ID');

            if($sql->execute()){
                while($row = $sql->fetch()){
                    $department_id = trim($row['DEPARTMENT_ID']);
                    $department = trim($row['DEPARTMENT']);

                    if($delete_department > 0){
                        $delete = '<button type="button" class="btn btn-danger waves-effect waves-light delete-department" data-departmentid="'. $department_id .'" title="Delete Department">
                                    <i class="bx bx-trash font-size-16 align-middle"></i>
                                </button>';
                    }
                    else{
                        $delete = '';
                    }

                    $response[] = array(
                        'DEPARTMENT' => $department,
                        'ACTION' => '<div class="d-flex gap-2">
                            <button type="button" class="btn btn-primary waves-effect waves-light update-department" data-departmentid="'. $department_id .'" title="View Details">
                                <i class="bx bx-show font-size-16 align-middle"></i>
                            </button>
                            '. $delete .'
                        </div>'
                    );
                }

                echo json_encode($response);
            }
            else{
                echo $sql->errorInfo()[2];
            }
        }
    }
    # -------------------------------------------------------------

    # Designation table
    else if($type == 'designation table'){
        if ($api->databaseConnection()) {
            # Get role permission
            $delete_designation = $api->check_role_permissions($username, 38);

            $sql = $api->db_connection->prepare('SELECT DESIGNATION_ID, DESIGNATION FROM tbldesignation ORDER BY DESIGNATION_ID');

            if($sql->execute()){
                while($row = $sql->fetch()){
                    $designation_id = trim($row['DESIGNATION_ID']);
                    $designation = trim($row['DESIGNATION']);

                    if($delete_designation > 0){
                        $delete = '<button type="button" class="btn btn-danger waves-effect waves-light delete-designation" data-designationid="'. $designation_id .'" title="Delete Designation">
                                    <i class="bx bx-trash font-size-16 align-middle"></i>
                                </button>';
                    }
                    else{
                        $delete = '';
                    }

                    $response[] = array(
                        'DESIGNATION' => $designation,
                        'ACTION' => '<div class="d-flex gap-2">
                            <button type="button" class="btn btn-primary waves-effect waves-light update-designation" data-designationid="'. $designation_id .'" title="View Details">
                                <i class="bx bx-show font-size-16 align-middle"></i>
                            </button>
                            '. $delete .'
                        </div>'
                    );
                }

                echo json_encode($response);
            }
            else{
                echo $sql->errorInfo()[2];
            }
        }
    }
    # -------------------------------------------------------------
    # Announcement table
    else if($type == 'announcement table'){
    if ($api->databaseConnection()) {
        # Get role permission
        $update_announcement = $api->check_role_permissions($username, 424);
        $delete_announcement = $api->check_role_permissions($username, 425);

        $sql = $api->db_connection->prepare('SELECT a.ANNOUNCEMENT_ID, a.TITLE, a.TYPE, a.START_DATE, a.END_DATE, a.IS_PRIORITY,
                                            d.DEPARTMENT, b.BRANCH, a.STATUS
                                        FROM hr_announcements a
                                        LEFT JOIN tbldepartment d ON a.DEPARTMENT = d.DEPARTMENT_ID
                                        LEFT JOIN tblbranch b ON a.BRANCH = b.BRANCH_ID
                                        ORDER BY a.CREATED_AT DESC');

        if($sql->execute()){
            $response = [];
            while($row = $sql->fetch()){
                $announcement_id = trim($row['ANNOUNCEMENT_ID']);
                $title = trim($row['TITLE']);
                $type = ucfirst(trim($row['TYPE']));
                $start_date = date('m/d/Y', strtotime($row['START_DATE']));
                $end_date = $row['END_DATE'] ? date('m/d/Y', strtotime($row['END_DATE'])) : 'No End Date';
                $is_priority = $row['IS_PRIORITY'] == 1 ? '<span class="badge bg-warning">Priority</span>' : '<span class="badge bg-secondary">Normal</span>';
                $department = $row['DEPARTMENT'] ?? 'All Departments';
                $branch = $row['BRANCH'] ?? 'All Branches';
                $status = $row['STATUS'] == 'active' ? '<span class="badge bg-success">Active</span>' : '<span class="badge bg-danger">Archived</span>';

                $update = '';
                $delete = '';

                if($update_announcement > 0){
                    $update = '<button type="button" class="btn btn-primary waves-effect waves-light update-announcement" data-announcementid="'. $announcement_id .'" title="Update Announcement">
                            <i class="bx bx-edit font-size-16 align-middle"></i>
                        </button>';
                }

                if($delete_announcement > 0){
                    $delete = '<button type="button" class="btn btn-danger waves-effect waves-light delete-announcement" data-announcementid="'. $announcement_id .'" title="Delete Announcement">
                                <i class="bx bx-trash font-size-16 align-middle"></i>
                            </button>';
                }

                $response[] = array(
                    'TITLE' => $title,
                    'TYPE' => $type,
                    'START_DATE' => $start_date,
                    'END_DATE' => $end_date,
                    'IS_PRIORITY' => $is_priority,
                    'DEPARTMENT' => $department,
                    'BRANCH' => $branch,
                    'STATUS' => $status,
                    'ACTION' => '<div class="d-flex gap-2">
                        <button type="button" class="btn btn-info waves-effect waves-light view-announcement" data-announcementid="'. $announcement_id .'" title="View Announcement">
                            <i class="bx bx-show font-size-16 align-middle"></i>
                        </button>
                        '. $update .'
                        '. $delete .'
                    </div>'
                );
            }

            echo json_encode($response);
        }
        else{
            echo $sql->errorInfo()[2];
        }
    }
}

    # Branch table
    else if($type == 'branch table'){
        if ($api->databaseConnection()) {
            # Get role permission
            $delete_branch = $api->check_role_permissions($username, 46);

            $sql = $api->db_connection->prepare('SELECT BRANCH_ID, BRANCH FROM tblbranch ORDER BY BRANCH_ID');

            if($sql->execute()){
                while($row = $sql->fetch()){
                    $branch_id = trim($row['BRANCH_ID']);
                    $branch = trim($row['BRANCH']);

                    if($delete_branch > 0){
                        $delete = '<button type="button" class="btn btn-danger waves-effect waves-light delete-branch" data-branchid="'. $branch_id .'" title="Delete Branch">
                                    <i class="bx bx-trash font-size-16 align-middle"></i>
                                </button>';
                    }
                    else{
                        $delete = '';
                    }

                    $response[] = array(
                        'BRANCH' => $branch,
                        'ACTION' => '<div class="d-flex gap-2">
                            <button type="button" class="btn btn-primary waves-effect waves-light update-branch" data-branchid="'. $branch_id .'" title="View Details">
                                <i class="bx bx-show font-size-16 align-middle"></i>
                            </button>
                            '. $delete .'
                        </div>'
                    );
                }

                echo json_encode($response);
            }
            else{
                echo $sql->errorInfo()[2];
            }
        }
    }
    # -------------------------------------------------------------

    # Holiday table
    else if($type == 'holiday table'){
        if ($api->databaseConnection()) {
            # Get role permission
            $delete_holiday = $api->check_role_permissions($username, 49);

            $sql = $api->db_connection->prepare('SELECT HOLIDAY_ID, HOLIDAY, HOLIDAY_DATE, HOLIDAY_TYPE FROM tblholiday ORDER BY HOLIDAY_ID');

            if($sql->execute()){
                while($row = $sql->fetch()){
                    $holiday_id = trim($row['HOLIDAY_ID']);
                    $holiday = trim($row['HOLIDAY']);
                    $holiday_date = $api->check_date('empty', trim($row['HOLIDAY_DATE']), '', 'm/d/Y', '', '', '');
                    $holiday_type = $api->get_system_description('HOLIDAYTYPE', trim($row['HOLIDAY_TYPE']));

                    if($delete_holiday > 0){
                        $delete = '<button type="button" class="btn btn-danger waves-effect waves-light delete-holiday" data-holidayid="'. $holiday_id .'" title="Delete Holiday">
                                    <i class="bx bx-trash font-size-16 align-middle"></i>
                                </button>';
                    }
                    else{
                        $delete = '';
                    }

                    $response[] = array(
                        'HOLIDAY' => $holiday,
                        'HOLIDAY_DATE' => $holiday_date,
                        'HOLIDAY_TYPE' => $holiday_type,
                        'ACTION' => '<div class="d-flex gap-2">
                            <button type="button" class="btn btn-primary waves-effect waves-light update-holiday" data-holidayid="'. $holiday_id .'" title="View Details">
                                <i class="bx bx-show font-size-16 align-middle"></i>
                            </button>
                            '. $delete .'
                        </div>'
                    );
                }

                echo json_encode($response);
            }
            else{
                echo $sql->errorInfo()[2];
            }
        }
    }
    # -------------------------------------------------------------

    # Leave type table
    else if($type == 'leave type table'){
        if ($api->databaseConnection()) {
            # Get role permission
            $delete_leave_type = $api->check_role_permissions($username, 54);

            $sql = $api->db_connection->prepare('SELECT LEAVE_TYPE_ID, LEAVE_NAME, NO_LEAVES, PAID_STATUS FROM tblleavetype ORDER BY LEAVE_TYPE_ID');

            if($sql->execute()){
                while($row = $sql->fetch()){
                    $leave_type_id = trim($row['LEAVE_TYPE_ID']);
                    $leave_name = trim($row['LEAVE_NAME']);
                    $no_leaves = number_format($row['NO_LEAVES']);
                    $paid_status = $api->get_system_description('PAIDSTAT', trim($row['PAID_STATUS']));

                    if($delete_leave_type > 0){
                        $delete = '<button type="button" class="btn btn-danger waves-effect waves-light delete-leave-type" data-leavetypeid="'. $leave_type_id .'" title="Delete Leave Type">
                                    <i class="bx bx-trash font-size-16 align-middle"></i>
                                </button>';
                    }
                    else{
                        $delete = '';
                    }

                    $response[] = array(
                        'LEAVE_NAME' => $leave_name,
                        'NO_LEAVES' => $no_leaves,
                        'PAID_STATUS' => $paid_status,
                        'ACTION' => '<div class="d-flex gap-2">
                            <button type="button" class="btn btn-primary waves-effect waves-light update-leave-type" data-leavetypeid="'. $leave_type_id .'" title="View Details">
                                <i class="bx bx-show font-size-16 align-middle"></i>
                            </button>
                            '. $delete .'
                        </div>'
                    );
                }

                echo json_encode($response);
            }
            else{
                echo $sql->errorInfo()[2];
            }
        }
    }
    # -------------------------------------------------------------

    # Employee leave entitlement table
    else if($type == 'employee leave entitlement table'){
        if(isset($_POST['parameter']) && !empty($_POST['parameter'])){
            if ($api->databaseConnection()) {
                $parameter = $_POST['parameter'];

                # Get role permission
                $delete_leave_type = $api->check_role_permissions($username, 54);

                $sql = $api->db_connection->prepare('SELECT LEAVE_ENTITLEMENT_ID, LEAVE_TYPE, NO_LEAVES, ACQUIRED_NO_LEAVES, START_DATE, END_DATE FROM tblleaveentitlement WHERE EMPLOYEE_ID = :parameter ORDER BY LEAVE_ENTITLEMENT_ID');
                $sql->bindParam(':parameter', $parameter);

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $leave_entitlement_id = trim($row['LEAVE_ENTITLEMENT_ID']);
                        $leave_name = $api->get_data_details_one_parameter('leave type', trim($row['LEAVE_TYPE']))[0]['LEAVE_NAME'];
                        $no_leaves = $row['NO_LEAVES'];
                        $acquired_no_leaves = $row['ACQUIRED_NO_LEAVES'];
                        $leave_status = $api->get_leave_entitlement_status($no_leaves, $acquired_no_leaves)[0]['BADGE'];
                        $start_date = $api->check_date('empty', $row['START_DATE'], '', 'm/d/Y', '', '', '');
                        $end_date = $api->check_date('empty', $row['END_DATE'], '', 'm/d/Y', '', '', '');

                        if($delete_leave_type > 0 && $acquired_no_leaves == 0){
                            $delete = '<button type="button" class="btn btn-danger waves-effect waves-light delete-leave-entitlement" data-entitlementid="'. $leave_entitlement_id .'" data-employeeid="'. $parameter .'" title="Delete Leave Entitlement">
                                        <i class="bx bx-trash font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $delete = '';
                        }

                        $response[] = array(
                            'LEAVE_NAME' => $leave_name,
                            'LEAVE_STATUS' => $leave_status,
                            'DATE_COVERAGE' => $start_date . ' - ' . $end_date,
                            'ACTION' => '<div class="d-flex gap-2">
                                <button type="button" class="btn btn-primary waves-effect waves-light update-leave-entitlement" data-entitlementid="'. $leave_entitlement_id .'" data-employeeid="'. $parameter .'" title="View Details">
                                    <i class="bx bx-show font-size-16 align-middle"></i>
                                </button>
                                '. $delete .'
                            </div>'
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo()[2];
                }
            }
        }
    }
    # -------------------------------------------------------------

    # Employee leave table
    else if($type == 'employee leave table'){
        if(isset($_POST['parameter']) && !empty($_POST['parameter'])){
            if ($api->databaseConnection()) {
                $parameter = $_POST['parameter'];

                # Get role permission
                $delete_employee_leave = $api->check_role_permissions($username, 61);
                $approve_employee_leave = $api->check_role_permissions($username, 99);
                $reject_employee_leave = $api->check_role_permissions($username, 100);
                $cancel_employee_leave = $api->check_role_permissions($username, 101);

                $sql = $api->db_connection->prepare('SELECT LEAVE_ID, LEAVE_TYPE, LEAVE_DATE, REASON, START_TIME, END_TIME, STATUS, CANCELATION_REASON, REJECTION_REASON FROM tblleave WHERE EMPLOYEE_ID = :parameter ORDER BY LEAVE_ID');
                $sql->bindParam(':parameter', $parameter);

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $leave_id = trim($row['LEAVE_ID']);
                        $leave_date = $api->check_date('empty', $row['LEAVE_DATE'], '', 'm/d/Y', '', '', '');
                        $reason = trim($row['REASON']);
                        $status = trim($row['STATUS']);
                        $leave_type = trim($row['LEAVE_TYPE']);
                        $cancelation_reason = trim($row['CANCELATION_REASON']);
                        $rejection_reason = trim($row['REJECTION_REASON']);
                        $start_time = $api->check_date('empty', trim($row['START_TIME']), '', 'h:i a', '', '', '');
                        $end_time = $api->check_date('empty', trim($row['END_TIME']), '', 'h:i a', '', '', '');
                        $leave_name = $api->get_data_details_one_parameter('leave type', $leave_type)[0]['LEAVE_NAME'];
                        $leave_status = $api->get_leave_status($status, $system_date, $leave_date)[0]['BADGE'];

                        if($delete_employee_leave > 0 && $status == '2'){
                            $delete = '<button type="button" class="btn btn-danger waves-effect waves-light delete-employee-leave" data-leaveid="'. $leave_id .'" data-employeeid="'. $parameter .'" title="Delete Employee Leave">
                                        <i class="bx bx-trash font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $delete = '';
                        }

                        if($approve_employee_leave > 0 && $status == '2'){
                            $approve = '<button type="button" class="btn btn-success waves-effect waves-light approve-leave" data-leaveid="'. $leave_id .'" data-employeeid="'. $parameter .'" data-leavetype="'. $leave_type .'" title="Approve Leave">
                                        <i class="bx bx-check font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $approve = '';
                        }

                        if($reject_employee_leave > 0 && $status == '2'){
                            $reject = '<button type="button" class="btn btn-danger waves-effect waves-light reject-leave" data-leaveid="'. $leave_id .'" data-employeeid="'. $parameter .'" title="Reject Leave">
                                        <i class="bx bx-x font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $reject = '';
                        }

                        if($cancel_employee_leave > 0 && ($status == '2' || $status == '4' || ($status == '1'))){
                        #if($cancel_employee_leave > 0){
                            $cancel = '<button type="button" class="btn btn-warning waves-effect waves-light cancel-leave" data-leaveid="'. $leave_id .'" data-employeeid="'. $parameter .'" title="Cancel Leave">
                                        <i class="bx bx-calendar-x font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $cancel = '';
                        }

                        $response[] = array(
                            'LEAVE_NAME' => $leave_name,
                            'LEAVE_DATE' => $leave_date . '<br/>' . $start_time . ' - ' . $end_time,
                            'LEAVE_STATUS' => $leave_status,
                            'REASON' => $reason,
                            'CANCELATION_REASON' => $cancelation_reason,
                            'REJECTION_REASON' => $rejection_reason,
                            'ACTION' => '<div class="d-flex gap-2">
                                <button type="button" class="btn btn-primary waves-effect waves-light update-employee-leave" data-leaveid="'. $leave_id .'" data-employeeid="'. $parameter .'" title="View Details">
                                    <i class="bx bx-show font-size-16 align-middle"></i>
                                </button>
                                '. $approve . $cancel . $reject . $delete .'
                            </div>'
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo()[2];
                }
            }
        }
    }
    # -------------------------------------------------------------

    # Employee document table
    else if($type == 'employee document table'){
        if(isset($_POST['parameter']) && !empty($_POST['parameter'])){
            if ($api->databaseConnection()) {
                $parameter = $_POST['parameter'];

                # Get role permission
                $delete_employee_document = $api->check_role_permissions($username, 63);
                $view_employee_document = $api->check_role_permissions($username, 64);

                $sql = $api->db_connection->prepare('SELECT DOCUMENT_ID, DOCUMENT_NAME, DOCUMENT_NOTE, DOCUMENT_PATH, DOCUMENT_DATE, DOCUMENT_CATEGORY, UPLOAD_DATE, UPLOAD_TIME, UPLOAD_BY FROM tblemployeedocument WHERE EMPLOYEE_ID = :parameter ORDER BY DOCUMENT_ID');
                $sql->bindParam(':parameter', $parameter);

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $document_id = trim($row['DOCUMENT_ID']);
                        $document_name = trim($row['DOCUMENT_NAME']);
                        $document_note = trim($row['DOCUMENT_NOTE']);
                        $document_path = trim($row['DOCUMENT_PATH']);
                        $document_category = $api->get_system_description('EMPLOYEEDOC', $row['DOCUMENT_CATEGORY']);
                        $upload_time = trim($row['UPLOAD_TIME']);
                        $upload_by = trim($row['UPLOAD_BY']);
                        $document_date = $api->check_date('empty', $row['DOCUMENT_DATE'], '', 'm/d/Y', '', '', '');
                        $upload_date = $api->check_date('empty', $row['UPLOAD_DATE'], '', 'm/d/Y', '', '', '');

                        $upload_by_details = $api->get_data_details_one_parameter('employee profile', $upload_by);
                        $upload_by_by_first_name = $upload_by_details[0]['FIRST_NAME'];
                        $upload_by_by_last_name = $upload_by_details[0]['LAST_NAME'];
                        $upload_by_by_middle_name = $upload_by_details[0]['MIDDLE_NAME'];
                        $upload_by_by_suffix = $upload_by_details[0]['SUFFIX'];
                        $upload_by_by_fullname = $api->get_full_name($upload_by_by_first_name, $upload_by_by_middle_name, $upload_by_by_last_name, $upload_by_by_suffix)[0]['REVERSE_FULL_NAME'];

                        if($view_employee_document > 0){
                            $view = '<a href="'. $document_path .'" class="btn btn-primary waves-effect waves-light" target="_blank">
                                        <i class="bx bx-show font-size-16 align-middle" title="View Employee Document"></i>
                                    </a>';
                        }
                        else{
                            $view = '';
                        }

                        if($delete_employee_document > 0){
                            $delete = '<button type="button" class="btn btn-danger waves-effect waves-light delete-employee-document" data-documentid="'. $document_id .'" data-employeeid="'. $parameter .'" title="Delete Employee Document">
                                        <i class="bx bx-trash font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $delete = '';
                        }

                        $response[] = array(
                            'DOCUMENT_NAME' => $document_name,
                            'DOCUMENT_CATEGORY' => $document_category,
                            'DOCUMENT_NOTE' => $document_note,
                            'DOCUMENT_DATE' => $document_date,
                            'UPLOAD_DATE' => $upload_date . '<br/>' . $upload_time,
                            'UPLOAD_BY' => $upload_by_by_fullname,
                            'ACTION' => '<div class="d-flex gap-2">
                                    '. $view . $delete .'
                                </div>'
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo()[2];
                }
            }
        }
    }
    # -------------------------------------------------------------

    # Employee attendance logs table
    else if($type == 'employee attendance logs table'){
        if(isset($_POST['parameter']) && !empty($_POST['parameter'])){
            if ($api->databaseConnection()) {
                $parameter = $_POST['parameter'];

                # Get role permission
                $delete_employee_attendance_log = $api->check_role_permissions($username, 72);

                $sql = $api->db_connection->prepare('SELECT ATTENDANCE_ID, TIME_IN_DATE, TIME_IN, TIME_IN_BY, TIME_IN_IP, TIME_IN_LAT, TIME_IN_LONG, TIME_OUT_DATE, TIME_OUT, TIME_OUT_BY, TIME_OUT_IP, TIME_OUT_LAT, TIME_OUT_LONG, LATE, EARLY_LEAVING, OVERTIME, TOTAL_HOURS, REMARKS FROM tblattendancerecord WHERE EMPLOYEE_ID = :parameter ORDER BY ATTENDANCE_ID');
                $sql->bindParam(':parameter', $parameter);

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $attendance_id = trim($row['ATTENDANCE_ID']);
                        $time_in_date = $api->check_date('empty', trim($row['TIME_IN_DATE']), '', 'm/d/Y', '', '', '');
                        $time_in = $api->check_date('empty', trim($row['TIME_IN']), '', 'h:i:s a', '', '', '');
                        $time_in_by = trim($row['TIME_IN_BY']);
                        $time_in_ip = trim($row['TIME_IN_IP']);
                        $time_in_lat = trim($row['TIME_IN_LAT']);
                        $time_in_long = trim($row['TIME_IN_LONG']);
                        $time_out_date = $api->check_date('empty', trim($row['TIME_OUT_DATE']), '', 'm/d/Y', '', '', '');
                        $time_out = $api->check_date('empty', trim($row['TIME_OUT']), '', 'h:i:s a', '', '', '');
                        $time_out_by = trim($row['TIME_OUT_BY']);
                        $time_out_ip = trim($row['TIME_OUT_IP']);
                        $time_out_lat = trim($row['TIME_OUT_LAT']);
                        $time_out_long = trim($row['TIME_OUT_LONG']);
                        $late = number_format($row['LATE'], 2) . ' Minute(s)';
                        $early_leaving = number_format($row['EARLY_LEAVING'], 2) . ' Minute(s)';
                        $overtime = number_format($row['OVERTIME'], 2) . ' Hour(s)';
                        $total_hours = number_format($row['TOTAL_HOURS'], 2) . ' Hour(s)';
                        $remarks = trim($row['REMARKS']);

                        $time_in_by_details = $api->get_data_details_one_parameter('employee profile', $time_in_by);
                        $time_in_by_first_name = $time_in_by_details[0]['FIRST_NAME'];
                        $time_in_by_last_name = $time_in_by_details[0]['LAST_NAME'];
                        $time_in_by_middle_name = $time_in_by_details[0]['MIDDLE_NAME'];
                        $time_in_by_suffix = $time_in_by_details[0]['SUFFIX'];
                        $time_in_by_fullname = $api->get_full_name($time_in_by_first_name, $time_in_by_middle_name, $time_in_by_last_name, $time_in_by_suffix)[0]['REVERSE_FULL_NAME'];

                        if(!empty($time_out_date) && !empty($time_out)){
                            $time_out_by_details = $api->get_data_details_one_parameter('employee profile', $time_out_by);
                            $time_out_by_first_name = $time_out_by_details[0]['FIRST_NAME'];
                            $time_out_by_last_name = $time_out_by_details[0]['LAST_NAME'];
                            $time_out_by_middle_name = $time_out_by_details[0]['MIDDLE_NAME'];
                            $time_out_by_suffix = $time_out_by_details[0]['SUFFIX'];
                            $time_out_by_fullname = $api->get_full_name($time_out_by_first_name, $time_out_by_middle_name, $time_out_by_last_name, $time_out_by_suffix)[0]['REVERSE_FULL_NAME'];
                        }
                        else{
                            $time_out_by_fullname = '';
                        }

                        if($delete_employee_attendance_log > 0){
                            $delete = '<button type="button" class="btn btn-danger waves-effect waves-light delete-employee-attendance-log" data-attendanceid="'. $attendance_id .'" data-employeeid="'. $parameter .'" title="Delete Employee Attendance Log">
                                        <i class="bx bx-trash font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $delete = '';
                        }

                        $response[] = array(
                            'TIME_IN_DATE' => '<a href="https://maps.google.com/?q=' . $time_in_lat . ', ' . $time_in_long . '" target="_blank">' . $time_in_date . '<br/>' . $time_in . '</a>',
                            'TIME_IN_BY' => $time_in_by_fullname,
                            'TIME_IN_IP' => $time_in_ip,
                            'TIME_OUT_DATE' => '<a href="https://maps.google.com/?q=' . $time_out_lat . ', ' . $time_out_long . '" target="_blank">' . $time_out_date . '<br/>' . $time_out . '</a>',
                            'TIME_OUT_BY' => $time_out_by_fullname,
                            'TIME_OUT_IP' => $time_out_ip,
                            'LATE' => $late,
                            'EARLY_LEAVING' => $early_leaving,
                            'OVERTIME' => $overtime,
                            'TOTAL_HOURS' => $total_hours,
                            'REMARKS' => $remarks,
                            'ACTION' => '<div class="d-flex gap-2">
                                <button type="button" class="btn btn-primary waves-effect waves-light update-employee-attendance-log" data-attendanceid="'. $attendance_id .'" data-employeeid="'. $parameter .'" title="View Details">
                                    <i class="bx bx-show font-size-16 align-middle"></i>
                                </button>
                                '. $delete .'
                            </div>'
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo()[2];
                }
            }
        }
    }
    # -------------------------------------------------------------

    # Leave table
    else if($type == 'leave table'){
        if ($api->databaseConnection()) {
            # Get role permission
            $approve_leave = $api->check_role_permissions($username, 66);
            $reject_leave = $api->check_role_permissions($username, 67);
            $cancel_leave = $api->check_role_permissions($username, 102);
            $view_all_pending_leave = $api->check_role_permissions($username, 103);
            $employee_profile_details = $api->get_data_details_one_parameter('employee profile', $username);
            $employee_id = $employee_profile_details[0]['EMPLOYEE_ID'];

            if($view_all_pending_leave > 0){
                $sql = $api->db_connection->prepare("SELECT LEAVE_ID, EMPLOYEE_ID, LEAVE_TYPE, LEAVE_DATE, START_TIME, END_TIME, REASON, FILE_DATE, FILE_TIME, ATTACHMENT_PATH FROM tblleave WHERE STATUS = '2' ORDER BY LEAVE_DATE DESC");
            }
            else{
                $sql = $api->db_connection->prepare("SELECT LEAVE_ID, EMPLOYEE_ID, LEAVE_TYPE, LEAVE_DATE, START_TIME, END_TIME, REASON, FILE_DATE, FILE_TIME , ATTACHMENT_PATH
                FROM tblleave
                WHERE STATUS = '2'
                AND (EMPLOYEE_ID IN (SELECT SUBORDINATE_ID FROM tblemployeesubordinate WHERE EMPLOYEE_ID = :employee_id) OR EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM tblemployeeauthorizer WHERE AUTHORIZER_ID = :employee_id)) ORDER BY LEAVE_DATE DESC");
                $sql->bindParam(':employee_id', $employee_id);
            }

            if($sql->execute()){
                while($row = $sql->fetch()){
                    $leave_id = trim($row['LEAVE_ID']);
                    $employee_id = trim($row['EMPLOYEE_ID']);
                    $leave_type = trim($row['LEAVE_TYPE']);
                    $leave_date = $api->check_date('empty', $row['LEAVE_DATE'], '', 'm/d/Y', '', '', '');
                    $file_date = $api->check_date('empty', $row['FILE_DATE'], '', 'm/d/Y', '', '', '');
                    $reason = trim($row['REASON']);
                    $start_time = $api->check_date('empty', trim($row['START_TIME']), '', 'h:i a', '', '', '');
                    $end_time = $api->check_date('empty', trim($row['END_TIME']), '', 'h:i a', '', '', '');
                    $file_time = $api->check_date('empty', trim($row['FILE_TIME']), '', 'h:i a', '', '', '');

                    $leave_entitlement_details = $api->get_data_details_two_parameter('leave entitlement', $leave_type, $employee_id);
                    $no_leaves = $leave_entitlement_details[0]['NO_LEAVES'] ?? 0;
                    $acquired_no_leaves = $leave_entitlement_details[0]['ACQUIRED_NO_LEAVES'] ?? 0;
                    $leave_status = $api->get_leave_entitlement_status($no_leaves, $acquired_no_leaves)[0]['BADGE'];

                    $employee_profile_details = $api->get_data_details_one_parameter('employee profile', $employee_id);
                    $first_name = $employee_profile_details[0]['FIRST_NAME'];
                    $last_name = $employee_profile_details[0]['LAST_NAME'];
                    $middle_name = $employee_profile_details[0]['MIDDLE_NAME'];
                    $suffix = $employee_profile_details[0]['SUFFIX'];
                    $full_name = $api->get_full_name($first_name, $middle_name, $last_name, $suffix)[0]['REVERSE_FULL_NAME'];

                    $leave_type_details = $api->get_data_details_one_parameter('leave type', $leave_type);
                    $leave_name = $leave_type_details[0]['LEAVE_NAME'];

                    $attachment = $row['ATTACHMENT_PATH'];
                    $attachment_button = '';

                    if($attachment != null){
                       // $leave_name = '<a href="'.$attachment.'" target="_blank">'.$leave_type_details[0]['LEAVE_NAME'].'</a>';
                        $attachment_button = '<a href="'.$attachment.'" target="_blank" class="btn btn-primary btn-sm">see attachment</a>';
                    }else{
                        //$leave_name = $leave_type_details[0]['LEAVE_NAME'];
                        $attachment_button = ' none';
                    }


                    if($approve_leave > 0){
                        $approve = '<button type="button" class="btn btn-success waves-effect waves-light approve-leave" data-leaveid="'. $leave_id .'" data-employeeid="'. $employee_id .'" data-leavetype="'. $leave_type .'" title="Approve Leave">
                                    <i class="bx bx-check font-size-16 align-middle"></i>
                                </button>';
                    }
                    else{
                        $approve = '';
                    }

                    if($reject_leave > 0){
                        $reject = '<button type="button" class="btn btn-danger waves-effect waves-light reject-leave" data-leaveid="'. $leave_id .'" data-employeeid="'. $employee_id .'" data-leavetype="'. $leave_type .'" title="Reject Leave">
                                    <i class="bx bx-x font-size-16 align-middle"></i>
                                </button>';
                    }
                    else{
                        $reject = '';
                    }

                    if($cancel_leave > 0){
                        $cancel = '<button type="button" class="btn btn-warning waves-effect waves-light cancel-leave" data-leaveid="'. $leave_id .'" data-employeeid="'. $employee_id .'" data-leavetype="'. $leave_type .'" title="Cancel Leave">
                                    <i class="bx bx-calendar-x font-size-16 align-middle"></i>
                                </button>';
                    }
                    else{
                        $cancel = '';
                    }

                    $response[] = array(
                        'FULL_NAME' => $full_name,
                        'LEAVE_NAME' => $leave_name,
                        'TOTAL' => $leave_status,
                        'LEAVE_DATE' => $leave_date . '<br/>' . $start_time . ' - ' . $end_time,
                        'REASON' => $reason,
                        'FILE_DATE' => $file_date . '<br/>' . $file_time,
                        'ATTACHMENT_PATH' => $attachment_button  ,
                        'ACTION' => '<div class="d-flex gap-2">
                                            '. $approve .'
                                            '. $reject .'
                                            '. $cancel .'
                                        </div>'
                    );
                }

                echo json_encode($response);
            }
            else{
                echo $sql->errorInfo()[2];
            }
        }
    }
    # -------------------------------------------------------------

    # Payroll specification table
    else if($type == 'payroll specification table'){
        if ($api->databaseConnection()) {
            # Get role permission
            $delete_payroll_specification = $api->check_role_permissions($username, 80);

            $sql = $api->db_connection->prepare('SELECT SPEC_ID, EMPLOYEE_ID, SPEC_TYPE, CATEGORY, SPEC_AMOUNT, PAYROLL_DATE, PAYROLL_ID, STATUS FROM tblpayrollspec ORDER BY SPEC_ID');

            if($sql->execute()){
                while($row = $sql->fetch()){
                    $spec_id = trim($row['SPEC_ID']);
                    $employee_id = trim($row['EMPLOYEE_ID']);
                    $spec_type = trim($row['SPEC_TYPE']);
                    $payroll_id = trim($row['PAYROLL_ID']);
                    $specification_type = $api->get_system_description('SPECTYPE', $spec_type);
                    $category = trim($row['CATEGORY']);
                    $payroll_date = $api->check_date('empty', $row['PAYROLL_DATE'], '', 'm/d/Y', '', '', '');
                    $spec_amount = $row['SPEC_AMOUNT'];
                    $status = $row['STATUS'];
                    $payroll_spec_status = $api->get_payroll_specification_status($status)[0]['BADGE'];

                    if($spec_type == 'ALLOWANCE'){
                        $allowance_type_details = $api->get_data_details_one_parameter('allowance type', $category);
                        $category_name = $allowance_type_details[0]['ALLOWANCE'];
                    }
                    else if($spec_type == 'DEDUCTION'){
                        $deduction_type_details = $api->get_data_details_one_parameter('deduction type', $category);
                        $category_name = $deduction_type_details[0]['DEDUCTION'];

                        $deduction_category = $deduction_type_details[0]['CATEGORY'];

                        if($deduction_category == 'GOVERNMENT'){
                            $spec_amount = $api->get_deduction_amount($category, $employee_id);
                        }
                    }
                    else{
                        $other_income_type_details = $api->get_data_details_one_parameter('other income type', $category);
                        $category_name = $other_income_type_details[0]['OTHER_INCOME'];
                    }

                    $employee_profile_details = $api->get_data_details_one_parameter('employee profile', $employee_id);
                    $first_name = $employee_profile_details[0]['FIRST_NAME'];
                    $last_name = $employee_profile_details[0]['LAST_NAME'];
                    $middle_name = $employee_profile_details[0]['MIDDLE_NAME'];
                    $suffix = $employee_profile_details[0]['SUFFIX'];
                    $full_name = $api->get_full_name($first_name, $middle_name, $last_name, $suffix)[0]['REVERSE_FULL_NAME'];

                    if($delete_payroll_specification > 0 && $status == '0'){
                        $delete = '<button type="button" class="btn btn-danger waves-effect waves-light delete-payroll-specification" data-specid="'. $spec_id .'" title="Delete Payroll Spec">
                                    <i class="bx bx-trash font-size-16 align-middle"></i>
                                </button>';
                    }
                    else{
                        $delete = '';
                    }

                    $response[] = array(
                        'FULL_NAME' => $full_name,
                        'PAYROLL_ID' => $payroll_id,
                        'SPEC_TYPE' => $specification_type,
                        'CATEGORY' => $category_name,
                        'STATUS' => $payroll_spec_status,
                        'SPEC_AMOUNT' => number_format($spec_amount, 2),
                        'PAYROLL_DATE' => $payroll_date,
                        'ACTION' => '<div class="d-flex gap-2">
                            <button type="button" class="btn btn-primary waves-effect waves-light update-payroll-specification" data-specid="'. $spec_id .'" title="View Details">
                                <i class="bx bx-show font-size-16 align-middle"></i>
                            </button>
                            '. $delete .'
                        </div>'
                    );
                }

                echo json_encode($response);
            }
            else{
                echo $sql->errorInfo()[2];
            }
        }
    }
    # -------------------------------------------------------------

    # Deduction type table
    else if($type == 'deduction type table'){
        if ($api->databaseConnection()) {
            # Get role permission
            $delete_deduction_type = $api->check_role_permissions($username, 80);
            $view_deduction_amount_page = $api->check_role_permissions($username, 81);

            $sql = $api->db_connection->prepare('SELECT DEDUCTION_TYPE_ID, DEDUCTION, CATEGORY FROM tbldeductiontype ORDER BY DEDUCTION_TYPE_ID');

            if($sql->execute()){
                while($row = $sql->fetch()){
                    $deduction_type_id = trim($row['DEDUCTION_TYPE_ID']);
                    $deduction = trim($row['DEDUCTION']);
                    $category = trim($row['CATEGORY']);
                    $category_name = $api->get_system_description('DEDUCTIONCATEGORY', trim($row['CATEGORY']));
                    $encrypted_deduction_type_id = $api->encrypt_data($deduction_type_id);

                    if($view_deduction_amount_page > 0 && $category == 'GOVERNMENT'){
                        $deduction_amount_page = '<a href="deduction-amount.php?id='. $encrypted_deduction_type_id .'" class="btn btn-success waves-effect waves-light view-deduction-amount" data-deductiontypeid="'. $deduction_type_id .'" title="View Deduction Amount Page">
                                    <i class="bx bx-receipt font-size-16 align-middle"></i>
                                </a>';
                    }
                    else{
                        $deduction_amount_page = '';
                    }

                    if($delete_deduction_type > 0){
                        $delete = '<button type="button" class="btn btn-danger waves-effect waves-light delete-deduction-type" data-deductiontypeid="'. $deduction_type_id .'" title="Delete Deduction Type">
                                    <i class="bx bx-trash font-size-16 align-middle"></i>
                                </button>';
                    }
                    else{
                        $delete = '';
                    }

                    $response[] = array(
                        'DEDUCTION' => $deduction,
                        'CATEGORY' => $category_name,
                        'ACTION' => '<div class="d-flex gap-2">
                            <button type="button" class="btn btn-primary waves-effect waves-light update-deduction-type" data-deductiontypeid="'. $deduction_type_id .'" title="View Details">
                                <i class="bx bx-show font-size-16 align-middle"></i>
                            </button>
                            '. $deduction_amount_page . $delete .'
                        </div>'
                    );
                }

                echo json_encode($response);
            }
            else{
                echo $sql->errorInfo()[2];
            }
        }
    }
    # -------------------------------------------------------------

    # Deduction amount table
    else if($type == 'deduction amount table'){
        if(isset($_POST['parameter']) && !empty($_POST['parameter'])){
            if ($api->databaseConnection()) {
                $parameter = $_POST['parameter'];

                # Get role permission
                $delete_deduction_amount = $api->check_role_permissions($username, 80);

                # Deduction type details
                $deduction_type_details = $api->get_data_details_one_parameter('deduction type', $parameter);
                $deduction = $deduction_type_details[0]['DEDUCTION'];

                $sql = $api->db_connection->prepare('SELECT START_RANGE, END_RANGE, DEDUCTION_AMOUNT FROM tbldeductionamount WHERE DEDUCTION_TYPE_ID = :parameter ORDER BY START_RANGE');
                $sql->bindParam(':parameter', $parameter);

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $start_range = $row['START_RANGE'];
                        $end_range = $row['END_RANGE'];
                        $deduction_amount = number_format($row['DEDUCTION_AMOUNT'], 2);

                        if($delete_deduction_amount > 0){
                            $delete = '<button type="button" class="btn btn-danger waves-effect waves-light delete-deduction-amount" data-startrange="'. $start_range .'" data-endrange="'. $end_range .'" data-deductiontypeid="'. $parameter .'" title="Delete Deduction Amount">
                                        <i class="bx bx-trash font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $delete = '';
                        }

                        $response[] = array(
                            'DEDUCTION' => $deduction,
                            'RANGE' => number_format($start_range, 2) . ' - ' . number_format($end_range, 2),
                            'DEDUCTION_AMOUNT' => $deduction_amount,
                            'ACTION' => '<div class="d-flex gap-2">
                                <button type="button" class="btn btn-primary waves-effect waves-light update-deduction-amount" data-startrange="'. $start_range .'" data-endrange="'. $end_range .'" data-deductiontypeid="'. $parameter .'" title="View Details">
                                    <i class="bx bx-show font-size-16 align-middle"></i>
                                </button>
                                '. $delete .'
                            </div>'
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo()[2];
                }
            }
        }
    }
    # -------------------------------------------------------------

    # Main deduction amount table
    else if($type == 'main deduction amount table'){
        if ($api->databaseConnection()) {
            # Get role permission
            $delete_deduction_amount = $api->check_role_permissions($username, 89);

            $sql = $api->db_connection->prepare('SELECT DEDUCTION_TYPE_ID, START_RANGE, END_RANGE, DEDUCTION_AMOUNT FROM tbldeductionamount ORDER BY DEDUCTION_TYPE_ID');

            if($sql->execute()){
                while($row = $sql->fetch()){
                    $deduction_type_id = $row['DEDUCTION_TYPE_ID'];
                    $start_range = $row['START_RANGE'];
                    $end_range = $row['END_RANGE'];
                    $deduction_amount = number_format($row['DEDUCTION_AMOUNT'], 2);

                    $deduction_type_details = $api->get_data_details_one_parameter('deduction type', $deduction_type_id);
                    $deduction = $deduction_type_details[0]['DEDUCTION'];

                    if($delete_deduction_amount > 0){
                        $delete = '<button type="button" class="btn btn-danger waves-effect waves-light delete-main-deduction-amount" data-startrange="'. $start_range .'" data-endrange="'. $end_range .'" data-deductiontypeid="'. $deduction_type_id .'" title="Delete Deduction Amount">
                                    <i class="bx bx-trash font-size-16 align-middle"></i>
                                </button>';
                    }
                    else{
                        $delete = '';
                    }

                    $response[] = array(
                        'DEDUCTION' => $deduction,
                        'RANGE' => number_format($start_range, 2) . ' - ' . number_format($end_range, 2),
                        'DEDUCTION_AMOUNT' => $deduction_amount,
                        'ACTION' => '<div class="d-flex gap-2">
                                <button type="button" class="btn btn-primary waves-effect waves-light update-main-deduction-amount" data-startrange="'. $start_range .'" data-endrange="'. $end_range .'" data-deductiontypeid="'. $deduction_type_id .'" title="View Details">
                                    <i class="bx bx-show font-size-16 align-middle"></i>
                                </button>
                                '. $delete .'
                            </div>'
                    );
                }

                echo json_encode($response);
            }
            else{
                echo $sql->errorInfo()[2];
            }
        }
    }
    # -------------------------------------------------------------

    # Allowance type table
    else if($type == 'allowance type table'){
        if ($api->databaseConnection()) {
            # Get role permission
            $delete_allowance_type = $api->check_role_permissions($username, 94);

            $sql = $api->db_connection->prepare('SELECT ALLOWANCE_TYPE_ID, ALLOWANCE, TAX_TYPE FROM tblallowancetype ORDER BY ALLOWANCE_TYPE_ID');

            if($sql->execute()){
                while($row = $sql->fetch()){
                    $allowance_type_id = trim($row['ALLOWANCE_TYPE_ID']);
                    $allowance = trim($row['ALLOWANCE']);
                    $tax_type = $api->get_system_description('TAXTYPE', $row['TAX_TYPE']);

                    if($delete_allowance_type > 0){
                        $delete = '<button type="button" class="btn btn-danger waves-effect waves-light delete-allowance-type" data-allowancetypeid="'. $allowance_type_id .'" title="Delete Allowance Type">
                                    <i class="bx bx-trash font-size-16 align-middle"></i>
                                </button>';
                    }
                    else{
                        $delete = '';
                    }

                    $response[] = array(
                        'ALLOWANCE' => $allowance,
                        'TAX_TYPE' => $tax_type,
                        'ACTION' => '<div class="d-flex gap-2">
                            <button type="button" class="btn btn-primary waves-effect waves-light update-allowance-type" data-allowancetypeid="'. $allowance_type_id .'" title="View Details">
                                <i class="bx bx-show font-size-16 align-middle"></i>
                            </button>
                            '. $delete .'
                        </div>'
                    );
                }

                echo json_encode($response);
            }
            else{
                echo $sql->errorInfo()[2];
            }
        }
    }
    # -------------------------------------------------------------

    # Other income type table
    else if($type == 'other income type table'){
        if ($api->databaseConnection()) {
            # Get role permission
            $delete_allowance_type = $api->check_role_permissions($username, 97);

            $sql = $api->db_connection->prepare('SELECT OTHER_INCOME_TYPE_ID, OTHER_INCOME, TAX_TYPE FROM tblotherincometype ORDER BY OTHER_INCOME_TYPE_ID');

            if($sql->execute()){
                while($row = $sql->fetch()){
                    $other_income_type_id = trim($row['OTHER_INCOME_TYPE_ID']);
                    $other_income = trim($row['OTHER_INCOME']);
                    $tax_type = $api->get_system_description('TAXTYPE', $row['TAX_TYPE']);

                    if($delete_allowance_type > 0){
                        $delete = '<button type="button" class="btn btn-danger waves-effect waves-light delete-other-income-type" data-otherincometypeid="'. $other_income_type_id .'" title="Delete Allowance Type">
                                    <i class="bx bx-trash font-size-16 align-middle"></i>
                                </button>';
                    }
                    else{
                        $delete = '';
                    }

                    $response[] = array(
                        'OTHER_INCOME' => $other_income,
                        'TAX_TYPE' => $tax_type,
                        'ACTION' => '<div class="d-flex gap-2">
                            <button type="button" class="btn btn-primary waves-effect waves-light update-other-income-type" data-otherincometypeid="'. $other_income_type_id .'" title="View Details">
                                <i class="bx bx-show font-size-16 align-middle"></i>
                            </button>
                            '. $delete .'
                        </div>'
                    );
                }

                echo json_encode($response);
            }
            else{
                echo $sql->errorInfo()[2];
            }
        }
    }
    # -------------------------------------------------------------

    # User account table
    else if($type == 'user account table'){
        if ($api->databaseConnection()) {
            # Get role permission
            $lock_user_account = $api->check_role_permissions($username, 107);
            $unlock_user_account = $api->check_role_permissions($username, 108);
            $activate_user_account = $api->check_role_permissions($username, 109);
            $deactivate_user_account = $api->check_role_permissions($username, 110);

            $sql = $api->db_connection->prepare('SELECT USERNAME, ACTIVE, PASSWORD_EXPIRY_DATE, FAILED_LOGIN, LAST_FAILED_LOGIN FROM tbluseraccount');

            if($sql->execute()){
                while($row = $sql->fetch()){
                    $usercd = trim($row['USERNAME']);
                    $active = $row['ACTIVE'];
                    $account_status = $api->get_user_account_status($active)[0]['BADGE'];
                    $password_expiry_date = $api->check_date('empty', $row['PASSWORD_EXPIRY_DATE'], '', 'm/d/Y', '', '', '');
                    $failed_login_attempts = $api->check_number($row['FAILED_LOGIN']);
                    $last_failed_login = $api->check_date('empty', $row['LAST_FAILED_LOGIN'], '', 'm/d/Y', '', '', '');
                    $lock_status = $api->get_user_account_lock_status($failed_login_attempts)[0]['BADGE'];

                    $employee_profile_details = $api->get_data_details_one_parameter('employee profile', $usercd);
                    $first_name = $employee_profile_details[0]['FIRST_NAME'] ?? null;
                    $last_name = $employee_profile_details[0]['LAST_NAME'] ?? null;
                    $middle_name = $employee_profile_details[0]['MIDDLE_NAME'] ?? null;
                    $suffix = $employee_profile_details[0]['SUFFIX'] ?? null;
                    $full_name = $api->get_full_name($first_name, $middle_name, $last_name, $suffix)[0]['REVERSE_FULL_NAME'] ?? null;

                    if($failed_login_attempts >= 5){
                        if($unlock_user_account > 0){
                            $lock_unlock = '<button class="btn btn-info waves-effect waves-light unlock-user-account" title="Unlock User Account" data-usercd="'. $usercd .'">
                            <i class="bx bx-lock-open-alt font-size-16 align-middle"></i>
                            </button>';
                        }
                        else{
                            $lock_unlock = '';
                        }
                    }
                    else{
                        if($lock_user_account > 0){
                            $lock_unlock = '<button class="btn btn-warning waves-effect waves-light lock-user-account" title="Lock User Account" data-usercd="'. $usercd .'">
                            <i class="bx bx-lock-alt font-size-16 align-middle"></i>
                            </button>';
                        }
                        else{
                            $lock_unlock = '';
                        }
                    }

                    if($active == 1){
                        if($deactivate_user_account > 0){
                            $active_inactive = '<button class="btn btn-danger waves-effect waves-light deactivate-user-account" title="Deactivate User Account" data-usercd="'. $usercd .'">
                            <i class="bx bx-x font-size-16 align-middle"></i>
                            </button>';
                        }
                        else{
                            $active_inactive = '';
                        }
                    }
                    else{
                        if($activate_user_account > 0){
                            $active_inactive = '<button class="btn btn-success waves-effect waves-light activate-user-account" title="Activate User Account" data-usercd="'. $usercd .'">
                            <i class="bx bx-list-check font-size-16 align-middle"></i>
                            </button>';
                        }
                        else{
                            $active_inactive = '';
                        }
                    }

                    $response[] = array(
                        'FULL_NAME' => $full_name,
                        'USERNAME' => $usercd,
                        'ACTIVE' => $account_status,
                        'LOCK_STATUS' => $lock_status,
                        'FAILED_LOGIN' => $failed_login_attempts,
                        'LAST_FAILED_LOGIN' => $last_failed_login,
                        'PASSWORD_EXPIRY_DATE' => $password_expiry_date,
                        'ACTION' => '<div class="d-flex gap-2">
                                <button type="button" class="btn btn-primary waves-effect waves-light update-user-account" data-usercd="'. $usercd .'" title="View Details">
                                    <i class="bx bx-show font-size-16 align-middle"></i>
                                </button>
                                '. $lock_unlock . $active_inactive .'
                            </div>'
                    );
                }

                echo json_encode($response);
            }
            else{
                echo $sql->errorInfo();
            }
        }
    }
    # -------------------------------------------------------------

    # Email notification table
    else if($type == 'email notification table'){
        if ($api->databaseConnection()) {
            # Get role permission
            $delete_email_notification = $api->check_role_permissions($username, 115);
            $activate_email_notification = $api->check_role_permissions($username, 116);
            $deactivate_email_notification = $api->check_role_permissions($username, 117);
            $view_email_notification_recipients = $api->check_role_permissions($username, 229);

            $sql = $api->db_connection->prepare('SELECT NOTIFICATION_ID, NOTIFICATION, ACTIVE FROM tblnotificationsetting');

            if($sql->execute()){
                while($row = $sql->fetch()){
                    $notification_id = trim($row['NOTIFICATION_ID']);
                    $notification = trim($row['NOTIFICATION']);
                    $active = $row['ACTIVE'];
                    $email_notification_status = $api->get_email_notification_status($active)[0]['BADGE'];
                    $encrypted_notification_id = $api->encrypt_data($notification_id);

                    if($view_email_notification_recipients > 0){
                        $email_notification_recipients = '<a href="email-recipients.php?id='. $encrypted_notification_id .'" class="btn btn-warning waves-effect waves-light view-email-recipients" data-notificationid="'. $notification_id .'" title="View Email Recipients Page">
                                    <i class="bx bx-receipt font-size-16 align-middle"></i>
                                </a>';
                    }
                    else{
                        $email_notification_recipients = '';
                    }

                    if($active == 1){
                        if($deactivate_email_notification > 0){
                            $active_inactive = '<button class="btn btn-danger waves-effect waves-light deactivate-email-notification" title="Deactivate Email Notification" data-notificationid="'. $notification_id .'">
                            <i class="bx bx-x font-size-16 align-middle"></i>
                            </button>';
                        }
                        else{
                            $active_inactive = '';
                        }
                    }
                    else{
                        if($activate_email_notification > 0){
                            $active_inactive = '<button class="btn btn-success waves-effect waves-light activate-email-notification" title="Activate Email Notification" data-notificationid="'. $notification_id .'">
                            <i class="bx bx-list-check font-size-16 align-middle"></i>
                            </button>';
                        }
                        else{
                            $active_inactive = '';
                        }
                    }

                    if($delete_email_notification > 0){
                        $delete = '<button type="button" class="btn btn-danger waves-effect waves-light delete-email-notification" data-notificationid="'. $notification_id .'" title="Delete Email Notification">
                                    <i class="bx bx-trash font-size-16 align-middle"></i>
                                </button>';
                    }
                    else{
                        $delete = '';
                    }

                    $response[] = array(
                        'NOTIFICATION' => $notification,
                        'ACTIVE' => $email_notification_status,
                        'ACTION' => '<div class="d-flex gap-2">
                                <button type="button" class="btn btn-primary waves-effect waves-light update-email-notification" data-notificationid="'. $notification_id .'" title="View Details">
                                    <i class="bx bx-show font-size-16 align-middle"></i>
                                </button>
                            '. $email_notification_recipients . $active_inactive . $delete .'
                        </div>'
                    );
                }

                echo json_encode($response);
            }
            else{
                echo $sql->errorInfo();
            }
        }
    }
    # -------------------------------------------------------------

    # Email recipient table
    else if($type == 'email recipient table'){
        if ($api->databaseConnection()) {
            if(isset($_POST['parameter']) && !empty($_POST['parameter'])){
                $notification_id = $_POST['parameter'];

                # Get role permission
                $delete_email_recipient = $api->check_role_permissions($username, 232);

                $sql = $api->db_connection->prepare('SELECT RECIPIENT_ID, EMAIL FROM tblemailrecipient WHERE NOTIFICATION_ID = :notification_id');
                $sql->bindParam(':notification_id', $notification_id);

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $recipient_id = trim($row['RECIPIENT_ID']);
                        $email = trim($row['EMAIL']);

                        if($delete_email_recipient > 0){
                            $delete = '<button type="button" class="btn btn-danger waves-effect waves-light delete-email-recipient" data-notificationid="'. $notification_id .'" data-recipientid="'. $recipient_id .'" title="Delete Email Recipient">
                                        <i class="bx bx-trash font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $delete = '';
                        }

                        $response[] = array(
                            'EMAIL' => $email,
                            'ACTION' => '<div class="d-flex gap-2">
                                <button type="button" class="btn btn-primary waves-effect waves-light update-email-recipient" data-notificationid="'. $notification_id .'" data-recipientid="'. $recipient_id .'" title="View Details">
                                    <i class="bx bx-show font-size-16 align-middle"></i>
                                </button>
                                '. $delete .'
                            </div>'
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo();
                }
            }
        }
    }
    # -------------------------------------------------------------

    # Payroll table
    else if($type == 'payroll table'){
        if(isset($_POST['parameter'])){
            if ($api->databaseConnection()) {
                $parameter = $_POST['parameter'];

                if(empty($parameter)){
                    $get_latest_payroll_period = $api->get_latest_payroll_period();
                    $start_date = $api->check_date('empty', $get_latest_payroll_period[0]['PAYROLL_START_DATE'], '', 'Y-m-d', '', '', '');
                    $end_date = $api->check_date('empty', $get_latest_payroll_period[0]['PAYROLL_END_DATE'], '', 'Y-m-d', '', '', '');
                }
                else{
                    $pieces = explode('|', $parameter);
                    $start_date = $pieces[0];
                    $end_date = $pieces[1];
                }

                # Get role permission
                $reverse_payroll = $api->check_role_permissions($username, 121);
                $pay_payroll = $api->check_role_permissions($username, 122);
                $view_payslip = $api->check_role_permissions($username, 123);

                $sql = $api->db_connection->prepare('SELECT PAYROLL_ID, EMPLOYEE_ID, PAYROLL_START_DATE, PAYROLL_END_DATE, STATUS, NO_HOURS, GROSS, NET, DEDUCTIONS, ALLOWANCE, OTHER_INCOME, GENERATED_DATE, GENERATED_BY, REMARKS FROM tblpayroll WHERE PAYROLL_START_DATE = :start_date AND PAYROLL_END_DATE = :end_date');
                $sql->bindParam(':start_date', $start_date);
                $sql->bindParam(':end_date', $end_date);

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $payroll_id = trim($row['PAYROLL_ID']);
                        $employee_id = trim($row['EMPLOYEE_ID']);
                        $payroll_start_date = $api->check_date('empty', $row['PAYROLL_START_DATE'], '', 'm/d/Y', '', '', '');
                        $payroll_end_date = $api->check_date('empty', $row['PAYROLL_END_DATE'], '', 'm/d/Y', '', '', '');
                        $no_hours = number_format($row['NO_HOURS'], 2);
                        $gross = number_format($row['GROSS'], 2);
                        $net = number_format($row['NET'], 2);
                        $deductions = number_format($row['DEDUCTIONS'], 2);
                        $allowance = number_format($row['ALLOWANCE'], 2);
                        $other_income = number_format($row['OTHER_INCOME'], 2);
                        $generate_date = $api->check_date('empty', $row['GENERATED_DATE'], '', 'm/d/Y', '', '', '');
                        $generated_by = $row['GENERATED_BY'];
                        $remarks = $row['REMARKS'];
                        $payroll_status = $row['STATUS'];
                        $status = $api->get_paid_status($payroll_status)[0]['BADGE'];
                        $payroll_id_encrypted = $api->encrypt_data($payroll_id);
                        $employee_id_encrypted = $api->encrypt_data($employee_id);

                        $employee_profile_details = $api->get_data_details_one_parameter('employee profile', $employee_id);
                        $employee_first_name = $employee_profile_details[0]['FIRST_NAME'];
                        $employee_last_name = $employee_profile_details[0]['LAST_NAME'];
                        $employee_middle_name = $employee_profile_details[0]['MIDDLE_NAME'];
                        $employee_suffix = $employee_profile_details[0]['SUFFIX'];
                        $employee_fullname = $api->get_full_name($employee_first_name, $employee_middle_name, $employee_last_name, $employee_suffix)[0]['REVERSE_FULL_NAME'];

                        $generated_by_profile_details = $api->get_data_details_one_parameter('employee profile', $generated_by);
                        $generated_by_first_name = $generated_by_profile_details[0]['FIRST_NAME'];
                        $generated_by_last_name = $generated_by_profile_details[0]['LAST_NAME'];
                        $generated_by_middle_name = $generated_by_profile_details[0]['MIDDLE_NAME'];
                        $generated_by_suffix = $generated_by_profile_details[0]['SUFFIX'];
                        $generated_by_fullname = $api->get_full_name($generated_by_first_name, $generated_by_middle_name, $generated_by_last_name, $generated_by_suffix)[0]['REVERSE_FULL_NAME'];

                        if($view_payslip > 0){
                            $view = '<a href="payslip.php?id='. $payroll_id_encrypted .'&emp='. $employee_id_encrypted .'" class="btn btn-warning waves-effect waves-light view-payslip" title="View Employee Payslip">
                                        <i class="bx bx-receipt font-size-16 align-middle"></i>
                                    </a>';
                        }
                        else{
                            $view = '';
                        }

                        if($payroll_status == 0){
                            if($pay_payroll > 0){
                                $pay = '<button type="button" class="btn btn-success waves-effect waves-light pay-payroll" data-payrollid="'. $payroll_id .'" data-employeeid="'. $employee_id .'" title="Pay Payroll">
                                            <i class="bx bx-wallet font-size-16 align-middle"></i>
                                        </button>';
                            }
                            else{
                                $pay = '';
                            }

                            if($reverse_payroll > 0){
                                $reverse = '<button type="button" class="btn btn-danger waves-effect waves-light reverse-payroll" data-payrollid="'. $payroll_id .'" data-employeeid="'. $employee_id .'" title="Reverse Payroll">
                                            <i class="bx bx-undo font-size-16 align-middle"></i>
                                        </button>';
                            }
                            else{
                                $reverse = '';
                            }
                        }

                        $response[] = array(
                            'EMPLOYEE_FULL_NAME' => $employee_fullname,
                            'PAYROLL_PERIOD' => $payroll_start_date . ' - ' . $payroll_end_date,
                            'STATUS' => $status,
                            'NO_HOURS' => $no_hours,
                            'GROSS' => $gross,
                            'NET' => $net,
                            'DEDUCTIONS' => $deductions,
                            'ALLOWANCE' => $allowance,
                            'OTHER_INCOME' => $other_income,
                            'GENERATED_DATE' => $generate_date,
                            'REMARKS' => $remarks,
                            'ACTION' => '<div class="d-flex gap-2">
                                '. $pay . $reverse . $view .'
                            </div>'
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo();
                }
            }
        }
    }
    # -------------------------------------------------------------

    # Office shift table
    else if($type == 'office shift table'){
        if ($api->databaseConnection()) {
            $sql = $api->db_connection->prepare('SELECT OFFICE_SHIFT_ID, EMPLOYEE_ID, DTR_DAY, DAY_OFF, TIME_IN, TIME_OUT, START_LUNCH_BREAK, END_LUNCH_BREAK, HALF_DAY_MARK, LATE_MARK FROM tblofficeshift ORDER BY OFFICE_SHIFT_ID');

            if($sql->execute()){
                while($row = $sql->fetch()){
                    $office_shift_id = trim($row['OFFICE_SHIFT_ID']);
                    $employee_id = trim($row['EMPLOYEE_ID']);
                    $time_in = $api->check_date('empty', $row['TIME_IN'], '', 'h:i:s a', '', '', '');
                    $time_out = $api->check_date('empty', $row['TIME_OUT'], '', 'h:i:s a', '', '', '');
                    $start_lunch_break = $api->check_date('empty', $row['START_LUNCH_BREAK'], '', 'h:i:s a', '', '', '');
                    $end_lunch_break = $api->check_date('empty', $row['END_LUNCH_BREAK'], '', 'h:i:s a', '', '', '');
                    $half_day_mark = $api->check_date('empty', $row['HALF_DAY_MARK'], '', 'h:i:s a', '', '', '');
                    $late_mark = trim($row['LATE_MARK']);
                    $dtr_day = $row['DTR_DAY'];
                    $dtr_day_name = $api->get_day_name($dtr_day);
                    $day_off = $api->get_day_off_status($row['DAY_OFF'])[0]['BADGE'];

                    $employee_profile_details = $api->get_data_details_one_parameter('employee profile', $employee_id);
                    $employee_first_name = $employee_profile_details[0]['FIRST_NAME'];
                    $employee_last_name = $employee_profile_details[0]['LAST_NAME'];
                    $employee_middle_name = $employee_profile_details[0]['MIDDLE_NAME'];
                    $employee_suffix = $employee_profile_details[0]['SUFFIX'];
                    $employee_fullname = $api->get_full_name($employee_first_name, $employee_middle_name, $employee_last_name, $employee_suffix)[0]['REVERSE_FULL_NAME'];

                    $response[] = array(
                        'EMPLOYEE_FULL_NAME' => $employee_fullname,
                        'DTR_DAY' => $dtr_day_name,
                        'DAY_OFF' => $day_off,
                        'TIME' => $time_in . ' - ' . $time_out,
                        'LUNCH_BREAK' => $start_lunch_break . ' - ' . $end_lunch_break,
                        'HALF_DAY_MARK' => $half_day_mark,
                        'LATE_MARK' => $late_mark,
                        'ACTION' => '<div class="d-flex gap-2">
                                <button type="button" class="btn btn-primary waves-effect waves-light update-office-shift" data-dtrday="'. $dtr_day .'" data-employeeid="'. $employee_id .'" title="View Details">
                                <i class="bx bx-show font-size-16 align-middle"></i>
                            </button>
                            </div>'
                    );
                }

                echo json_encode($response);
            }
            else{
                echo $sql->errorInfo();
            }
        }
    }
    # -------------------------------------------------------------

    # Payroll group table
    else if($type == 'payroll group table'){
        if ($api->databaseConnection()) {
            # Get role permission
            $delete_payroll_group = $api->check_role_permissions($username, 132);
            $assign_employee_to_payroll_group = $api->check_role_permissions($username, 133);
            $get_assigned_payroll_group_employee_count = $api->get_assigned_payroll_group_employee_count();

            $sql = $api->db_connection->prepare('SELECT PAYROLL_GROUP_ID, PAYROLL_GROUP_DESC FROM tblpayrollgroup ORDER BY PAYROLL_GROUP_DESC');

            if($sql->execute()){
                while($row = $sql->fetch()){
                    $payroll_group_id = trim($row['PAYROLL_GROUP_ID']);
                    $payroll_group_description = trim($row['PAYROLL_GROUP_DESC']);

                    if($assign_employee_to_payroll_group > 0 && $get_assigned_payroll_group_employee_count > 0){
                        $assign_employee = '<button type="button" class="btn btn-info waves-effect waves-light assign-payroll-group-employee" data-payrollgroupid="'. $payroll_group_id .'" title="Assign Employee">
                        <i class="bx bx-user-plus font-size-16 align-middle"></i>
                    </button>';
                    }
                    else{
                        $assign_employee = '';
                    }

                    if($delete_payroll_group > 0){
                        $delete = '<button type="button" class="btn btn-danger waves-effect waves-light delete-payroll-group" data-payrollgroupid="'. $payroll_group_id .'" title="Delete Payroll Group">
                                    <i class="bx bx-trash font-size-16 align-middle"></i>
                                </button>';
                    }
                    else{
                        $delete = '';
                    }

                    $response[] = array(
                        'PAYROLL_GROUP_DESC' => $payroll_group_description,
                        'ACTION' => '<div class="d-flex gap-2">
                                <button type="button" class="btn btn-primary waves-effect waves-light update-payroll-group" data-payrollgroupid="'. $payroll_group_id .'" title="View Details">
                                    <i class="bx bx-show font-size-16 align-middle"></i>
                                </button>
                                '. $assign_employee . $delete .'
                            </div>'
                    );
                }

                echo json_encode($response);
            }
            else{
                echo $sql->errorInfo()[2];
            }
        }
    }
    # -------------------------------------------------------------

    # Payroll group employee table
    else if($type == 'payroll group employee table'){
        if ($api->databaseConnection()) {
            # Get role permission
            $unassign_employee_to_payroll_group = $api->check_role_permissions($username, 134);

            $sql = $api->db_connection->prepare('SELECT PAYROLL_GROUP_ID, EMPLOYEE_ID FROM tblpayrollgroupemployee ORDER BY EMPLOYEE_ID');

            if($sql->execute()){
                while($row = $sql->fetch()){
                    $payroll_group_id = trim($row['PAYROLL_GROUP_ID']);
                    $employee_id = trim($row['EMPLOYEE_ID']);
                    $payroll_group_details = $api->get_data_details_one_parameter('payroll group', $payroll_group_id);
                    $payroll_group = $payroll_group_details[0]['PAYROLL_GROUP_DESC'];

                    $employee_profile_details = $api->get_data_details_one_parameter('employee profile', $employee_id);
                    $employee_first_name = $employee_profile_details[0]['FIRST_NAME'];
                    $employee_last_name = $employee_profile_details[0]['LAST_NAME'];
                    $employee_middle_name = $employee_profile_details[0]['MIDDLE_NAME'];
                    $employee_suffix = $employee_profile_details[0]['SUFFIX'];
                    $employee_fullname = $api->get_full_name($employee_first_name, $employee_middle_name, $employee_last_name, $employee_suffix)[0]['REVERSE_FULL_NAME'];

                    if($unassign_employee_to_payroll_group > 0){
                        $unassign_employee = '<button type="button" class="btn btn-danger waves-effect waves-light unassign-payroll-group-employee" data-payrollgroupid="'. $payroll_group_id .'" data-employeeid="'. $employee_id .'" title="Unassign Employee">
                        <i class="bx bx-x font-size-16 align-middle"></i>
                        </button>';
                    }
                    else{
                        $unassign_employee = '';
                    }

                    $response[] = array(
                        'FULL_NAME' => $employee_fullname,
                        'PAYROLL_GROUP_DESC' => $payroll_group,
                        'ACTION' => '<div class="d-flex gap-2">
                                '. $unassign_employee .'
                            </div>'
                    );
                }

                echo json_encode($response);
            }
            else{
                echo $sql->errorInfo()[2];
            }
        }
    }
    # -------------------------------------------------------------

    # Attendance logs table
    else if($type == 'attendance logs table'){
        if(isset($_POST['filter_branch']) && isset($_POST['filter_department'])&& isset($_POST['filter_start_date']) && isset($_POST['filter_end_date'])){
            if ($api->databaseConnection()) {
                $filter_start_date = $api->check_date('empty', $_POST['filter_start_date'], '', 'Y-m-d', '', '', '');
                $filter_end_date = $api->check_date('empty', $_POST['filter_end_date'], '', 'Y-m-d', '', '', '');
                $filter_branch = $_POST['filter_branch'];
                $filter_department = $_POST['filter_department'];

                # Get role permission
                $delete_attendance_log = $api->check_role_permissions($username, 139);

                $employee_details = $api->get_data_details_one_parameter('employee profile', $username);
                $employee_id = $employee_details[0]['EMPLOYEE_ID'];

                $query = 'SELECT EMPLOYEE_ID, ATTENDANCE_ID, TIME_IN_DATE, TIME_IN, TIME_IN_BY, TIME_IN_IP, TIME_IN_LAT, TIME_IN_LONG, TIME_OUT_DATE, TIME_OUT, TIME_OUT_BY, TIME_OUT_IP, TIME_OUT_LAT, TIME_OUT_LONG, LATE, EARLY_LEAVING, OVERTIME, TOTAL_HOURS, REMARKS FROM tblattendancerecord';

                if(!empty($filter_branch) || !empty($filter_department) || (!empty($filter_start_date) && !empty($filter_end_date))){
                    $query .= ' WHERE ';

                    if(!empty($filter_branch)){
                        $filter[] = 'EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM tblemployeeprofile WHERE BRANCH = :filter_branch)';
                    }

                    if(!empty($filter_department)){
                        $filter[] = 'EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM tblemployeeprofile WHERE DEPARTMENT = :filter_department)';
                    }

                    if(!empty($filter_start_date) && !empty($filter_end_date)){
                        $filter[] = 'TIME_IN_DATE BETWEEN :filter_start_date AND :filter_end_date';
                    }

                    if(!empty($filter)){
                        $query .= implode(' AND ', $filter);
                    }
                }

                $sql = $api->db_connection->prepare($query);

                if(!empty($filter_branch) || !empty($filter_department) || (!empty($filter_start_date) && !empty($filter_end_date))){
                    if(!empty($filter_branch)){
                        $sql->bindValue(':filter_branch', $filter_branch);
                    }

                    if(!empty($filter_department)){
                        $sql->bindValue(':filter_department', $filter_department);
                    }

                    if(!empty($filter_start_date) && !empty($filter_end_date)){
                        $sql->bindValue(':filter_start_date', $filter_start_date);
                        $sql->bindValue(':filter_end_date', $filter_end_date);
                    }
                }

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $employee_id = trim($row['EMPLOYEE_ID']);
                        $attendance_id = trim($row['ATTENDANCE_ID']);
                        $time_in_date = $api->check_date('empty', trim($row['TIME_IN_DATE']), '', 'm/d/Y', '', '', '');
                        $time_in = $api->check_date('empty', trim($row['TIME_IN']), '', 'h:i:s a', '', '', '');
                        $time_in_by = trim($row['TIME_IN_BY']);
                        $time_in_ip = trim($row['TIME_IN_IP']);
                        $time_in_lat = trim($row['TIME_IN_LAT']);
                        $time_in_long = trim($row['TIME_IN_LONG']);
                        $time_out_date = $api->check_date('empty', trim($row['TIME_OUT_DATE']), '', 'm/d/Y', '', '', '');
                        $time_out = $api->check_date('empty', trim($row['TIME_OUT']), '', 'h:i:s a', '', '', '');
                        $time_out_by = trim($row['TIME_OUT_BY']);
                        $time_out_ip = trim($row['TIME_OUT_IP']);
                        $time_out_lat = trim($row['TIME_OUT_LAT']);
                        $time_out_long = trim($row['TIME_OUT_LONG']);
                        $late = number_format($row['LATE'], 2);
                        $early_leaving = number_format($row['EARLY_LEAVING'], 2);
                        $overtime = number_format($row['OVERTIME'], 2);
                        $total_hours = number_format($row['TOTAL_HOURS'], 2);
                        $remarks = trim($row['REMARKS']);

                        $employee_profile_details = $api->get_data_details_one_parameter('employee profile', $employee_id);
                        $employee_first_name = $employee_profile_details[0]['FIRST_NAME'];
                        $employee_last_name = $employee_profile_details[0]['LAST_NAME'];
                        $employee_middle_name = $employee_profile_details[0]['MIDDLE_NAME'];
                        $employee_suffix = $employee_profile_details[0]['SUFFIX'];
                        $employee_department = $employee_profile_details[0]['DEPARTMENT'];
                        $employee_fullname = $api->get_full_name($employee_first_name, $employee_middle_name, $employee_last_name, $employee_suffix)[0]['REVERSE_FULL_NAME'];

                        $department_details = $api->get_data_details_one_parameter('department', $employee_department);
                        $department = $department_details[0]['DEPARTMENT'] ?? null;


                        $time_in_by_details = $api->get_data_details_one_parameter('employee profile', $time_in_by);
                        $time_in_by_first_name = $time_in_by_details[0]['FIRST_NAME'];
                        $time_in_by_last_name = $time_in_by_details[0]['LAST_NAME'];
                        $time_in_by_middle_name = $time_in_by_details[0]['MIDDLE_NAME'];
                        $time_in_by_suffix = $time_in_by_details[0]['SUFFIX'];
                        $time_in_by_fullname = $api->get_full_name($time_in_by_first_name, $time_in_by_middle_name, $time_in_by_last_name, $time_in_by_suffix)[0]['REVERSE_FULL_NAME'];

                        if(!empty($time_out_date) && !empty($time_out)){
                            $time_out_by_details = $api->get_data_details_one_parameter('employee profile', $time_out_by);
                            $time_out_by_first_name = $time_out_by_details[0]['FIRST_NAME'];
                            $time_out_by_last_name = $time_out_by_details[0]['LAST_NAME'];
                            $time_out_by_middle_name = $time_out_by_details[0]['MIDDLE_NAME'];
                            $time_out_by_suffix = $time_out_by_details[0]['SUFFIX'];
                            $time_out_by_fullname = $api->get_full_name($time_out_by_first_name, $time_out_by_middle_name, $time_out_by_last_name, $time_out_by_suffix)[0]['REVERSE_FULL_NAME'];
                        }
                        else{
                            $time_out_by_fullname = '';
                        }

                        if($delete_attendance_log > 0){
                            $delete = '<button type="button" class="btn btn-danger waves-effect waves-light delete-attendance-log" data-attendanceid="'. $attendance_id .'" data-employeeid="'. $employee_id .'" title="Delete Attendance Log">
                                        <i class="bx bx-trash font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $delete = '';
                        }

                        $response[] = array(
                            'EMPLOYEE' => $employee_fullname,
                            'DEPARTMENT' => $department,
                            'TIME_IN_DATE' => $time_in_date . ' ' . $time_in,
                            'TIME_IN_BY' => $time_in_by_fullname,
                            'TIME_IN_IP' => $time_in_ip,
                            'TIME_OUT_DATE' => $time_out_date . ' ' . $time_out,
                            'TIME_OUT_BY' => $time_out_by_fullname,
                            'TIME_OUT_IP' => $time_out_ip,
                            'LATE' => $late,
                            'EARLY_LEAVING' => $early_leaving,
                            'OVERTIME' => $overtime,
                            'TOTAL_HOURS' => $total_hours,
                            'REMARKS' => $remarks,
                            'ACTION' => '<div class="d-flex gap-2">
                                    <button type="button" class="btn btn-primary waves-effect waves-light update-attendance-log" data-attendanceid="'. $attendance_id .'" data-employeeid="'. $employee_id .'" title="View Details">
                                        <i class="bx bx-show font-size-16 align-middle"></i>
                                    </button>
                                    '. $delete .'
                                </div>'
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo()[2];
                }
            }
        }
    }
    # -------------------------------------------------------------


      #pdc monitoring
   else if($type == 'pdc monitoring1 table'){
      if(isset($_POST['filter_start_date']) && isset($_POST['filter_end_date'])){
            if ($api->databaseConnection()) {
                $sql = '';

                $sql = $api->db_connection->prepare($query);


                # Get role permission
                $employee_details = $api->get_data_details_one_parameter('employee profile', $username);
                $employee_id = $employee_details[0]['EMPLOYEE_ID'];

                $query = 'SELECT * FROM tblpdcmonitoring WHERE DELETED_AT IS NULL';


                $sql = $api->db_connection->prepare($query);

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $id_monitoring = trim($row['ID_MONITORING']);
                        $curr_pdc_num = trim($row['CURR_PDC_NUMBER']);
                        $assign_to =  $api->get_data_details_one_parameter('employee profile',trim($row['ASSIGN_TO']))[0]['USERNAME'];
                        $undertaking = trim($row['UNDERTAKING']);
                        $loan_num = trim($row['LOAN_NUM']);
                        $created_by = trim($row['CREATED_BY']);
                        $employee = $api->get_data_details_one_parameter('employee profile',$created_by)[0];
                        $branch = $api->get_data_details_one_parameter('branch',$row['BRANCH'])[0]['BRANCH'];
                        $created_at =  date_format(date_create(trim($row['CREATED_AT'])),"Y-m-d h:i a");

                        //permissions
                        $update_pdc_monitoring = $api->check_role_permissions($username, 400);
                        $update_pdc_btn = '';
                        $delete_pdc_monitoring = $api->check_role_permissions($username, 401);
                        $delete_pdc_btn = '';


                        if($update_pdc_monitoring >=1 ){
                            $update_pdc_btn .= '  <button type="button" class="btn btn-warning waves-effect waves-light update-pdc-monitor" data-pdcmonitorid="'. $id_monitoring .'" title="Edit PDC number">
                                                    <i class="bx bx-edit font-size-16 align-middle"></i>
                                                </button>';
                        }

                        if($delete_pdc_monitoring >=1 ){
                            $delete_pdc_btn .= '  <button type="button" class="btn btn-danger waves-effect waves-light delete-pdc-monitor" data-pdcmonitorid="'. $id_monitoring .'" title="Delete PDC number">
                                                    <i class="bx bx-trash font-size-16 align-middle"></i>
                                                </button>';
                        }



                        $response[] = array(
                            'ID_MONITOR' => $id_monitoring,
                            'LOAN_NUM' => $loan_num,
                            'CURR_PDC_NUMBER' => $curr_pdc_num ,
                            'UNDERTAKING' => $undertaking,
                            'ASSIGN_TO' => $assign_to,
                            'CREATED_BY' => $employee['FIRST_NAME']. ' '. $employee['LAST_NAME'],
                            'BRANCH' => $branch,
                            'CREATED_AT' =>  $created_at,
                            'ACTION' => '<div class="d-flex gap-2">
                                    <button type="button" class="btn btn-primary waves-effect waves-light view-pdc-monitor" data-pdcmonitorid="'. $id_monitoring .'" title="View Details">
                                        <i class="bx bx-show font-size-16 align-middle"></i>
                                    </button>
                                  '.$update_pdc_btn.' '.$delete_pdc_btn.'




                                </div>'
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo()[2];
                }
            }
        }
    }

    # Leave application table
    else if($type == 'leave application table'){
        if ($api->databaseConnection()) {
            # Get role permission
            $cancel_leave = $api->check_role_permissions($username, 145);
            $employee_profile_details = $api->get_data_details_one_parameter('employee profile', $username);
            $employee_id = $employee_profile_details[0]['EMPLOYEE_ID'];

            $sql = $api->db_connection->prepare('SELECT LEAVE_ID, EMPLOYEE_ID, LEAVE_TYPE, LEAVE_DATE, START_TIME, END_TIME, REASON, FILE_DATE, FILE_TIME, STATUS, DECISION_DATE, ATTACHMENT_PATH, REJECTION_REASON, CANCELATION_REASON FROM tblleave WHERE EMPLOYEE_ID = :employee_id ORDER BY LEAVE_DATE DESC');
            $sql->bindParam(':employee_id', $employee_id);

            if($sql->execute()){
                while($row = $sql->fetch()){
                    $leave_id = trim($row['LEAVE_ID']);
                    $employee_id = trim($row['EMPLOYEE_ID']);
                    $leave_type = trim($row['LEAVE_TYPE']);
                    $leave_date = $api->check_date('empty', $row['LEAVE_DATE'], '', 'm/d/Y', '', '', '');
                    $file_date = $api->check_date('empty', $row['FILE_DATE'], '', 'm/d/Y', '', '', '');
                    $reason = trim($row['REASON']);
                    $status = trim($row['STATUS']);
                    $start_time = $api->check_date('empty', trim($row['START_TIME']), '', 'h:i a', '', '', '');
                    $end_time = $api->check_date('empty', trim($row['END_TIME']), '', 'h:i a', '', '', '');
                    $file_time = $api->check_date('empty', trim($row['FILE_TIME']), '', 'h:i a', '', '', '');
                    $leave_status = $api->get_leave_status($status, $system_date, $leave_date)[0]['BADGE'];

                    $leave_entitlement_details = $api->get_data_details_two_parameter('leave entitlement', $leave_type, $employee_id);
                    $no_leaves = $leave_entitlement_details[0]['NO_LEAVES'] ?? 0;
                    $acquired_no_leaves = $leave_entitlement_details[0]['ACQUIRED_NO_LEAVES'] ?? 0;
                    $leave_entitlement_status = $api->get_leave_entitlement_status($no_leaves, $acquired_no_leaves)[0]['BADGE'];

                    $employee_profile_details = $api->get_data_details_one_parameter('employee profile', $employee_id);
                    $first_name = $employee_profile_details[0]['FIRST_NAME'];
                    $last_name = $employee_profile_details[0]['LAST_NAME'];
                    $middle_name = $employee_profile_details[0]['MIDDLE_NAME'];
                    $suffix = $employee_profile_details[0]['SUFFIX'];
                    $full_name = $api->get_full_name($first_name, $middle_name, $last_name, $suffix)[0]['REVERSE_FULL_NAME'];

                    $leave_type_details = $api->get_data_details_one_parameter('leave type', $leave_type);
                    $attachment_button='';
                    $attachment = $row['ATTACHMENT_PATH'];
                    $approval_date = ($status == '1' ) ?  $api->check_date('empty', $row['DECISION_DATE'], '', 'm/d/Y', '', '', '') : ' ';
                    $cancel_reason = $row['CANCELATION_REASON'];
                    $reject_reason = $row['REJECTION_REASON'];
                    $leave_name =$leave_type_details[0]['LEAVE_NAME'];
                    if($attachment != null){
                        //$leave_name = '<a href="'.$attachment.'" target="_blank">'.$leave_type_details[0]['LEAVE_NAME'].'</a>';
                        $attachment_button = '<a href = "'.$attachment.'" target="_blank" class="btn btn-primary btn-sm" >see attachment</a>';
                    }else{
                        //$leave_name = $leave_type_details[0]['LEAVE_NAME'];
                        $attachment_button = ' no attachment';
                    }

                    if($status == '2' && $cancel_leave > 0){
                        $cancel = '<button type="button" class="btn btn-warning waves-effect waves-light cancel-leave-application" data-leaveid="'. $leave_id .'" data-employeeid="'. $employee_id .'" title="Cancel Leave">
                                    <i class="bx bx-calendar-x font-size-16 align-middle"></i>
                                </button>';
                    }
                    else{
                        $cancel = '';
                    }

                    $response[] = array(
                        'FULL_NAME' => $full_name,
                        'LEAVE_NAME' => $leave_name,
                        'LEAVE_ATTACHMENT' =>$attachment_button ,
                        'LEAVE_STATUS' => $leave_status,
                        'TOTAL' => $leave_entitlement_status,
                        'LEAVE_DATE' => $leave_date . '<br/>' . $start_time . ' - ' . $end_time,
                        'APPROVAL_DATE' => $approval_date,
                        'REASON' => $reason,
                        'FILE_DATE' => $file_date . '<br/>' . $file_time,
                        'CANCELATION_REASON' =>$cancel_reason ,
                        'REJECTION_REASON' => $reject_reason ,
                        'FILE_DATE' => $file_date . '<br/>' . $file_time,
                        'ACTION' => '<div class="d-flex gap-2">
                                '. $cancel .'
                            </div>'
                    );
                }

                echo json_encode($response);
            }
            else{
                echo $sql->errorInfo()[2];
            }
        }
    }
    # -------------------------------------------------------------

    # Employee attendance record table
    else if($type == 'employee attendance record table'){
        if(isset($_POST['parameter1']) && isset($_POST['parameter2'])){
            if ($api->databaseConnection()) {
                $parameter_1 = $api->check_date('empty', $_POST['parameter1'], '', 'Y-m-d', '', '', '');
                $parameter_2 = $api->check_date('empty', $_POST['parameter2'], '', 'Y-m-d', '', '', '');

                if(empty($parameter_1)){
                    $parameter_1 = date('Y-m-01');
                }

                if(empty($parameter_2)){
                    $parameter_2 = date('Y-m-t');
                }

                # Get role permission
                $request_employee_record_adjustment = $api->check_role_permissions($username, 147);
                $employee_profile_details = $api->get_data_details_one_parameter('employee profile', $username);
                $employee_id = $employee_profile_details[0]['EMPLOYEE_ID'];

                $sql = $api->db_connection->prepare('SELECT ATTENDANCE_ID, TIME_IN_DATE, TIME_IN, TIME_IN_BY, TIME_IN_IP, TIME_IN_LAT, TIME_IN_LONG, TIME_OUT_DATE, TIME_OUT, TIME_OUT_BY, TIME_OUT_IP, TIME_OUT_LAT, TIME_OUT_LONG, LATE, EARLY_LEAVING, OVERTIME, TOTAL_HOURS, REMARKS, LOCKED FROM tblattendancerecord WHERE EMPLOYEE_ID = :employee_id AND TIME_IN_DATE BETWEEN :parameter_1 AND :parameter_2 ORDER BY ATTENDANCE_ID LIMIT 100');
                $sql->bindParam(':employee_id', $employee_id);
                $sql->bindParam(':parameter_1', $parameter_1);
                $sql->bindParam(':parameter_2', $parameter_2);

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $attendance_id = trim($row['ATTENDANCE_ID']);
                        $time_in_date = $api->check_date('empty', trim($row['TIME_IN_DATE']), '', 'm/d/Y', '', '', '');
                        $time_in = $api->check_date('empty', trim($row['TIME_IN']), '', 'h:i:s a', '', '', '');
                        $time_in_by = trim($row['TIME_IN_BY']);
                        $time_in_ip = trim($row['TIME_IN_IP']);
                        $time_in_lat = trim($row['TIME_IN_LAT']);
                        $time_in_long = trim($row['TIME_IN_LONG']);
                        $time_out_date = $api->check_date('empty', trim($row['TIME_OUT_DATE']), '', 'm/d/Y', '', '', '');
                        $time_out = $api->check_date('empty', trim($row['TIME_OUT']), '', 'h:i:s a', '', '', '');
                        $time_out_by = trim($row['TIME_OUT_BY']);
                        $time_out_ip = trim($row['TIME_OUT_IP']);
                        $time_out_lat = trim($row['TIME_OUT_LAT']);
                        $time_out_long = trim($row['TIME_OUT_LONG']);
                        $late = number_format($row['LATE'], 2) . ' Minute(s)';
                        $early_leaving = number_format($row['EARLY_LEAVING'], 2) . ' Minute(s)';
                        $overtime = number_format($row['OVERTIME'], 2) . ' Hour(s)';
                        $total_hours = number_format($row['TOTAL_HOURS'], 2) . ' Hour(s)';
                        $remarks = trim($row['REMARKS']);
                        $locked = trim($row['LOCKED']);

                        $time_in_by_details = $api->get_data_details_one_parameter('employee profile', $time_in_by);
                        $time_in_by_first_name = $time_in_by_details[0]['FIRST_NAME'];
                        $time_in_by_last_name = $time_in_by_details[0]['LAST_NAME'];
                        $time_in_by_middle_name = $time_in_by_details[0]['MIDDLE_NAME'];
                        $time_in_by_suffix = $time_in_by_details[0]['SUFFIX'];
                        $time_in_by_fullname = $api->get_full_name($time_in_by_first_name, $time_in_by_middle_name, $time_in_by_last_name, $time_in_by_suffix)[0]['REVERSE_FULL_NAME'];

                        if(!empty($time_out_date) && !empty($time_out)){
                            $time_out_by_details = $api->get_data_details_one_parameter('employee profile', $time_out_by);
                            $time_out_by_first_name = $time_out_by_details[0]['FIRST_NAME'];
                            $time_out_by_last_name = $time_out_by_details[0]['LAST_NAME'];
                            $time_out_by_middle_name = $time_out_by_details[0]['MIDDLE_NAME'];
                            $time_out_by_suffix = $time_out_by_details[0]['SUFFIX'];
                            $time_out_by_fullname = $api->get_full_name($time_out_by_first_name, $time_out_by_middle_name, $time_out_by_last_name, $time_out_by_suffix)[0]['REVERSE_FULL_NAME'];
                        }
                        else{
                            $time_out_by_fullname = '';
                        }

                        if($locked == '0' && $request_employee_record_adjustment > 0){
                            $request = '<button type="button" class="btn btn-success waves-effect waves-light request-employee-attendance-record-adjustment" data-attendanceid="'. $attendance_id .'" data-employeeid="'. $employee_id .'" title="Request Attendance Record Adjustment">
                                        <i class="bx bx-time-five font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $request = '';
                        }

                        $response[] = array(
                            'TIME_IN_DATE' => '<a href="https://maps.google.com/?q=' . $time_in_lat . ', ' . $time_in_long . '" target="_blank">' . $time_in_date . '<br/>' . $time_in . '</a>',
                            'TIME_IN_BY' => $time_in_by_fullname,
                            'TIME_IN_IP' => $time_in_ip,
                            'TIME_OUT_DATE' => '<a href="https://maps.google.com/?q=' . $time_out_lat . ', ' . $time_out_long . '" target="_blank">' . $time_out_date . '<br/>' . $time_out . '</a>',
                            'TIME_OUT_BY' => $time_out_by_fullname,
                            'TIME_OUT_IP' => $time_out_ip,
                            'LATE' => $late,
                            'EARLY_LEAVING' => $early_leaving,
                            'OVERTIME' => $overtime,
                            'TOTAL_HOURS' => $total_hours,
                            'REMARKS' => $remarks,
                            'ACTION' => '<div class="d-flex gap-2">
                                    '. $request .'
                                </div>'
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo()[2];
                }
            }
        }
    }
    # -------------------------------------------------------------

    # Employee attendance adjustment table
    else if($type == 'employee attendance adjustment table'){
        if(isset($_POST['parameter1']) && isset($_POST['parameter2'])){
            if ($api->databaseConnection()) {
                $parameter_1 = $api->check_date('empty', $_POST['parameter1'], '', 'Y-m-d', '', '', '');
                $parameter_2 = $api->check_date('empty', $_POST['parameter2'], '', 'Y-m-d', '', '', '');

                if(empty($parameter_1)){
                    $parameter_1 = date('Y-m-01');
                }

                if(empty($parameter_2)){
                    $parameter_2 = date('Y-m-t');
                }

                # Get role permission
                $delete_employee_attendance_record_adjustment = $api->check_role_permissions($username, 149);
                $cancel_employee_attendance_record_adjustment = $api->check_role_permissions($username, 150);
                $employee_profile_details = $api->get_data_details_one_parameter('employee profile', $username);
                $employee_id = $employee_profile_details[0]['EMPLOYEE_ID'];

                $sql = $api->db_connection->prepare('SELECT ADJUSTMENT_ID, ATTENDANCE_ID, TIME_IN_DATE, TIME_IN_ORG, TIME_IN_ADJ, TIME_OUT_DATE_ORG, TIME_OUT_DATE_ADJ, TIME_OUT_ORG, TIME_OUT_ADJ, STATUS, ATTACHMENT, REASON, REMARKS FROM tblattendanceadustment WHERE EMPLOYEE_ID = :employee_id AND TIME_IN_DATE BETWEEN :parameter_1 AND :parameter_2 ORDER BY ADJUSTMENT_ID LIMIT 100');
                $sql->bindParam(':employee_id', $employee_id);
                $sql->bindParam(':parameter_1', $parameter_1);
                $sql->bindParam(':parameter_2', $parameter_2);

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $adjustment_id = trim($row['ADJUSTMENT_ID']);
                        $attendance_id = trim($row['ATTENDANCE_ID']);
                        $time_in_date = $api->check_date('empty', trim($row['TIME_IN_DATE']), '', 'm/d/Y', '', '', '');
                        $time_in_org = $api->check_date('empty', trim($row['TIME_IN_ORG']), '', 'h:i:s a', '', '', '');
                        $time_in_adj = $api->check_date('empty', trim($row['TIME_IN_ADJ']), '', 'h:i:s a', '', '', '');
                        $time_out_date_org = $api->check_date('empty', trim($row['TIME_OUT_DATE_ORG']), '', 'm/d/Y', '', '', '');
                        $time_out_date_adj = $api->check_date('empty', trim($row['TIME_OUT_DATE_ADJ']), '', 'm/d/Y', '', '', '');
                        $time_out_org = $api->check_date('empty', trim($row['TIME_OUT_ORG']), '', 'h:i:s a', '', '', '');
                        $time_out_adj = $api->check_date('empty', trim($row['TIME_OUT_ADJ']), '', 'h:i:s a', '', '', '');
                        $reason = trim($row['REASON']);
                        $attachment = trim($row['ATTACHMENT']);
                        $status = trim($row['STATUS']);
                        $remarks = trim($row['REMARKS']);
                        $request_status = $api->get_attendance_adjustment_status($status)[0]['BADGE'];

                        if(strtotime($time_in_org) == strtotime($time_in_adj)){
                            $time_in_adjustment = $time_in_adj;
                        }
                        else{
                            $time_in_adjustment = $time_in_org . ' -> ' . $time_in_adj;
                        }

                        if(strtotime($time_out_date_org) == strtotime($time_out_date_adj)){
                            $time_out_date_adjustment = $time_out_date_adj;
                        }
                        else{
                            $time_out_date_adjustment = $time_out_date_org . ' -> ' . $time_out_date_adj;
                        }

                        if(strtotime($time_out_org) == strtotime($time_out_adj)){
                            $time_out_adjustment = $time_out_adj;
                        }
                        else{
                            $time_out_adjustment = $time_out_org . ' -> ' . $time_out_adj;
                        }

                        if($status == '0' && $delete_employee_attendance_record_adjustment > 0){
                            $delete = '<button type="button" class="btn btn-danger waves-effect waves-light delete-employee-attendance-record-adjustment" data-adjustmentid="'. $adjustment_id .'" title="Delete Attendance Record Adjustment">
                                        <i class="bx bx-trash font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $delete = '';
                        }

                        if($status == '0' && $cancel_employee_attendance_record_adjustment > 0){
                            $cancel = '<button type="button" class="btn btn-warning waves-effect waves-light cancel-employee-attendance-record-adjustment" data-adjustmentid="'. $adjustment_id .'" title="Cancel Attendance Record Adjustment">
                                        <i class="bx bx-x font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $cancel = '';
                        }

                        $response[] = array(
                            'TIME_IN_DATE' => $time_in_date,
                            'TIME_IN' => $time_in_adjustment,
                            'TIME_OUT_DATE' => $time_out_date_adjustment,
                            'TIME_OUT' => $time_out_adjustment,
                            'STATUS' => $request_status,
                            'ATTACHMENT' => '<a href="'. $attachment .'" target="_blank">Attachment</a>',
                            'REASON' => $reason,
                            'REMARKS' => $remarks,
                            'ACTION' => '<div class="d-flex gap-2">
                                    <button type="button" class="btn btn-primary waves-effect waves-light updated-employee-attendance-record-adjustment" data-adjustmentid="'. $adjustment_id .'" data-attendanceid="'. $attendance_id .'" data-employeeid="'. $employee_id .'" title="View Details">
                                        <i class="bx bx-show font-size-16 align-middle"></i>
                                    </button>
                                    '. $cancel . $delete .'
                                </div>'
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo()[2];
                }
            }
        }
    }
    # -------------------------------------------------------------

    # Attendance adjustment table
    else if($type == 'attendance adjustment table'){
        if(isset($_POST['filter_branch']) && isset($_POST['filter_department'])&& isset($_POST['filter_start_date']) && isset($_POST['filter_end_date'])){
            if ($api->databaseConnection()) {
                $filter_start_date = $api->check_date('empty', $_POST['filter_start_date'], '', 'Y-m-d', '', '', '');
                $filter_end_date = $api->check_date('empty', $_POST['filter_end_date'], '', 'Y-m-d', '', '', '');
                $filter_branch = $_POST['filter_branch'];
                $filter_department = $_POST['filter_department'];

                # Get role permission
                $approve_attendance_record_adjustment = $api->check_role_permissions($username, 152);
                $reject_attendance_record_adjustment = $api->check_role_permissions($username, 153);
                $delete_attendance_record_adjustment = $api->check_role_permissions($username, 154);
                $cancel_attendance_record_adjustment = $api->check_role_permissions($username, 155);

                $employee_details = $api->get_data_details_one_parameter('employee profile', $username);
                $employee_id = $employee_details[0]['EMPLOYEE_ID'];

                $query = "SELECT ADJUSTMENT_ID, EMPLOYEE_ID, ATTENDANCE_ID, TIME_IN_DATE, TIME_IN_ORG, TIME_IN_ORG, TIME_IN_ADJ, TIME_OUT_DATE_ORG, TIME_OUT_DATE_ADJ, TIME_OUT_ORG, TIME_OUT_ADJ, STATUS, ATTACHMENT, REASON, RECOMMEND_BY, RECOMMEND_DATE, RECOMMEND_TIME FROM tblattendanceadustment WHERE STATUS = '4'";

                if(!empty($filter_branch) || !empty($filter_department) || (!empty($filter_start_date) && !empty($filter_end_date))){
                    $query .= " AND ";

                    if(!empty($filter_branch)){
                        $filter[] = 'EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM tblemployeeprofile WHERE BRANCH = :filter_branch)';
                    }

                    if(!empty($filter_department)){
                        $filter[] = 'EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM tblemployeeprofile WHERE DEPARTMENT = :filter_department)';
                    }

                    if(!empty($filter_start_date) && !empty($filter_end_date)){
                        $filter[] = 'FILE_DATE BETWEEN :filter_start_date AND :filter_end_date';
                    }

                    if(!empty($filter)){
                        $query .= implode(" AND ", $filter);
                    }
                }

                $sql = $api->db_connection->prepare($query);

                if(!empty($filter_branch) || !empty($filter_department) || (!empty($filter_start_date) && !empty($filter_end_date))){
                    if(!empty($filter_branch)){
                        $sql->bindValue(':filter_branch', $filter_branch);
                    }

                    if(!empty($filter_department)){
                        $sql->bindValue(':filter_department', $filter_department);
                    }

                    if(!empty($filter_start_date) && !empty($filter_end_date)){
                        $sql->bindValue(':filter_start_date', $filter_start_date);
                        $sql->bindValue(':filter_end_date', $filter_end_date);
                    }
                }

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $employee_id = trim($row['EMPLOYEE_ID']);
                        $adjustment_id = trim($row['ADJUSTMENT_ID']);
                        $attendance_id = trim($row['ATTENDANCE_ID']);
                        $recommend_by = trim($row['RECOMMEND_BY']);
                        $time_in_date = $api->check_date('empty', trim($row['TIME_IN_DATE']), '', 'm/d/Y', '', '', '');
                        $time_in_org = $api->check_date('empty', trim($row['TIME_IN_ORG']), '', 'h:i:s a', '', '', '');
                        $time_in_adj = $api->check_date('empty', trim($row['TIME_IN_ADJ']), '', 'h:i:s a', '', '', '');
                        $time_out_date_org = $api->check_date('empty', trim($row['TIME_OUT_DATE_ORG']), '', 'm/d/Y', '', '', '');
                        $time_out_date_adj = $api->check_date('empty', trim($row['TIME_OUT_DATE_ADJ']), '', 'm/d/Y', '', '', '');
                        $time_out_org = $api->check_date('empty', trim($row['TIME_OUT_ORG']), '', 'h:i:s a', '', '', '');
                        $time_out_adj = $api->check_date('empty', trim($row['TIME_OUT_ADJ']), '', 'h:i:s a', '', '', '');
                        $recommend_date = $api->check_date('empty', trim($row['RECOMMEND_DATE']), '', 'm/d/Y', '', '', '');
                        $recommend_time = $api->check_date('empty', trim($row['RECOMMEND_TIME']), '', 'h:i:s a', '', '', '');
                        $reason = trim($row['REASON']);
                        $attachment = trim($row['ATTACHMENT']);
                        $status = trim($row['STATUS']);
                        $request_status = $api->get_attendance_adjustment_status($status)[0]['BADGE'];

                        $employee_profile_details = $api->get_data_details_one_parameter('employee profile', $employee_id);
                        $employee_first_name = $employee_profile_details[0]['FIRST_NAME'];
                        $employee_last_name = $employee_profile_details[0]['LAST_NAME'];
                        $employee_middle_name = $employee_profile_details[0]['MIDDLE_NAME'];
                        $employee_suffix = $employee_profile_details[0]['SUFFIX'];
                        $employee_department = $employee_profile_details[0]['DEPARTMENT'];
                        $employee_fullname = $api->get_full_name($employee_first_name, $employee_middle_name, $employee_last_name, $employee_suffix)[0]['REVERSE_FULL_NAME'];

                        $department_details = $api->get_data_details_one_parameter('department', $employee_department);
                        $department = $department_details[0]['DEPARTMENT'] ?? null;

                        if(!empty($recommend_by)){
                            $recommend_by_details = $api->get_data_details_one_parameter('employee profile', $recommend_by);
                            $recommend_by_first_name = $recommend_by_details[0]['FIRST_NAME'];
                            $recommend_by_last_name = $recommend_by_details[0]['LAST_NAME'];
                            $recommend_by_middle_name = $recommend_by_details[0]['MIDDLE_NAME'];
                            $recommend_by_suffix = $recommend_by_details[0]['SUFFIX'];
                            $recommend_by_fullname = $api->get_full_name($recommend_by_first_name, $recommend_by_middle_name, $recommend_by_last_name, $recommend_by_suffix)[0]['REVERSE_FULL_NAME'];
                        }
                        else{
                            $recommend_by_fullname = '';
                        }

                        if(strtotime($time_in_org) == strtotime($time_in_adj)){
                            $time_in_adjustment = $time_in_adj;
                        }
                        else{
                            $time_in_adjustment = $time_in_org . ' -> ' . $time_in_adj;
                        }

                        if(strtotime($time_out_date_org) == strtotime($time_out_date_adj)){
                            $time_out_date_adjustment = $time_out_date_adj;
                        }
                        else{
                            $time_out_date_adjustment = $time_out_date_org . ' -> ' . $time_out_date_adj;
                        }

                        if(strtotime($time_out_org) == strtotime($time_out_adj)){
                            $time_out_adjustment = $time_out_adj;
                        }
                        else{
                            $time_out_adjustment = $time_out_org . ' -> ' . $time_out_adj;
                        }

                        if($delete_attendance_record_adjustment > 0){
                            $delete = '<button type="button" class="btn btn-danger waves-effect waves-light delete-attendance-record-adjustment" data-adjustmentid="'. $adjustment_id .'" title="Delete Attendance Record Adjustment">
                                        <i class="bx bx-trash font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $delete = '';
                        }

                        if($cancel_attendance_record_adjustment > 0){
                            $cancel = '<button type="button" class="btn btn-warning waves-effect waves-light cancel-attendance-record-adjustment" data-adjustmentid="'. $adjustment_id .'" title="Cancel Attendance Record Adjustment">
                                        <i class="bx bx-x font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $cancel = '';
                        }

                        if($reject_attendance_record_adjustment > 0){
                            $reject = '<button type="button" class="btn btn-danger waves-effect waves-light reject-attendance-record-adjustment" data-adjustmentid="'. $adjustment_id .'" title="Reject Attendance Record Adjustment">
                                        <i class="bx bx-block font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $reject = '';
                        }

                        if($approve_attendance_record_adjustment > 0){
                            $approve = '<button type="button" class="btn btn-success waves-effect waves-light approve-attendance-record-adjustment" data-adjustmentid="'. $adjustment_id .'" title="Approve Attendance Record Adjustment">
                                        <i class="bx bx-check font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $approve = '';
                        }

                        $response[] = array(
                            'FULL_NAME' => $employee_fullname,
                            'DEPARTMENT' => $department,
                            'TIME_IN_DATE' => $time_in_date,
                            'TIME_IN' => $time_in_adjustment,
                            'TIME_OUT_DATE' => $time_out_date_adjustment,
                            'TIME_OUT' => $time_out_adjustment,
                            'STATUS' => $request_status,
                            'ATTACHMENT' => '<a href="'. $attachment .'" target="_blank">Attachment</a>',
                            'REASON' => $reason,
                            'RECOMMEND_BY' => $recommend_by_fullname,
                            'RECOMMEND_DATE' => $recommend_date . ' ' . $recommend_time,
                            'ACTION' => '<div class="d-flex gap-2">
                                    '. $approve . $reject . $cancel . $delete .'
                                </div>'
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo()[2];
                }
            }
        }
    }
    # -------------------------------------------------------------

    # Attendance adjustment recommendation table
    else if($type == 'attendance adjustment recommendation table'){
        if ($api->databaseConnection()) {
            # Get role permission
            $recommend_attendance_record_adjustment = $api->check_role_permissions($username, 290);
            $reject_attendance_record_adjustment = $api->check_role_permissions($username, 291);
            $cancel_attendance_record_adjustment = $api->check_role_permissions($username, 292);

            $employee_profile_details = $api->get_data_details_one_parameter('employee profile', $username);
            $employee_id = $employee_profile_details[0]['EMPLOYEE_ID'];

            $sql = $api->db_connection->prepare("SELECT ADJUSTMENT_ID, EMPLOYEE_ID, ATTENDANCE_ID, TIME_IN_DATE, TIME_IN_ORG, TIME_IN_ORG, TIME_IN_ADJ, TIME_OUT_DATE_ORG, TIME_OUT_DATE_ADJ, TIME_OUT_ORG, TIME_OUT_ADJ, STATUS, ATTACHMENT, REASON FROM tblattendanceadustment WHERE STATUS = '0' AND (EMPLOYEE_ID IN (SELECT SUBORDINATE_ID FROM tblemployeesubordinate WHERE EMPLOYEE_ID = :employee_id) OR EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM tblemployeeauthorizer WHERE AUTHORIZER_ID = :employee_id)) ORDER BY ADJUSTMENT_ID");
            $sql->bindParam(':employee_id', $employee_id);

            if($sql->execute()){
                while($row = $sql->fetch()){
                    $employee_id = trim($row['EMPLOYEE_ID']);
                    $adjustment_id = trim($row['ADJUSTMENT_ID']);
                    $attendance_id = trim($row['ATTENDANCE_ID']);
                    $time_in_date = $api->check_date('empty', trim($row['TIME_IN_DATE']), '', 'm/d/Y', '', '', '');
                    $time_in_org = $api->check_date('empty', trim($row['TIME_IN_ORG']), '', 'h:i a', '', '', ''); // Removed seconds
                    $time_in_adj = $api->check_date('empty', trim($row['TIME_IN_ADJ']), '', 'h:i a', '', '', ''); // Removed seconds

                    $time_out_date_org = $api->check_date('empty', trim($row['TIME_OUT_DATE_ORG']), '', 'm/d/Y', '', '', '');
                    $time_out_date_adj = $api->check_date('empty', trim($row['TIME_OUT_DATE_ADJ']), '', 'm/d/Y', '', '', '');
                    $time_out_org = $api->check_date('empty', trim($row['TIME_OUT_ORG']), '', 'h:i a', '', '', ''); // Removed seconds
                    $time_out_adj = $api->check_date('empty', trim($row['TIME_OUT_ADJ']), '', 'h:i a', '', '', ''); // Removed seconds
                    $reason = trim($row['REASON']);
                    $attachment = trim($row['ATTACHMENT']);
                    $status = trim($row['STATUS']);
                    $request_status = $api->get_attendance_adjustment_status($status)[0]['BADGE'];

                    $employee_profile_details = $api->get_data_details_one_parameter('employee profile', $employee_id);
                    $employee_first_name = $employee_profile_details[0]['FIRST_NAME'];
                    $employee_last_name = $employee_profile_details[0]['LAST_NAME'];
                    $employee_middle_name = $employee_profile_details[0]['MIDDLE_NAME'];
                    $employee_suffix = $employee_profile_details[0]['SUFFIX'];
                    $employee_fullname = $api->get_full_name($employee_first_name, $employee_middle_name, $employee_last_name, $employee_suffix)[0]['REVERSE_FULL_NAME'];

                    if(strtotime($time_in_org) == strtotime($time_in_adj)){
                        $time_in_adjustment = $time_in_adj;
                    }
                    else{
                        $time_in_adjustment = '<div class="time-adjustment">
                                                  <div class="original-time">Original: <span>' . $time_in_org . '</span></div>
                                                  <div class="adjusted-time">Adjusted: <span class="text-primary">' . $time_in_adj . '</span></div>
                                               </div>';
                    }

                    if(strtotime($time_out_date_org) == strtotime($time_out_date_adj)){
                        $time_out_date_adjustment = $time_out_date_adj;
                    }
                    else{
                        $time_out_date_adjustment = '<div class="time-adjustment">
                                                       <div class="original-time">Original: <span>' . $time_out_date_org . '</span></div>
                                                       <div class="adjusted-time">Adjusted: <span class="text-primary">' . $time_out_date_adj . '</span></div>
                                                    </div>';
                    }

                    if(strtotime($time_out_org) == strtotime($time_out_adj)){
                        $time_out_adjustment = $time_out_adj;
                    }
                    else{
                        $time_out_adjustment = '<div class="time-adjustment">
                                                  <div class="original-time">Original: <span>' . $time_out_org . '</span></div>
                                                  <div class="adjusted-time">Adjusted: <span class="text-primary">' . $time_out_adj . '</span></div>
                                               </div>';
                    }


                    if($cancel_attendance_record_adjustment > 0){
                        $cancel = '<button type="button" class="btn btn-warning waves-effect waves-light cancel-attendance-record-adjustment" data-adjustmentid="'. $adjustment_id .'" title="Cancel Attendance Record Adjustment">
                                    <i class="bx bx-x font-size-16 align-middle"></i>
                                </button>';
                    }
                    else{
                        $cancel = '';
                    }

                    if($reject_attendance_record_adjustment > 0){
                        $reject = '<button type="button" class="btn btn-danger waves-effect waves-light reject-attendance-record-adjustment" data-adjustmentid="'. $adjustment_id .'" title="Reject Attendance Record Adjustment">
                                    <i class="bx bx-block font-size-16 align-middle"></i>
                                </button>';
                    }
                    else{
                        $reject = '';
                    }

                    if($recommend_attendance_record_adjustment > 0){
                        $recommend = '<button type="button" class="btn btn-success waves-effect waves-light recommend-attendance-record-adjustment" data-adjustmentid="'. $adjustment_id .'" title="Recommend Attendance Record Adjustment">
                                    <i class="bx bx-check font-size-16 align-middle"></i>
                                </button>';
                    }
                    else{
                        $recommend = '';
                    }

                    $response[] = array(
                        'FULL_NAME' => $employee_fullname,
                        'TIME_IN_DATE' => $time_in_date,
                        'TIME_IN' => $time_in_adjustment,
                        'TIME_OUT_DATE' => $time_out_date_adjustment,
                        'TIME_OUT' => $time_out_adjustment,
                        'STATUS' => $request_status,
                        'ATTACHMENT' => '<a href="'. $attachment .'" target="_blank">Attachment</a>',
                        'REASON' => $reason,
                        'ACTION' => '<div class="d-flex gap-2">
                                '. $recommend . $reject . $cancel .'
                            </div>'
                    );
                }

                echo json_encode($response);
            }
            else{
                echo $sql->errorInfo()[2];
            }
        }
    }
    # -------------------------------------------------------------

    # Attendance summary table
     else if($type == 'attendance summary table'){
        if(isset($_POST['filter_branch']) && isset($_POST['filter_department'])&& isset($_POST['filter_start_date']) && isset($_POST['filter_end_date'])){
            if ($api->databaseConnection()) {
                $filter_start_date = $api->check_date('empty', $_POST['filter_start_date'], '', 'Y-m-d', '', '', '');
                $filter_end_date = $api->check_date('empty', $_POST['filter_end_date'], '', 'Y-m-d', '', '', '');
                $filter_branch = $_POST['filter_branch'];
                $filter_department = $_POST['filter_department'];

                # Get role permission
                $approve_attendance_record_adjustment = $api->check_role_permissions($username, 152);
                $reject_attendance_record_adjustment = $api->check_role_permissions($username, 153);
                $delete_attendance_record_adjustment = $api->check_role_permissions($username, 154);
                $cancel_attendance_record_adjustment = $api->check_role_permissions($username, 155);

                $employee_details = $api->get_data_details_one_parameter('employee profile', $username);
                $employee_id = $employee_details[0]['EMPLOYEE_ID'];

                $query = "SELECT EMPLOYEE_ID FROM tblemployeeprofile WHERE EMPLOYEE_ID NOT LIKE 'USER-%'";

                if(!empty($filter_branch) || !empty($filter_department) || (!empty($filter_start_date) && !empty($filter_end_date))){
                    $query .= " AND ";

                    if(!empty($filter_branch)){
                        $filter[] = 'EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM tblemployeeprofile WHERE BRANCH = :filter_branch)';
                    }

                    if(!empty($filter_department)){
                        $filter[] = 'EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM tblemployeeprofile WHERE DEPARTMENT = :filter_department)';
                    }

                    if(!empty($filter_start_date) && !empty($filter_end_date)){
                        $filter[] = 'EMPLOYEE_ID IN (SELECT DISTINCT(EMPLOYEE_ID) AS EMPLOYEE_ID FROM tblattendancerecord WHERE TIME_IN_DATE BETWEEN :filter_start_date AND :filter_end_date)';
                    }

                    if(!empty($filter)){
                        $query .= implode(" AND ", $filter);
                    }
                }

                $sql = $api->db_connection->prepare($query);

                if(!empty($filter_branch) || !empty($filter_department) || (!empty($filter_start_date) && !empty($filter_end_date))){
                    if(!empty($filter_branch)){
                        $sql->bindValue(':filter_branch', $filter_branch);
                    }

                    if(!empty($filter_department)){
                        $sql->bindValue(':filter_department', $filter_department);
                    }

                    if(!empty($filter_start_date) && !empty($filter_end_date)){
                        $sql->bindValue(':filter_start_date', $filter_start_date);
                        $sql->bindValue(':filter_end_date', $filter_end_date);
                    }
                }




                   if($sql->execute()){
                 while($row = $sql->fetch()) {
                    $overtime_breakdown_display = '';

                    // Set employee ID correctly first
                    $employee_id = trim($row['EMPLOYEE_ID']);

                    // Now this will use the correct employee ID
                    $overtime_minutes = $api->get_total_overtime_minutes($employee_id, $filter_start_date, $filter_end_date);

                    if (is_array($overtime_minutes)) {
                        foreach ($overtime_minutes as $code => $minutes) {
                            $holiday_type = $api->get_system_description('HOLIDAYTYPE', $code);
                            $label = $holiday_type ?: $code;
                            $overtime_breakdown_display .= '<b>' . htmlspecialchars($label) . ':</b> ' . number_format($minutes, 2) . ' minutes<br>';
                        }
                    } else {
                        $overtime_breakdown_display = 'Error: ' . htmlspecialchars($overtime_minutes);
                    }

                        $employee_id = trim($row['EMPLOYEE_ID']);
                        $employee_profile_details = $api->get_data_details_one_parameter('employee profile', $employee_id);
                        $employee_first_name = $employee_profile_details[0]['FIRST_NAME'];
                        $employee_last_name = $employee_profile_details[0]['LAST_NAME'];
                        $employee_middle_name = $employee_profile_details[0]['MIDDLE_NAME'];
                        $employee_suffix = $employee_profile_details[0]['SUFFIX'];
                        $employee_department = $employee_profile_details[0]['DEPARTMENT'];
                        $employee_fullname = $api->get_full_name($employee_first_name, $employee_middle_name, $employee_last_name, $employee_suffix)[0]['REVERSE_FULL_NAME'];

                        $department_details = $api->get_data_details_one_parameter('department', $employee_department);
                        $department = $department_details[0]['DEPARTMENT'] ?? null;

                        $get_working_days = $api->get_working_days($employee_id, $filter_start_date, $filter_end_date);
                        $get_days_worked_combined = $api->get_days_worked_combined($employee_id, $filter_start_date, $filter_end_date);
                        $get_ob_paid_total = $api->get_leave_total($employee_id, $filter_start_date, $filter_end_date, 'LEAVETP8', '1');



                        $get_total_late = $api->get_total_late($employee_id, $filter_start_date, $filter_end_date);
                        $get_total_late_minutes = $api->get_total_late_minutes($employee_id, $filter_start_date, $filter_end_date);
                        $get_total_early_leaving = $api->get_total_early_leaving($employee_id, $filter_start_date, $filter_end_date);
                        $get_total_early_leaving_minutes = $api->get_total_early_leaving_minutes($employee_id, $filter_start_date, $filter_end_date);
                        $get_total_overtime_minutes = $api->get_total_overtime_minutes($employee_id, $filter_start_date, $filter_end_date);
                        $get_total_attendance_adjustments = $api->get_total_attendance_adjustments($employee_id, $filter_start_date, $filter_end_date);
                        $get_vacation_leave_total = $api->get_leave_total($employee_id, $filter_start_date, $filter_end_date, 'LEAVETP1', '1');
                        $get_leave_without_pay_total = $api->get_leave_total($employee_id, $filter_start_date, $filter_end_date, 'LEAVETP3', '1');
                        $get_maternity_leave_total = $api->get_leave_total($employee_id, $filter_start_date, $filter_end_date, 'LEAVETP6', '1');
                        $get_paternity_leave_total = $api->get_leave_total($employee_id, $filter_start_date, $filter_end_date, 'LEAVETP7', '1');
                        $get_ob_unpaid_total = $api->get_leave_total($employee_id, $filter_start_date, $filter_end_date, 'LEAVETP9', '1');
                        $get_emergency_leave_total = $api->get_leave_total($employee_id, $filter_start_date, $filter_end_date, 'LEAVETP5', '1');
                        $get_sick_leave_total = $api->get_leave_total($employee_id, $filter_start_date, $filter_end_date, 'LEAVETP2', '1');
                        $get_mandatory_leave_total = $api->get_leave_total($employee_id, $filter_start_date, $filter_end_date, 'LEAVETP10', '1');

                        // Add these function calls after your existing API calls
                        $get_total_working_hours = $api->get_total_working_hours($employee_id, $filter_start_date, $filter_end_date);
                        $get_total_ob_paid_hours = $api->get_total_ob_paid_hours($employee_id, $filter_start_date, $filter_end_date);

                        // Update your response array to include the new columns
                        $response[] = array(
                            'FULL_NAME' => '<a href="javascript: void(0);" class="view-attendance-record" data-employeeid="'. $employee_id .'" data-startdate="'. $filter_start_date .'" data-enddate="'. $filter_end_date .'">' . $employee_fullname . '</a>',
                            'DEPARTMENT' => $department,
                            'WORKING_DAYS' => $get_working_days,
                            'TOTAL_WORKING_HOURS' => number_format($get_total_working_hours, 2), // NEW COLUMN
                            'DAYS_WORKED' => $get_days_worked_combined,
                            'NUM_LATE' => $get_total_late,
                            'LATE' => number_format($get_total_late_minutes, 2),
                            'NUM_UNDERTIME' => $get_total_early_leaving,
                            'UNDERTIME' => number_format($get_total_early_leaving_minutes, 2),
                            'OVERTIME' => $overtime_breakdown_display,
                            'ATTENDANCE_ADJUSTMENT' => number_format($get_total_attendance_adjustments),
                            'VACATION_LEAVE' => $get_vacation_leave_total,
                            'LEAVE_WITHOUT_PAY' => $get_leave_without_pay_total,
                            'MATERNITY_LEAVE' => $get_maternity_leave_total,
                            'PATERNITY_LEAVE' => $get_paternity_leave_total,
                            'OFFICIAL_BUSINESS_PAID' => $get_ob_paid_total,
                            'TOTAL_OB_PAID_HOURS' => number_format($get_total_ob_paid_hours, 2), // NEW COLUMN
                            'OFFICIAL_BUSINESS_UNPAID' => $get_ob_unpaid_total,
                            'EMERGENCY_LEAVE' => $get_emergency_leave_total,
                            'SICK_LEAVE' => $get_sick_leave_total,
                            'MANDATORY_LEAVE' => $get_mandatory_leave_total,
                            'ACTION' => '<div class="d-flex gap-2">
                                <button type="button" class="btn btn-primary waves-effect waves-light view-attendance-record" data-employeeid="'. $employee_id .'" data-startdate="'. $filter_start_date .'" data-enddate="'. $filter_end_date .'" title="View Details">
                                <i class="bx bx-show font-size-16 align-middle"></i>
                                </button>
                            </div>'
                        );

                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo()[2];
                }
            }
        }
    }
    # -------------------------------------------------------------

    # Attendance summary attendance record table
    else if($type == 'attendance summary attendance record table'){
        if(isset($_POST['parameter1']) && !empty($_POST['parameter1']) && isset($_POST['parameter2']) && !empty($_POST['parameter2']) && isset($_POST['parameter3']) && !empty($_POST['parameter3'])){
            if ($api->databaseConnection()) {
                $parameter1 = $_POST['parameter1'];
                $parameter2 = $_POST['parameter2'];
                $parameter3 = $_POST['parameter3'];

                $sql = $api->db_connection->prepare('SELECT ATTENDANCE_ID, TIME_IN_DATE, TIME_IN, TIME_IN_BY, TIME_IN_IP, TIME_IN_LAT, TIME_IN_LONG, TIME_OUT_DATE, TIME_OUT, TIME_OUT_BY, TIME_OUT_IP, TIME_OUT_LAT, TIME_OUT_LONG, LATE, EARLY_LEAVING, OVERTIME, TOTAL_HOURS, REMARKS FROM tblattendancerecord WHERE EMPLOYEE_ID = :parameter1 AND TIME_IN_DATE BETWEEN :parameter2 AND :parameter3 ORDER BY ATTENDANCE_ID');
                $sql->bindParam(':parameter1', $parameter1);
                $sql->bindParam(':parameter2', $parameter2);
                $sql->bindParam(':parameter3', $parameter3);

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $attendance_id = trim($row['ATTENDANCE_ID']);
                        $time_in_date = $api->check_date('empty', trim($row['TIME_IN_DATE']), '', 'm/d/Y', '', '', '');
                        $time_in = $api->check_date('empty', trim($row['TIME_IN']), '', 'h:i:s a', '', '', '');
                        $time_in_by = trim($row['TIME_IN_BY']);
                        $time_in_ip = trim($row['TIME_IN_IP']);
                        $time_in_lat = trim($row['TIME_IN_LAT']);
                        $time_in_long = trim($row['TIME_IN_LONG']);
                        $time_out_date = $api->check_date('empty', trim($row['TIME_OUT_DATE']), '', 'm/d/Y', '', '', '');
                        $time_out = $api->check_date('empty', trim($row['TIME_OUT']), '', 'h:i:s a', '', '', '');
                        $time_out_by = trim($row['TIME_OUT_BY']);
                        $time_out_ip = trim($row['TIME_OUT_IP']);
                        $time_out_lat = trim($row['TIME_OUT_LAT']);
                        $time_out_long = trim($row['TIME_OUT_LONG']);
                        $late = number_format($row['LATE'], 2) . ' Minute(s)';
                        $early_leaving = number_format($row['EARLY_LEAVING'], 2) . ' Minute(s)';
                        $overtime = number_format($row['OVERTIME'], 2) . ' Hour(s)';
                        $total_hours = number_format($row['TOTAL_HOURS'], 2) . ' Hour(s)';
                        $remarks = trim($row['REMARKS']);

                        $time_in_by_details = $api->get_data_details_one_parameter('employee profile', $time_in_by);
                        $time_in_by_first_name = $time_in_by_details[0]['FIRST_NAME'];
                        $time_in_by_last_name = $time_in_by_details[0]['LAST_NAME'];
                        $time_in_by_middle_name = $time_in_by_details[0]['MIDDLE_NAME'];
                        $time_in_by_suffix = $time_in_by_details[0]['SUFFIX'];
                        $time_in_by_fullname = $api->get_full_name($time_in_by_first_name, $time_in_by_middle_name, $time_in_by_last_name, $time_in_by_suffix)[0]['REVERSE_FULL_NAME'];

                        if(!empty($time_out_date) && !empty($time_out)){
                            $time_out_by_details = $api->get_data_details_one_parameter('employee profile', $time_out_by);
                            $time_out_by_first_name = $time_out_by_details[0]['FIRST_NAME'];
                            $time_out_by_last_name = $time_out_by_details[0]['LAST_NAME'];
                            $time_out_by_middle_name = $time_out_by_details[0]['MIDDLE_NAME'];
                            $time_out_by_suffix = $time_out_by_details[0]['SUFFIX'];
                            $time_out_by_fullname = $api->get_full_name($time_out_by_first_name, $time_out_by_middle_name, $time_out_by_last_name, $time_out_by_suffix)[0]['REVERSE_FULL_NAME'];
                        }
                        else{
                            $time_out_by_fullname = '';
                        }

                        $response[] = array(
                            'TIME_IN_DATE' => '<a href="https://maps.google.com/?q=' . $time_in_lat . ', ' . $time_in_long . '" target="_blank">' . $time_in_date . '<br/>' . $time_in . '</a>',
                            'TIME_IN_BY' => $time_in_by_fullname,
                            'TIME_IN_IP' => $time_in_ip,
                            'TIME_OUT_DATE' => '<a href="https://maps.google.com/?q=' . $time_out_lat . ', ' . $time_out_long . '" target="_blank">' . $time_out_date . '<br/>' . $time_out . '</a>',
                            'TIME_OUT_BY' => $time_out_by_fullname,
                            'TIME_OUT_IP' => $time_out_ip,
                            'LATE' => $late,
                            'EARLY_LEAVING' => $early_leaving,
                            'OVERTIME' => $overtime,
                            'TOTAL_HOURS' => $total_hours,
                            'REMARKS' => $remarks
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo()[2];
                }
            }
        }
    }
    # -------------------------------------------------------------

    # Attendance summary leave table
    else if($type == 'attendance summary leave table'){
        if(isset($_POST['parameter1']) && !empty($_POST['parameter1']) && isset($_POST['parameter2']) && !empty($_POST['parameter2']) && isset($_POST['parameter3']) && !empty($_POST['parameter3'])){
            if ($api->databaseConnection()) {
                $parameter1 = $_POST['parameter1'];
                $parameter2 = $_POST['parameter2'];
                $parameter3 = $_POST['parameter3'];

                $sql = $api->db_connection->prepare("SELECT LEAVE_ID, LEAVE_TYPE, LEAVE_DATE, REASON, START_TIME, END_TIME, STATUS, DECISION_DATE, CANCELATION_REASON, REJECTION_REASON, ATTACHMENT_PATH FROM tblleave WHERE EMPLOYEE_ID = :parameter1 AND LEAVE_DATE BETWEEN :parameter2 AND :parameter3 AND STATUS = '1' ORDER BY LEAVE_ID");
                $sql->bindParam(':parameter1', $parameter1);
                $sql->bindParam(':parameter2', $parameter2);
                $sql->bindParam(':parameter3', $parameter3);

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $leave_id = trim($row['LEAVE_ID']);
                        $leave_date = $api->check_date('empty', $row['LEAVE_DATE'], '', 'm/d/Y', '', '', '');
                        $reason = trim($row['REASON']);
                        $status = trim($row['STATUS']);
                        $decision_date = $api->check_date('empty',  $row['DECISION_DATE'], '', 'm/d/Y', '', '', '');
                        $leave_type = trim($row['LEAVE_TYPE']);
                        $cancelation_reason = trim($row['CANCELATION_REASON']);
                        $rejection_reason = trim($row['REJECTION_REASON']);
                        $start_time = $api->check_date('empty', trim($row['START_TIME']), '', 'h:i a', '', '', '');
                        $end_time = $api->check_date('empty', trim($row['END_TIME']), '', 'h:i a', '', '', '');
                        $leave_name = $api->get_data_details_one_parameter('leave type', $leave_type)[0]['LEAVE_NAME'];
                        $leave_status = $api->get_leave_status($status, $system_date, $leave_date)[0]['BADGE'];
                        $attachment = $row['ATTACHMENT_PATH'];
                        $attachment_button = '';

                        if($attachment != null){
                            //$leave_name = '<a href="'.$attachment.'" target="_blank">'.$api->get_data_details_one_parameter('leave type', $leave_type)[0]['LEAVE_NAME'].'</a>';
                            $attachment_button = '<a href = "'.$attachment.'" target="_blank" class="btn btn-primary btn-sm" >see attachment</a>';
                        }else{
                            //$leave_name = $api->get_data_details_one_parameter('leave type', $leave_type)[0]['LEAVE_NAME'];
                            $attachment_button = ' no attachement';
                        }

                        $response[] = array(
                            'ATTACHMENT_PATH'=>$attachment_button,
                            'LEAVE_NAME' => $leave_name,
                            'LEAVE_DATE' => $leave_date . '<br/>' . $start_time . ' - ' . $end_time,
                            'LEAVE_STATUS' => $leave_status,
                            'REASON' => $reason,
                            'APPROVAL_DATE' => $decision_date,
                            'CANCELATION_REASON' => $cancelation_reason,
                            'REJECTION_REASON' => $rejection_reason
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo()[2];
                }
            }
        }
    }
    # -------------------------------------------------------------

    # Attendance summary attendance adjustment table
    else if($type == 'attendance summary attendance adjustment table'){
        if(isset($_POST['parameter1']) && !empty($_POST['parameter1']) && isset($_POST['parameter2']) && !empty($_POST['parameter2']) && isset($_POST['parameter3']) && !empty($_POST['parameter3'])){
            if ($api->databaseConnection()) {
                $parameter1 = $_POST['parameter1'];
                $parameter2 = $_POST['parameter2'];
                $parameter3 = $_POST['parameter3'];

                $sql = $api->db_connection->prepare("SELECT ADJUSTMENT_ID, EMPLOYEE_ID, ATTENDANCE_ID, TIME_IN_DATE, TIME_IN_ORG, TIME_IN_ORG, TIME_IN_ADJ, TIME_OUT_DATE_ORG, TIME_OUT_DATE_ADJ, TIME_OUT_ORG, TIME_OUT_ADJ, STATUS, ATTACHMENT, REASON FROM tblattendanceadustment WHERE EMPLOYEE_ID = :parameter1 AND TIME_IN_DATE BETWEEN :parameter2 AND :parameter3 ORDER BY ADJUSTMENT_ID");
                $sql->bindParam(':parameter1', $parameter1);
                $sql->bindParam(':parameter2', $parameter2);
                $sql->bindParam(':parameter3', $parameter3);

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $employee_id = trim($row['EMPLOYEE_ID']);
                        $adjustment_id = trim($row['ADJUSTMENT_ID']);
                        $attendance_id = trim($row['ATTENDANCE_ID']);
                        $time_in_date = $api->check_date('empty', trim($row['TIME_IN_DATE']), '', 'm/d/Y', '', '', '');
                        $time_in_org = $api->check_date('empty', trim($row['TIME_IN_ORG']), '', 'h:i:s a', '', '', '');
                        $time_in_adj = $api->check_date('empty', trim($row['TIME_IN_ADJ']), '', 'h:i:s a', '', '', '');
                        $time_out_date_org = $api->check_date('empty', trim($row['TIME_OUT_DATE_ORG']), '', 'm/d/Y', '', '', '');
                        $time_out_date_adj = $api->check_date('empty', trim($row['TIME_OUT_DATE_ADJ']), '', 'm/d/Y', '', '', '');
                        $time_out_org = $api->check_date('empty', trim($row['TIME_OUT_ORG']), '', 'h:i:s a', '', '', '');
                        $time_out_adj = $api->check_date('empty', trim($row['TIME_OUT_ADJ']), '', 'h:i:s a', '', '', '');
                        $reason = trim($row['REASON']);
                        $attachment = trim($row['ATTACHMENT']);
                        $status = trim($row['STATUS']);
                        $request_status = $api->get_attendance_adjustment_status($status)[0]['BADGE'];

                        $employee_profile_details = $api->get_data_details_one_parameter('employee profile', $employee_id);
                        $employee_first_name = $employee_profile_details[0]['FIRST_NAME'];
                        $employee_last_name = $employee_profile_details[0]['LAST_NAME'];
                        $employee_middle_name = $employee_profile_details[0]['MIDDLE_NAME'];
                        $employee_suffix = $employee_profile_details[0]['SUFFIX'];
                        $employee_fullname = $api->get_full_name($employee_first_name, $employee_middle_name, $employee_last_name, $employee_suffix)[0]['REVERSE_FULL_NAME'];

                        if(strtotime($time_in_org) == strtotime($time_in_adj)){
                            $time_in_adjustment = $time_in_adj;
                        }
                        else{
                            $time_in_adjustment = $time_in_org . ' -> ' . $time_in_adj;
                        }

                        if(strtotime($time_out_date_org) == strtotime($time_out_date_adj)){
                            $time_out_date_adjustment = $time_out_date_adj;
                        }
                        else{
                            $time_out_date_adjustment = $time_out_date_org . ' -> ' . $time_out_date_adj;
                        }

                        if(strtotime($time_out_org) == strtotime($time_out_adj)){
                            $time_out_adjustment = $time_out_adj;
                        }
                        else{
                            $time_out_adjustment = $time_out_org . ' -> ' . $time_out_adj;
                        }

                        $response[] = array(
                            'FULL_NAME' => $employee_fullname,
                            'TIME_IN_DATE' => $time_in_date,
                            'TIME_IN' => $time_in_adjustment,
                            'TIME_OUT_DATE' => $time_out_date_adjustment,
                            'TIME_OUT' => $time_out_adjustment,
                            'STATUS' => $request_status,
                            'ATTACHMENT' => '<a href="'. $attachment .'" target="_blank">Attachment</a>',
                            'REASON' => $reason
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo()[2];
                }

            }
        }
    }
    # -------------------------------------------------------------

     # Attendance adjustment summary table
     else if($type == 'attendance adjustment summary table'){
        if(isset($_POST['filter_branch']) && isset($_POST['filter_department'])&& isset($_POST['filter_start_date']) && isset($_POST['filter_end_date'])){
            if ($api->databaseConnection()) {
                $filter_start_date = $api->check_date('empty', $_POST['filter_start_date'], '', 'Y-m-d', '', '', '');
                $filter_end_date = $api->check_date('empty', $_POST['filter_end_date'], '', 'Y-m-d', '', '', '');
                $filter_branch = $_POST['filter_branch'];
                $filter_department = $_POST['filter_department'];

                $employee_details = $api->get_data_details_one_parameter('employee profile', $username);
                $employee_id = $employee_details[0]['EMPLOYEE_ID'];

                $query = "SELECT ADJUSTMENT_ID, EMPLOYEE_ID, ATTENDANCE_ID, TIME_IN_DATE, TIME_IN_ORG, TIME_IN_ORG, TIME_IN_ADJ, TIME_OUT_DATE_ORG, TIME_OUT_DATE_ADJ, TIME_OUT_ORG, TIME_OUT_ADJ, STATUS, ATTACHMENT, REASON, DECISION_DATE, DECISION_TIME FROM tblattendanceadustment WHERE STATUS = '1'";

                if(!empty($filter_branch) || !empty($filter_department) || (!empty($filter_start_date) && !empty($filter_end_date))){
                    $query .= " AND ";

                    if(!empty($filter_branch)){
                        $filter[] = 'EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM tblemployeeprofile WHERE BRANCH = :filter_branch)';
                    }

                    if(!empty($filter_department)){
                        $filter[] = 'EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM tblemployeeprofile WHERE DEPARTMENT = :filter_department)';
                    }

                    if(!empty($filter_start_date) && !empty($filter_end_date)){
                        $filter[] = 'FILE_DATE BETWEEN :filter_start_date AND :filter_end_date';
                    }

                    if(!empty($filter)){
                        $query .= implode(" AND ", $filter);
                    }
                }

                $sql = $api->db_connection->prepare($query);

                if(!empty($filter_branch) || !empty($filter_department) || (!empty($filter_start_date) && !empty($filter_end_date))){
                    if(!empty($filter_branch)){
                        $sql->bindValue(':filter_branch', $filter_branch);
                    }

                    if(!empty($filter_department)){
                        $sql->bindValue(':filter_department', $filter_department);
                    }

                    if(!empty($filter_start_date) && !empty($filter_end_date)){
                        $sql->bindValue(':filter_start_date', $filter_start_date);
                        $sql->bindValue(':filter_end_date', $filter_end_date);
                    }
                }

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $employee_id = trim($row['EMPLOYEE_ID']);
                        $adjustment_id = trim($row['ADJUSTMENT_ID']);
                        $attendance_id = trim($row['ATTENDANCE_ID']);
                        $time_in_date = $api->check_date('empty', trim($row['TIME_IN_DATE']), '', 'm/d/Y', '', '', '');
                        $time_in_org = $api->check_date('empty', trim($row['TIME_IN_ORG']), '', 'h:i:s a', '', '', '');
                        $time_in_adj = $api->check_date('empty', trim($row['TIME_IN_ADJ']), '', 'h:i:s a', '', '', '');
                        $time_out_date_org = $api->check_date('empty', trim($row['TIME_OUT_DATE_ORG']), '', 'm/d/Y', '', '', '');
                        $time_out_date_adj = $api->check_date('empty', trim($row['TIME_OUT_DATE_ADJ']), '', 'm/d/Y', '', '', '');
                        $time_out_org = $api->check_date('empty', trim($row['TIME_OUT_ORG']), '', 'h:i:s a', '', '', '');
                        $time_out_adj = $api->check_date('empty', trim($row['TIME_OUT_ADJ']), '', 'h:i:s a', '', '', '');
                        $decision_date = $api->check_date('empty', trim($row['DECISION_DATE']), '', 'm/d/Y', '', '', '');
                        $decision_time = $api->check_date('empty', trim($row['DECISION_TIME']), '', 'h:i:s a', '', '', '');
                        $reason = trim($row['REASON']);
                        $attachment = trim($row['ATTACHMENT']);
                        $status = trim($row['STATUS']);
                        $request_status = $api->get_attendance_adjustment_status($status)[0]['BADGE'];

                        $employee_profile_details = $api->get_data_details_one_parameter('employee profile', $employee_id);
                        $employee_first_name = $employee_profile_details[0]['FIRST_NAME'];
                        $employee_last_name = $employee_profile_details[0]['LAST_NAME'];
                        $employee_middle_name = $employee_profile_details[0]['MIDDLE_NAME'];
                        $employee_suffix = $employee_profile_details[0]['SUFFIX'];
                        $employee_department = $employee_profile_details[0]['DEPARTMENT'];
                        $employee_fullname = $api->get_full_name($employee_first_name, $employee_middle_name, $employee_last_name, $employee_suffix)[0]['REVERSE_FULL_NAME'];

                        $department_details = $api->get_data_details_one_parameter('department', $employee_department);
                        $department = $department_details[0]['DEPARTMENT'] ?? null;

                        if(strtotime($time_in_org) == strtotime($time_in_adj)){
                            $time_in_adjustment = $time_in_adj;
                        }
                        else{
                            $time_in_adjustment = $time_in_org . ' -> ' . $time_in_adj;
                        }

                        if(strtotime($time_out_date_org) == strtotime($time_out_date_adj)){
                            $time_out_date_adjustment = $time_out_date_adj;
                        }
                        else{
                            $time_out_date_adjustment = $time_out_date_org . ' -> ' . $time_out_date_adj;
                        }

                        if(strtotime($time_out_org) == strtotime($time_out_adj)){
                            $time_out_adjustment = $time_out_adj;
                        }
                        else{
                            $time_out_adjustment = $time_out_org . ' -> ' . $time_out_adj;
                        }

                        $response[] = array(
                            'FULL_NAME' => $employee_fullname,
                            'DEPARTMENT' => $department,
                            'TIME_IN_DATE' => $time_in_date,
                            'TIME_IN' => $time_in_adjustment,
                            'TIME_OUT_DATE' => $time_out_date_adjustment,
                            'TIME_OUT' => $time_out_adjustment,
                            'APPROVAL_DATE' => $decision_date .'<br/>'. $decision_time,
                            'ATTACHMENT' => '<a href="'. $attachment .'" target="_blank">Attachment</a>',
                            'REASON' => $reason
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo()[2];
                }
            }
        }
    }
    # -------------------------------------------------------------

    # Payroll summary table
    else if($type == 'payroll summary table'){
        if(isset($_POST['parameter'])){
            if ($api->databaseConnection()) {
                $parameter = $_POST['parameter'];

                if(empty($parameter)){
                    $get_latest_payroll_period = $api->get_latest_payroll_period();
                    $start_date = $api->check_date('empty', $get_latest_payroll_period[0]['PAYROLL_START_DATE'], '', 'Y-m-d', '', '', '');
                    $end_date = $api->check_date('empty', $get_latest_payroll_period[0]['PAYROLL_END_DATE'], '', 'Y-m-d', '', '', '');
                }
                else{
                    $pieces = explode('|', $parameter);
                    $start_date = $pieces[0];
                    $end_date = $pieces[1];
                }

                $sql = $api->db_connection->prepare('SELECT PAYROLL_ID, EMPLOYEE_ID, PAYROLL_START_DATE, PAYROLL_END_DATE, STATUS, NO_HOURS, GROSS, NET, DEDUCTIONS, ALLOWANCE, OTHER_INCOME, GENERATED_DATE, GENERATED_BY, REMARKS FROM tblpayroll WHERE PAYROLL_START_DATE = :start_date AND PAYROLL_END_DATE = :end_date');
                $sql->bindParam(':start_date', $start_date);
                $sql->bindParam(':end_date', $end_date);

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $payroll_id = trim($row['PAYROLL_ID']);
                        $employee_id = trim($row['EMPLOYEE_ID']);
                        $payroll_start_date = $api->check_date('empty', $row['PAYROLL_START_DATE'], '', 'm/d/Y', '', '', '');
                        $payroll_end_date = $api->check_date('empty', $row['PAYROLL_END_DATE'], '', 'm/d/Y', '', '', '');
                        $no_hours = number_format($row['NO_HOURS'], 2);
                        $gross = number_format($row['GROSS'], 2);
                        $net = number_format($row['NET'], 2);
                        $deductions = number_format($row['DEDUCTIONS'], 2);
                        $allowance = number_format($row['ALLOWANCE'], 2);
                        $other_income = number_format($row['OTHER_INCOME'], 2);
                        $generate_date = $api->check_date('empty', $row['GENERATED_DATE'], '', 'm/d/Y', '', '', '');
                        $generated_by = $row['GENERATED_BY'];
                        $remarks = $row['REMARKS'];
                        $payroll_status = $row['STATUS'];
                        $status = $api->get_paid_status($payroll_status)[0]['BADGE'];
                        $payroll_id_encrypted = $api->encrypt_data($payroll_id);
                        $employee_id_encrypted = $api->encrypt_data($employee_id);

                        $employee_profile_details = $api->get_data_details_one_parameter('employee profile', $employee_id);
                        $employee_first_name = $employee_profile_details[0]['FIRST_NAME'];
                        $employee_last_name = $employee_profile_details[0]['LAST_NAME'];
                        $employee_middle_name = $employee_profile_details[0]['MIDDLE_NAME'];
                        $employee_suffix = $employee_profile_details[0]['SUFFIX'];
                        $employee_fullname = $api->get_full_name($employee_first_name, $employee_middle_name, $employee_last_name, $employee_suffix)[0]['REVERSE_FULL_NAME'];

                        $generated_by_profile_details = $api->get_data_details_one_parameter('employee profile', $generated_by);
                        $generated_by_first_name = $generated_by_profile_details[0]['FIRST_NAME'];
                        $generated_by_last_name = $generated_by_profile_details[0]['LAST_NAME'];
                        $generated_by_middle_name = $generated_by_profile_details[0]['MIDDLE_NAME'];
                        $generated_by_suffix = $generated_by_profile_details[0]['SUFFIX'];
                        $generated_by_fullname = $api->get_full_name($generated_by_first_name, $generated_by_middle_name, $generated_by_last_name, $generated_by_suffix)[0]['REVERSE_FULL_NAME'];

                        $response[] = array(
                            'EMPLOYEE_FULL_NAME' => $employee_fullname,
                            'PAYROLL_PERIOD' => $payroll_start_date . ' - ' . $payroll_end_date,
                            'STATUS' => $status,
                            'NO_HOURS' => $no_hours,
                            'GROSS' => $gross,
                            'NET' => $net,
                            'DEDUCTIONS' => $deductions,
                            'ALLOWANCE' => $allowance,
                            'OTHER_INCOME' => $other_income,
                            'GENERATED_DATE' => $generate_date,
                            'REMARKS' => $remarks,
                            'ACTION' => '<div class="d-flex gap-2">
                                    <button type="button" class="btn btn-primary waves-effect waves-light view-payroll-summary" data-employeeid="'. $employee_id .'" data-payrollid="'. $payroll_id .'" data-payrollperiod="'. $start_date .'|'. $end_date .'" title="View Details">
                                    <i class="bx bx-show font-size-16 align-middle"></i>
                                    </button>
                                </div>'
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo();
                }
            }
        }
    }
    # -------------------------------------------------------------

    # Payroll summary payroll specification table
    else if($type == 'payroll summary payroll specification table'){
        if(isset($_POST['parameter'])){
            if ($api->databaseConnection()) {
                $parameter = $_POST['parameter'];

                $sql = $api->db_connection->prepare('SELECT SPEC_ID, EMPLOYEE_ID, SPEC_TYPE, CATEGORY, SPEC_AMOUNT, PAYROLL_DATE, PAYROLL_ID, STATUS FROM tblpayrollspec WHERE PAYROLL_ID = :parameter ORDER BY SPEC_ID');
                $sql->bindParam(':parameter', $parameter);

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $spec_id = trim($row['SPEC_ID']);
                        $employee_id = trim($row['EMPLOYEE_ID']);
                        $spec_type = trim($row['SPEC_TYPE']);
                        $payroll_id = trim($row['PAYROLL_ID']);
                        $specification_type = $api->get_system_description('SPECTYPE', $spec_type);
                        $category = trim($row['CATEGORY']);
                        $payroll_date = $api->check_date('empty', $row['PAYROLL_DATE'], '', 'm/d/Y', '', '', '');
                        $spec_amount = $row['SPEC_AMOUNT'];
                        $status = $row['STATUS'];
                        $payroll_spec_status = $api->get_payroll_specification_status($status)[0]['BADGE'];

                        if($spec_type == 'ALLOWANCE'){
                            $allowance_type_details = $api->get_data_details_one_parameter('allowance type', $category);
                            $category_name = $allowance_type_details[0]['ALLOWANCE'];
                        }
                        else if($spec_type == 'DEDUCTION'){
                            $deduction_type_details = $api->get_data_details_one_parameter('deduction type', $category);
                            $category_name = $deduction_type_details[0]['DEDUCTION'];

                            $deduction_category = $deduction_type_details[0]['CATEGORY'];

                            if($deduction_category == 'GOVERNMENT'){
                                $spec_amount = $api->get_deduction_amount($category, $employee_id);
                            }
                        }
                        else{
                            $other_income_type_details = $api->get_data_details_one_parameter('other income type', $category);
                            $category_name = $other_income_type_details[0]['OTHER_INCOME'];
                        }

                        $employee_profile_details = $api->get_data_details_one_parameter('employee profile', $employee_id);
                        $first_name = $employee_profile_details[0]['FIRST_NAME'];
                        $last_name = $employee_profile_details[0]['LAST_NAME'];
                        $middle_name = $employee_profile_details[0]['MIDDLE_NAME'];
                        $suffix = $employee_profile_details[0]['SUFFIX'];
                        $full_name = $api->get_full_name($first_name, $middle_name, $last_name, $suffix)[0]['REVERSE_FULL_NAME'];

                        $response[] = array(
                            'FULL_NAME' => $full_name,
                            'PAYROLL_ID' => $payroll_id,
                            'SPEC_TYPE' => $specification_type,
                            'CATEGORY' => $category_name,
                            'STATUS' => $payroll_spec_status,
                            'SPEC_AMOUNT' => number_format($spec_amount, 2),
                            'PAYROLL_DATE' => $payroll_date
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo()[2];
                }

            }
        }
    }
    # -------------------------------------------------------------

    # Telephone log table
    else if($type == 'telephone log table'){
        if ($api->databaseConnection()) {
            $employee_profile_details = $api->get_data_details_one_parameter('employee profile', $username);
            $employee_id = $employee_profile_details[0]['EMPLOYEE_ID'];

            # Get role permission
            $delete_telephone_log = $api->check_role_permissions($username, 163);
            $cancel_telephone_log = $api->check_role_permissions($username, 164);
            $consumed_telephone_log = $api->check_role_permissions($username, 165);
            $not_consumed_telephone_log = $api->check_role_permissions($username, 166);

            $sql = $api->db_connection->prepare('SELECT LOG_ID, INITIAL_CALL_DATE, INITIAL_CALL_TIME, ACTUAL_CALL_DATE, ACTUAL_CALL_TIME, ACTUAL_CALL_DURATION, RECIPIENT, TELEPHONE, REQUEST_DATE, REQUEST_TIME, STATUS, DECISION_DATE, DECISION_TIME, DECISION_BY, REASON FROM tbltelephonelogsheet WHERE EMPLOYEE_ID = :employee_id');
            $sql->bindParam(':employee_id', $employee_id);

            if($sql->execute()){
                while($row = $sql->fetch()){
                    $log_id = trim($row['LOG_ID']);
                    $initial_call_date = $api->check_date('empty', trim($row['INITIAL_CALL_DATE']), '', 'm/d/Y', '', '', '');
                    $initial_call_time = $api->check_date('empty', trim($row['INITIAL_CALL_TIME']), '', 'h:i:s a', '', '', '');
                    $actual_call_date = $api->check_date('empty', trim($row['ACTUAL_CALL_DATE']), '', 'm/d/Y', '', '', '');
                    $actual_call_time = $api->check_date('empty', trim($row['ACTUAL_CALL_TIME']), '', 'h:i:s a', '', '', '');
                    $request_date = $api->check_date('empty', trim($row['REQUEST_DATE']), '', 'm/d/Y', '', '', '');
                    $request_time = $api->check_date('empty', trim($row['REQUEST_TIME']), '', 'h:i:s a', '', '', '');
                    $decision_date = $api->check_date('empty', trim($row['DECISION_DATE']), '', 'm/d/Y', '', '', '');
                    $decision_time = $api->check_date('empty', trim($row['DECISION_TIME']), '', 'h:i:s a', '', '', '');
                    $actual_call_duration = trim($row['ACTUAL_CALL_DURATION']);
                    $recipient = trim($row['RECIPIENT']);
                    $telephone = trim($row['TELEPHONE']);
                    $status = trim($row['STATUS']);
                    $decision_by = trim($row['DECISION_BY']);
                    $reason = trim($row['REASON']);
                    $log_status = $api->get_telephone_log_status($status)[0]['BADGE'];

                    if(!empty($decision_by)){
                        $decision_by_details = $api->get_data_details_one_parameter('employee profile', $decision_by);
                        $decision_by_first_name = $decision_by_details[0]['FIRST_NAME'];
                        $decision_by_last_name = $decision_by_details[0]['LAST_NAME'];
                        $decision_by_middle_name = $decision_by_details[0]['MIDDLE_NAME'];
                        $decision_by_suffix = $decision_by_details[0]['SUFFIX'];
                        $decision_by_fullname = $api->get_full_name($decision_by_first_name, $decision_by_middle_name, $decision_by_last_name, $decision_by_suffix)[0]['REVERSE_FULL_NAME'];
                    }
                    else{
                        $decision_by_fullname = '';
                    }

                    if($status == '0' && $cancel_telephone_log > 0){
                        $cancel = '<button type="button" class="btn btn-warning waves-effect waves-light cancel-telephone-log" data-logid="'. $log_id .'" title="Cancel Telephone Log">
                                    <i class="bx bx-calendar-x font-size-16 align-middle"></i>
                                </button>';
                    }
                    else{
                        $cancel = '';
                    }

                    if($status == '1' && $consumed_telephone_log > 0){
                        $consumed = '<button type="button" class="btn btn-success waves-effect waves-light consumed-telephone-log" data-logid="'. $log_id .'" title="Tag Telephone Log As Consumed">
                                    <i class="bx bx-check font-size-16 align-middle"></i>
                                </button>';
                    }
                    else{
                        $consumed = '';
                    }

                    if($status == '1' && $not_consumed_telephone_log > 0){
                        $not_consumed = '<button type="button" class="btn btn-warning waves-effect waves-light not-consumed-telephone-log" data-logid="'. $log_id .'" title="Tag Telephone Log As Not Consumed">
                                    <i class="bx bx-x font-size-16 align-middle"></i>
                                </button>';
                    }
                    else{
                        $not_consumed = '';
                    }

                    if($delete_telephone_log > 0){
                        $delete = '<button type="button" class="btn btn-danger waves-effect waves-light delete-telephone-log" data-logid="'. $log_id .'" title="Delete Telephone Log">
                                    <i class="bx bx-trash font-size-16 align-middle"></i>
                                </button>';
                    }
                    else{
                        $delete = '';
                    }

                    $response[] = array(
                        'RECIPIENT' => $recipient,
                        'TELEPHONE' => $telephone,
                        'STATUS' => $log_status,
                        'INITIAL_CALL' => $initial_call_date . '<br/>' . $initial_call_time,
                        'ACTUAL_CALL' => $actual_call_date . '<br/>' . $actual_call_time . '<br/>' . $actual_call_duration,
                        'REQUEST_DATE' => $request_date . '<br/>' . $request_time,
                        'DECISION_BY' => $decision_by_fullname,
                        'DECISION_DATE' => $decision_date . '<br/>' . $decision_time,
                        'REASON' => $reason,
                        'ACTION' => '<div class="d-flex gap-2">
                                <button type="button" class="btn btn-primary waves-effect waves-light update-telephone-log" data-logid="'. $log_id .'" title="View Details">
                                    <i class="bx bx-show font-size-16 align-middle"></i>
                                </button>
                                '. $consumed . $not_consumed . $cancel . $delete .'
                            </div>'
                    );
                }

                echo json_encode($response);
            }
            else{
                echo $sql->errorInfo()[2];
            }
        }
    }
    # -------------------------------------------------------------

    # Telephone log approval table
    else if($type == 'telephone log approval table'){
        if ($api->databaseConnection()) {
            $employee_profile_details = $api->get_data_details_one_parameter('employee profile', $username);
            $employee_id = $employee_profile_details[0]['EMPLOYEE_ID'];

            # Get role permission
            $view_all_pending_telephone_log = $api->check_role_permissions($username, 168);
            $approve_telephone_log = $api->check_role_permissions($username, 169);
            $reject_telephone_log = $api->check_role_permissions($username, 170);
            $cancel_telephone_log = $api->check_role_permissions($username, 171);

            if($view_all_pending_telephone_log > 0){
                $sql = $api->db_connection->prepare("SELECT LOG_ID, EMPLOYEE_ID, INITIAL_CALL_DATE, INITIAL_CALL_TIME, ACTUAL_CALL_DATE, ACTUAL_CALL_TIME, ACTUAL_CALL_DURATION, RECIPIENT, TELEPHONE, REQUEST_DATE, REQUEST_TIME, STATUS, DECISION_DATE, DECISION_TIME, DECISION_BY, REASON FROM tbltelephonelogsheet WHERE STATUS = '0'");
            }
            else{
                $sql = $api->db_connection->prepare("SELECT LOG_ID, EMPLOYEE_ID, INITIAL_CALL_DATE, INITIAL_CALL_TIME, ACTUAL_CALL_DATE, ACTUAL_CALL_TIME, ACTUAL_CALL_DURATION, RECIPIENT, TELEPHONE, REQUEST_DATE, REQUEST_TIME, STATUS, DECISION_DATE, DECISION_TIME, DECISION_BY, REASON FROM tbltelephonelogsheet WHERE STATUS = '0' AND (EMPLOYEE_ID IN (SELECT SUBORDINATE_ID FROM tblemployeesubordinate WHERE EMPLOYEE_ID = :employee_id) OR EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM tblemployeeauthorizer WHERE AUTHORIZER_ID = :employee_id))");
                $sql->bindParam(':employee_id', $employee_id);
            }

            if($sql->execute()){
                while($row = $sql->fetch()){
                    $log_id = trim($row['LOG_ID']);
                    $employee_id = trim($row['EMPLOYEE_ID']);
                    $initial_call_date = $api->check_date('empty', trim($row['INITIAL_CALL_DATE']), '', 'm/d/Y', '', '', '');
                    $initial_call_time = $api->check_date('empty', trim($row['INITIAL_CALL_TIME']), '', 'h:i:s a', '', '', '');
                    $actual_call_date = $api->check_date('empty', trim($row['ACTUAL_CALL_DATE']), '', 'm/d/Y', '', '', '');
                    $actual_call_time = $api->check_date('empty', trim($row['ACTUAL_CALL_TIME']), '', 'h:i:s a', '', '', '');
                    $request_date = $api->check_date('empty', trim($row['REQUEST_DATE']), '', 'm/d/Y', '', '', '');
                    $request_time = $api->check_date('empty', trim($row['REQUEST_TIME']), '', 'h:i:s a', '', '', '');
                    $actual_call_duration = trim($row['ACTUAL_CALL_DURATION']);
                    $recipient = trim($row['RECIPIENT']);
                    $telephone = trim($row['TELEPHONE']);
                    $status = trim($row['STATUS']);
                    $reason = trim($row['REASON']);
                    $log_status = $api->get_telephone_log_status($status)[0]['BADGE'];

                    $employee_profile_details = $api->get_data_details_one_parameter('employee profile', $employee_id);
                    $first_name = $employee_profile_details[0]['FIRST_NAME'];
                    $last_name = $employee_profile_details[0]['LAST_NAME'];
                    $middle_name = $employee_profile_details[0]['MIDDLE_NAME'];
                    $suffix = $employee_profile_details[0]['SUFFIX'];
                    $full_name = $api->get_full_name($first_name, $middle_name, $last_name, $suffix)[0]['REVERSE_FULL_NAME'];

                    if($approve_telephone_log > 0){
                        $approve = '<button type="button" class="btn btn-success waves-effect waves-light approve-telephone-log" data-logid="'. $log_id .'" title="Approve Telephone Log">
                                    <i class="bx bx-check font-size-16 align-middle"></i>
                                </button>';
                    }
                    else{
                        $approve = '';
                    }

                    if($reject_telephone_log > 0){
                        $reject = '<button type="button" class="btn btn-danger waves-effect waves-light reject-telephone-log" data-logid="'. $log_id .'" title="Reject Telephone Log">
                                    <i class="bx bx-x font-size-16 align-middle"></i>
                                </button>';
                    }
                    else{
                        $reject = '';
                    }

                    if($cancel_telephone_log > 0){
                        $cancel = '<button type="button" class="btn btn-warning waves-effect waves-light cancel-telephone-log" data-logid="'. $log_id .'" title="Cancel Telephone Log">
                                    <i class="bx bx-calendar-x font-size-16 align-middle"></i>
                                </button>';
                    }
                    else{
                        $cancel = '';
                    }

                    $response[] = array(
                        'FULL_NAME' => $full_name,
                        'RECIPIENT' => $recipient,
                        'TELEPHONE' => $telephone,
                        'STATUS' => $log_status,
                        'INITIAL_CALL' => $initial_call_date . '<br/>' . $initial_call_time,
                        'ACTUAL_CALL' => $actual_call_date . '<br/>' . $actual_call_time . '<br/>' . $actual_call_duration,
                        'REQUEST_DATE' => $request_date . '<br/>' . $request_time,
                        'REASON' => $reason,
                        'ACTION' => '<div class="d-flex gap-2">
                                <button type="button" class="btn btn-primary waves-effect waves-light view-telephone-log" data-logid="'. $log_id .'" title="View Details">
                                    <i class="bx bx-show font-size-16 align-middle"></i>
                                </button>
                                '. $approve . $reject . $cancel .'
                            </div>'
                    );
                }

                echo json_encode($response);
            }
            else{
                echo $sql->errorInfo()[2];
            }
        }
    }
    # -------------------------------------------------------------

    # Pending documents table
    else if($type == 'pending documents table'){
        if ($api->databaseConnection()) {
            $employee_profile_details = $api->get_data_details_one_parameter('employee profile', $username);
            $employee_id = $employee_profile_details[0]['EMPLOYEE_ID'];

            # Get role permission
            $view_all_pending_document = $api->check_role_permissions($username, 177);
            $delete_document = $api->check_role_permissions($username, 180);
            $publish_document = $api->check_role_permissions($username, 181);
            $assign_permission_to_department = $api->check_role_permissions($username, 182);
            $assign_permission_to_employee = $api->check_role_permissions($username, 183);

            if($view_all_pending_document > 0){
                $sql = $api->db_connection->prepare("SELECT DOCUMENT_ID, DOCUMENT_NAME, AUTHOR, DEPARTMENT, DOCUMENT_PATH, DOCUMENT_CATEGORY, DOCUMENT_EXTENSION, DESCRIPTION, UPLOAD_DATE, UPLOAD_TIME, PUBLISH FROM tbldocument WHERE PUBLISH = '0'");
            }
            else{
                $sql = $api->db_connection->prepare("SELECT DOCUMENT_ID, DOCUMENT_NAME, AUTHOR, DEPARTMENT, DOCUMENT_PATH, DOCUMENT_CATEGORY, DOCUMENT_EXTENSION, DESCRIPTION, UPLOAD_DATE, UPLOAD_TIME, PUBLISH FROM tbldocument WHERE PUBLISH = '0' AND (AUTHOR = :username OR DEPARTMENT IN (SELECT DEPARTMENT FROM tbldocumentauthorizer WHERE AUTHORIZER = :employee_id))");
                $sql->bindParam(':username', $username);
                $sql->bindParam(':employee_id', $employee_id);
            }

            if($sql->execute()){
                while($row = $sql->fetch()){
                    $document_id = trim($row['DOCUMENT_ID']);
                    $author = trim($row['AUTHOR']);
                    $document_name = trim($row['DOCUMENT_NAME']);
                    $document_extension = strtoupper($row['DOCUMENT_EXTENSION']);
                    $document_description = trim($row['DESCRIPTION']);
                    $document_path = trim($row['DOCUMENT_PATH']) . '.dat';
                    $publish = trim($row['PUBLISH']);
                    $document_status = $api->get_document_status($publish)[0]['BADGE'];
                    $document_category = $api->get_system_description('DOCUMENTCATEGORY', $row['DOCUMENT_CATEGORY']);
                    $upload_date = $api->check_date('empty', trim($row['UPLOAD_DATE']), '', 'm/d/Y', '', '', '');
                    $upload_time = $api->check_date('empty', trim($row['UPLOAD_TIME']), '', 'h:i:s a', '', '', '');

                    if(file_exists($document_path)){
                        $document_size = $api->get_file_size_unit($document_path);
                    }
                    else{
                        $document_size = 'File Not Found';
                    }

                    $department_details = $api->get_data_details_one_parameter('department', $row['DEPARTMENT']);
                    $department = $department_details[0]['DEPARTMENT'] ?? null;

                    $employee_profile_details = $api->get_data_details_one_parameter('employee profile', $author);
                    $first_name = $employee_profile_details[0]['FIRST_NAME'];
                    $last_name = $employee_profile_details[0]['LAST_NAME'];
                    $middle_name = $employee_profile_details[0]['MIDDLE_NAME'];
                    $suffix = $employee_profile_details[0]['SUFFIX'];
                    $full_name = $api->get_full_name($first_name, $middle_name, $last_name, $suffix)[0]['REVERSE_FULL_NAME'];

                    if($assign_permission_to_department > 0){
                        $assign_permission_department = '<a class="dropdown-item assign-document-permission-department" href="javascript: void(0);" data-documentid="'. $document_id .'">Assign Department Permission</a>';
                    }
                    else{
                        $assign_permission_department = '';
                    }

                    if($assign_permission_to_employee > 0){
                        $assign_permission_employee = '<a class="dropdown-item assign-document-permission-employee" href="javascript: void(0);" data-documentid="'. $document_id .'">Assign Employee Permission</a>';
                    }
                    else{
                        $assign_permission_employee = '';
                    }

                    if($publish_document > 0){
                        $publish = '<a class="dropdown-item publish-document" href="javascript: void(0);" data-documentid="'. $document_id .'">Publish Document</a>';
                    }
                    else{
                        $publish = '';
                    }

                    if($delete_document > 0){

                        //delete is only available for data center department
                        $get_department = $api->get_data_details_one_parameter("employee profile",$username)[0]['DEPARTMENT'];
                        if($get_department == "DEPT1"){
                            $delete = '<a class="dropdown-item delete-document" href="javascript: void(0);" data-documentid="'. $document_id .'">'. json_encode($get_department). '</a>';
                        }else{
                            $delete = '';
                        }

                        $delete = '<a class="dropdown-item delete-document" href="javascript: void(0);" data-documentid="'. $document_id .'">Delete Document</a>';
                    }
                    else{
                        $delete = '';
                    }

                    $response[] = array(
                        'DOCUMENT_ID' => $document_id,
                        'DOCUMENT_NAME' => $document_name,
                        'DESCRIPTION' => $document_description,
                        'FULL_NAME' => $full_name,
                        'DEPARTMENT' => $department,
                        'DOCUMENT_CATEGORY' => $document_category,
                        'STATUS' => $document_status,
                        'DOCUMENT_EXTENSION' => $document_extension,
                        'DOCUMENT_SIZE' => $document_size,
                        'UPLOAD_DATE' => $upload_date . ' ' . $upload_time,
                        'ACTION' => '<div class="btn-group dropstart">
                        <button type="button" class="btn btn-primary btn-sm dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">Action</button>
                                            <div class="dropdown-menu">
                                                <a class="dropdown-item view-document-file" href="javascript: void(0);" data-documentid="'. $document_id .'">View Document</a>
                                                <a class="dropdown-item update-document" href="javascript: void(0);" data-documentid="'. $document_id .'">Update Document</a>
                                                '. $assign_permission_department .'
                                                '. $assign_permission_employee .'
                                                '. $publish .'
                                                '. $delete .'
                                            </div>
                                        </div>'
                    );
                }

                echo json_encode($response);
            }
            else{
                echo $sql->errorInfo()[2];
            }
        }
    }


     # Rescinded documents table
    else if($type == 'rescinded documents table'){
        if ($api->databaseConnection()) {
            $employee_profile_details = $api->get_data_details_one_parameter('employee profile', $username);
            $employee_id = $employee_profile_details[0]['EMPLOYEE_ID'];

            # Get role permission
            $view_all_pending_document = $api->check_role_permissions($username, 177);
            $delete_document = $api->check_role_permissions($username, 180);
            $publish_document = $api->check_role_permissions($username, 181);
            $assign_permission_to_department = $api->check_role_permissions($username, 182);
            $assign_permission_to_employee = $api->check_role_permissions($username, 183);

            if($view_all_pending_document > 0){
                $sql = $api->db_connection->prepare("SELECT DOCUMENT_ID, DOCUMENT_NAME, AUTHOR, DEPARTMENT, DOCUMENT_PATH, DOCUMENT_CATEGORY, DOCUMENT_EXTENSION, DESCRIPTION, UPLOAD_DATE, UPLOAD_TIME, PUBLISH FROM tbldocument WHERE PUBLISH = '2'");
            }
            else{
                $sql = $api->db_connection->prepare("SELECT DOCUMENT_ID, DOCUMENT_NAME, AUTHOR, DEPARTMENT, DOCUMENT_PATH, DOCUMENT_CATEGORY, DOCUMENT_EXTENSION, DESCRIPTION, UPLOAD_DATE, UPLOAD_TIME, PUBLISH FROM tbldocument WHERE PUBLISH = '2' AND (AUTHOR = :username OR DEPARTMENT IN (SELECT DEPARTMENT FROM tbldocumentauthorizer WHERE AUTHORIZER = :employee_id))");
                $sql->bindParam(':username', $username);
                $sql->bindParam(':employee_id', $employee_id);
            }

            if($sql->execute()){
                while($row = $sql->fetch()){
                    $document_id = trim($row['DOCUMENT_ID']);
                    $author = trim($row['AUTHOR']);
                    $document_name = trim($row['DOCUMENT_NAME']);
                    $document_extension = strtoupper($row['DOCUMENT_EXTENSION']);
                    $document_description = trim($row['DESCRIPTION']);
                    $document_path = trim($row['DOCUMENT_PATH']) . '.dat';
                    $publish = trim($row['PUBLISH']);
                    $document_status = $api->get_document_status($publish)[0]['BADGE'];
                    $document_category = $api->get_system_description('DOCUMENTCATEGORY', $row['DOCUMENT_CATEGORY']);
                    $upload_date = $api->check_date('empty', trim($row['UPLOAD_DATE']), '', 'm/d/Y', '', '', '');
                    $upload_time = $api->check_date('empty', trim($row['UPLOAD_TIME']), '', 'h:i:s a', '', '', '');

                    if(file_exists($document_path)){
                        $document_size = $api->get_file_size_unit($document_path);
                    }
                    else{
                        $document_size = 'File Not Found';
                    }

                    $department_details = $api->get_data_details_one_parameter('department', $row['DEPARTMENT']);
                    $department = $department_details[0]['DEPARTMENT'] ?? null;

                    $employee_profile_details = $api->get_data_details_one_parameter('employee profile', $author);
                    $first_name = $employee_profile_details[0]['FIRST_NAME'];
                    $last_name = $employee_profile_details[0]['LAST_NAME'];
                    $middle_name = $employee_profile_details[0]['MIDDLE_NAME'];
                    $suffix = $employee_profile_details[0]['SUFFIX'];
                    $full_name = $api->get_full_name($first_name, $middle_name, $last_name, $suffix)[0]['REVERSE_FULL_NAME'];

                    if($assign_permission_to_department > 0){
                        $assign_permission_department = '<a class="dropdown-item assign-document-permission-department" href="javascript: void(0);" data-documentid="'. $document_id .'">Assign Department Permission</a>';
                    }
                    else{
                        $assign_permission_department = '';
                    }

                    if($assign_permission_to_employee > 0){
                        $assign_permission_employee = '<a class="dropdown-item assign-document-permission-employee" href="javascript: void(0);" data-documentid="'. $document_id .'">Assign Employee Permission</a>';
                    }
                    else{
                        $assign_permission_employee = '';
                    }

                    if($publish_document > 0){
                        $publish = '<a class="dropdown-item publish-document" href="javascript: void(0);" data-documentid="'. $document_id .'">Publish Document</a>';
                    }
                    else{
                        $publish = '';
                    }

                    if($delete_document > 0){

                        //delete is only available for data center department
                        $get_department = $api->get_data_details_one_parameter("employee profile",$username)[0]['DEPARTMENT'];
                        if($get_department == "DEPT1"){
                            $delete = '<a class="dropdown-item delete-document" href="javascript: void(0);" data-documentid="'. $document_id .'">'. json_encode($get_department). '</a>';
                        }else{
                            $delete = '';
                        }

                        $delete = '<a class="dropdown-item delete-document" href="javascript: void(0);" data-documentid="'. $document_id .'">Delete Document</a>';
                    }
                    else{
                        $delete = '';
                    }

                    $response[] = array(
                        'DOCUMENT_ID' => $document_id,
                        'DOCUMENT_NAME' => $document_name,
                        'DESCRIPTION' => $document_description,
                        'FULL_NAME' => $full_name,
                        'DEPARTMENT' => $department,
                        'DOCUMENT_CATEGORY' => $document_category,
                        'STATUS' => $document_status,
                        'DOCUMENT_EXTENSION' => $document_extension,
                        'DOCUMENT_SIZE' => $document_size,
                        'UPLOAD_DATE' => $upload_date . ' ' . $upload_time,
                        'ACTION' => '<div class="btn-group dropstart">
                        <button type="button" class="btn btn-primary btn-sm dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">Action</button>
                                            <div class="dropdown-menu">
                                                <a class="dropdown-item view-document-file" href="javascript: void(0);" data-documentid="'. $document_id .'">View Document</a>
                                                <a class="dropdown-item update-document" href="javascript: void(0);" data-documentid="'. $document_id .'">Update Document</a>
                                                '. $assign_permission_department .'
                                                '. $assign_permission_employee .'
                                                '. $publish .'
                                                '. $delete .'
                                            </div>
                                        </div>'
                    );
                }

                echo json_encode($response);
            }
            else{
                echo $sql->errorInfo()[2];
            }
        }
    }

    # Publish CREDIT documents table
   else if($type == 'publish credit documents table'){
        if(isset($_POST['parameter1']) && isset($_POST['parameter2']) && isset($_POST['parameter3'])){
            if ($api->databaseConnection()) {
                $parameter1 = $_POST['parameter1'];
                $parameter2 = $_POST['parameter2'];
                $parameter3 = $_POST['parameter3'];

                $employee_profile_details = $api->get_data_details_one_parameter('employee profile', $username);
                $employee_id = $employee_profile_details[0]['EMPLOYEE_ID'];
                $employee_department = $employee_profile_details[0]['DEPARTMENT'];

                $view_all_documents = $api->check_role_permissions($username, 185);
                $publish_document = $api->check_role_permissions($username, 186);
                $unpublish_document = $api->check_role_permissions($username, 187);

                $query = 'SELECT DOCUMENT_ID, DOCUMENT_NAME, AUTHOR, DEPARTMENT, DOCUMENT_PATH, DOCUMENT_CATEGORY, DOCUMENT_EXTENSION, DESCRIPTION, UPLOAD_DATE, UPLOAD_TIME, PUBLISH, PUBLISH_BY, PUBLISH_DATE, PUBLISH_TIME FROM tbldocument';

                if(!empty($parameter1) && !empty($parameter2) && !empty($parameter3)){
                    if($parameter1 == 'filter'){
                        if($parameter2 == 'author'){
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " WHERE AUTHOR = :parameter3 AND (DOCUMENT_CATEGORY = 'CREDITPOLICY' OR DOCUMENT_CATEGORY = 'CREDITPROCEDURE')  ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE AUTHOR = :parameter3 AND (DOCUMENT_CATEGORY = 'CREDITPOLICY' OR DOCUMENT_CATEGORY = 'CREDITPROCEDURE')  AND PUBLISH = '1' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }
                        else {
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " WHERE DEPARTMENT = :parameter3 AND (DOCUMENT_CATEGORY = 'CREDITPOLICY' OR DOCUMENT_CATEGORY = 'CREDITPROCEDURE')  ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE DEPARTMENT = :parameter3 AND PUBLISH = '1' AND (DOCUMENT_CATEGORY = 'CREDITPOLICY' OR DOCUMENT_CATEGORY = 'CREDITPROCEDURE')  AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }

                        $sql->bindParam(':parameter3', $parameter3);
                    }
                    else{
                        if($parameter2 == 'author'){
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " WHERE (AUTHOR IN (SELECT EMPLOYEE_ID FROM tblemployeeprofile WHERE FIRST_NAME LIKE CONCAT('%', :parameter3, '%') OR LAST_NAME LIKE CONCAT('%', :parameter3, '%') OR MIDDLE_NAME LIKE CONCAT('%', :parameter3, '%')) OR AUTHOR IN (SELECT USERNAME FROM tblemployeeprofile WHERE FIRST_NAME LIKE CONCAT('%', :parameter3, '%') OR LAST_NAME LIKE CONCAT('%', :parameter3, '%') OR MIDDLE_NAME LIKE CONCAT('%', :parameter3, '%'))) AND (DOCUMENT_CATEGORY = 'CREDITPOLICY' OR DOCUMENT_CATEGORY = 'CREDITPROCEDURE')  ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE (AUTHOR IN (SELECT EMPLOYEE_ID FROM tblemployeeprofile WHERE FIRST_NAME LIKE CONCAT('%', :parameter3, '%') OR LAST_NAME LIKE CONCAT('%', :parameter3, '%') OR MIDDLE_NAME LIKE CONCAT('%', :parameter3, '%')) OR AUTHOR IN (SELECT USERNAME FROM tblemployeeprofile WHERE FIRST_NAME LIKE CONCAT('%', :parameter3, '%') OR LAST_NAME LIKE CONCAT('%', :parameter3, '%') OR MIDDLE_NAME LIKE CONCAT('%', :parameter3, '%'))) AND (DOCUMENT_CATEGORY = 'CREDITPOLICY' OR DOCUMENT_CATEGORY = 'CREDITPROCEDURE')  AND PUBLISH = '1' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }
                        else if($parameter2 == 'department'){
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " WHERE DEPARTMENT IN (SELECT DEPARTMENT_ID FROM tbldepartment WHERE DEPARTMENT LIKE CONCAT('%', :parameter3, '%')) AND (DOCUMENT_CATEGORY = 'CREDITPOLICY' OR DOCUMENT_CATEGORY = 'CREDITPROCEDURE')  ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE DEPARTMENT IN (SELECT DEPARTMENT_ID FROM tbldepartment WHERE DEPARTMENT LIKE CONCAT('%', :parameter3, '%')) AND (DOCUMENT_CATEGORY = 'CREDITPOLICY' OR DOCUMENT_CATEGORY = 'CREDITPROCEDURE')  AND PUBLISH = '1' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }
                        else if($parameter2 == 'description'){
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " WHERE DESCRIPTION LIKE CONCAT('%', :parameter3, '%') AND (DOCUMENT_CATEGORY = 'CREDITPOLICY' OR DOCUMENT_CATEGORY = 'CREDITPROCEDURE')  ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE DESCRIPTION LIKE CONCAT('%', :parameter3, '%') AND (DOCUMENT_CATEGORY = 'CREDITPOLICY' OR DOCUMENT_CATEGORY = 'CREDITPROCEDURE')  AND PUBLISH = '1' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }
                        else if($parameter2 == 'documentid'){
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " WHERE DOCUMENT_ID LIKE CONCAT('%', :parameter3, '%') AND (DOCUMENT_CATEGORY = 'CREDITPOLICY' OR DOCUMENT_CATEGORY = 'CREDITPROCEDURE')  ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE DOCUMENT_ID LIKE CONCAT('%', :parameter3, '%') AND (DOCUMENT_CATEGORY = 'CREDITPOLICY' OR DOCUMENT_CATEGORY = 'CREDITPROCEDURE')  AND PUBLISH = '1' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }

                          else if($parameter2 == 'tags'){
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " WHERE tbldocument.DOCUMENT_ID IN (SELECT dt.DOCUMENT_ID FROM document_tags dt JOIN tags t ON dt.TAG_ID = t.TAG_ID WHERE t.TAG_NAME LIKE CONCAT('%', :parameter3, '%')) AND (DOCUMENT_CATEGORY = 'CREDITPOLICY' OR DOCUMENT_CATEGORY = 'CREDITPROCEDURE')  ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE tbldocument.DOCUMENT_ID IN (SELECT dt.DOCUMENT_ID FROM document_tags dt JOIN tags t ON dt.TAG_ID = t.TAG_ID WHERE t.TAG_NAME LIKE CONCAT('%', :parameter3, '%')) AND (DOCUMENT_CATEGORY = 'CREDITPOLICY' OR DOCUMENT_CATEGORY = 'CREDITPROCEDURE')   AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }
                        else{
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " WHERE DOCUMENT_NAME LIKE CONCAT('%', :parameter3, '%') AND (DOCUMENT_CATEGORY = 'CREDITPOLICY' OR DOCUMENT_CATEGORY = 'CREDITPROCEDURE')  ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE DOCUMENT_NAME LIKE CONCAT('%', :parameter3, '%') AND (DOCUMENT_CATEGORY = 'CREDITPOLICY' OR DOCUMENT_CATEGORY = 'CREDITPROCEDURE')  AND PUBLISH = '1' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }

                        $sql->bindParam(':parameter3', $parameter3);
                    }
                }
                else{
                    if($view_all_documents > 0){
                        $sql = $api->db_connection->prepare($query . " WHERE (DOCUMENT_CATEGORY = 'CREDITPOLICY' OR DOCUMENT_CATEGORY = 'CREDITPROCEDURE') AND PUBLISH = '1'  ORDER BY DOCUMENT_ID DESC LIMIT 100");
                    }
                    else{
                        $sql = $api->db_connection->prepare($query . " WHERE PUBLISH = '1' AND (DOCUMENT_CATEGORY = 'CREDITPOLICY' OR DOCUMENT_CATEGORY = 'CREDITPROCEDURE')  AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC LIMIT 100");
                        $sql->bindParam(':employee_id', $employee_id);
                        $sql->bindParam(':employee_department', $employee_department);
                    }
                }

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $document_id = trim($row['DOCUMENT_ID']);
                        $document_department = trim($row['DEPARTMENT']);

                        $check_authorizer = $api->check_authorizer($document_department, $employee_id);

                        $author = trim($row['AUTHOR']);
                        $document_name = trim($row['DOCUMENT_NAME']);
                        $document_extension = strtoupper($row['DOCUMENT_EXTENSION']);
                        $document_description = trim($row['DESCRIPTION']);
                        $publish_by = trim($row['PUBLISH_BY']);
                        $publish = trim($row['PUBLISH']);
                        $document_path = trim($row['DOCUMENT_PATH']) . '.dat';
                        $document_status = $api->get_document_status($publish)[0]['BADGE'];
                        $document_category = $api->get_system_description('DOCUMENTCATEGORY', $row['DOCUMENT_CATEGORY']);
                        $upload_date = $api->check_date('empty', trim($row['UPLOAD_DATE']), '', 'm/d/Y', '', '', '');
                        $upload_time = $api->check_date('empty', trim($row['UPLOAD_TIME']), '', 'h:i:s a', '', '', '');
                        $publish_date = $api->check_date('empty', trim($row['PUBLISH_DATE']), '', 'm/d/Y', '', '', '');
                        $publish_time = $api->check_date('empty', trim($row['PUBLISH_TIME']), '', 'h:i:s a', '', '', '');

                        $department_details = $api->get_data_details_one_parameter('department', $document_department);
                        $department = $department_details[0]['DEPARTMENT'] ?? null;

                        $employee_profile_details = $api->get_data_details_one_parameter('employee profile', $author);
                        $first_name = $employee_profile_details[0]['FIRST_NAME'];
                        $last_name = $employee_profile_details[0]['LAST_NAME'];
                        $middle_name = $employee_profile_details[0]['MIDDLE_NAME'];
                        $suffix = $employee_profile_details[0]['SUFFIX'];
                        $full_name = $api->get_full_name($first_name, $middle_name, $last_name, $suffix)[0]['REVERSE_FULL_NAME'];

                        if($publish == '1'){
                                $publish_by_details = $api->get_data_details_one_parameter('employee profile', $publish_by);
                                $publish_by_first_name = $publish_by_details[0]['FIRST_NAME'];
                                $publish_by_last_name = $publish_by_details[0]['LAST_NAME'];
                                $publish_by_middle_name = $publish_by_details[0]['MIDDLE_NAME'];
                                $publish_by_suffix = $publish_by_details[0]['SUFFIX'];
                                $publish_by_fullname = $api->get_full_name($publish_by_first_name, $publish_by_middle_name, $publish_by_last_name, $publish_by_suffix)[0]['REVERSE_FULL_NAME'];
                        }
                        else{
                            $publish_by_fullname = '';
                        }

                        if(file_exists($document_path)){
                            $document_size = $api->get_file_size_unit($document_path);
                        }
                        else{
                            $document_size = 'File Not Found';
                        }

                        if($view_all_documents > 0){
                            $delete = '<a class="dropdown-item delete-document" href="javascript: void(0);" data-documentid="'. $document_id .'">Delete Document</a>';
                            $update = '<a class="dropdown-item update-document" href="javascript: void(0);" data-documentid="'. $document_id .'">Update Document</a>';
                            $assign_permission = '<a class="dropdown-item assign-document-permission-department" href="javascript: void(0);" data-documentid="'. $document_id .'">Assign Department Permission</a>
                            <a class="dropdown-item assign-document-permission-employee" href="javascript: void(0);" data-documentid="'. $document_id .'">Assign Employee Permission</a>';
                        }
                        else{
                            $check_update = $api->check_document_permissions('U', $document_id, $employee_id, $employee_department);
                            $check_delete = $api->check_document_permissions('D', $document_id, $employee_id, $employee_department);
                            $check_set_permission = $api->check_document_permissions('S', $document_id, $employee_id, $employee_department);

                            if($check_delete > 0){
                                //delete is only available for data center department
                                $get_department = $api->get_data_details_one_parameter("employee profile",$username)[0]['DEPARTMENT'];
                                if($get_department == "DEPT1"){
                                    $delete = '<a class="dropdown-item delete-document" href="javascript: void(0);" data-documentid="'. $document_id .'">Delete Document</a>';
                                }else{
                                    $delete = '';
                                }



                            }
                            else{
                                $delete = '';
                            }

                            if($check_set_permission > 0){
                                $assign_permission = '<a class="dropdown-item assign-document-permission-department" href="javascript: void(0);" data-documentid="'. $document_id .'">Assign Department Permission</a>
                                <a class="dropdown-item assign-document-permission-employee" href="javascript: void(0);" data-documentid="'. $document_id .'">Assign Employee Permission</a>';
                            }
                            else{
                                $assign_permission = '';
                            }

                            if($check_update > 0){
                                $update = '<a class="dropdown-item update-document" href="javascript: void(0);" data-documentid="'. $document_id .'">Update Document</a>';
                            }
                            else{
                                $update = '';
                            }
                        }

                        if(($document_extension == 'pdf' || $document_extension == 'PDF')){
                            $view = '<a class="dropdown-item view-document-file" href="javascript: void(0);" data-documentid="'. $document_id .'">View Document</a>';
                        }
                        else{
                            $view = '';
                        }

                        if($check_authorizer > 0){
                            if($publish == '0'){
                                if($publish_document > 0 || $view_all_documents > 0){
                                    $publish_unpublish = '<button type="button" class="btn btn-success waves-effect waves-light publish-document" data-documentid="'. $document_id .'" title="Publish Document">
                                                    <i class="bx bx-check font-size-16 align-middle"></i>
                                                </button>';
                                }
                                else{
                                    $publish_unpublish = '';
                                }
                            }
                            else{
                                if($unpublish_document > 0 || $view_all_documents > 0){
                                    $publish_unpublish = '<button type="button" class="btn btn-danger waves-effect waves-light unpublish-document" data-documentid="'. $document_id .'" title="Unpublish Document">
                                                    <i class="bx bx-x font-size-16 align-middle"></i>
                                                </button>';
                                }
                                else{
                                    $publish_unpublish = '';
                                }
                            }
                        }

                        $response[] = array(
                            'DOCUMENT_ID' => $document_id,
                            'DOCUMENT_NAME' => $document_name,
                            'DESCRIPTION' => $document_description,
                            'FULL_NAME' => $full_name,
                            'DEPARTMENT' => $department,
                            'DOCUMENT_CATEGORY' => $document_category,
                            'STATUS' => $document_status,
                            'DOCUMENT_EXTENSION' => $document_extension,
                            'DOCUMENT_SIZE' => $document_size,
                            'UPLOAD_DATE' => $upload_date . ' ' . $upload_time,
                            'PUBLISH_BY' => $publish_by_fullname,
                            'PUBLISH_DATE' => $publish_date . ' ' . $publish_time,
                            'ACTION' => '<div class="btn-group dropstart">
                                            <button type="button" class="btn btn-primary btn-sm dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">Action</button>
                                            <div class="dropdown-menu">
                                                '. $view .'
                                                '. $update .'
                                                '. $assign_permission .'
                                                '. $delete .'
                                                <a class="dropdown-item download-document" href="javascript: void(0);" data-documentid="'. $document_id .'">Protect & Download Document</a>
                                            </div>
                                        </div>'
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo()[2];
                }
            }
        }
    }
     # Publish admin documents table
     else if($type == 'publish admin documents table'){
        if(isset($_POST['parameter1']) && isset($_POST['parameter2']) && isset($_POST['parameter3'])){
            if ($api->databaseConnection()) {
                $parameter1 = $_POST['parameter1'];
                $parameter2 = $_POST['parameter2'];
                $parameter3 = $_POST['parameter3'];

                $employee_profile_details = $api->get_data_details_one_parameter('employee profile', $username);
                $employee_id = $employee_profile_details[0]['EMPLOYEE_ID'];
                $employee_department = $employee_profile_details[0]['DEPARTMENT'];

                $view_all_documents = $api->check_role_permissions($username, 185);
                $publish_document = $api->check_role_permissions($username, 186);
                $unpublish_document = $api->check_role_permissions($username, 187);

                $query = 'SELECT DOCUMENT_ID, DOCUMENT_NAME, AUTHOR, DEPARTMENT, DOCUMENT_PATH, DOCUMENT_CATEGORY, DOCUMENT_EXTENSION, DESCRIPTION, UPLOAD_DATE, UPLOAD_TIME, PUBLISH, PUBLISH_BY, PUBLISH_DATE, PUBLISH_TIME FROM tbldocument';

                if(!empty($parameter1) && !empty($parameter2) && !empty($parameter3)){
                    if($parameter1 == 'filter'){
                        if($parameter2 == 'author'){
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " WHERE AUTHOR = :parameter3 AND (DOCUMENT_CATEGORY = 'ADMINPOLICY' OR DOCUMENT_CATEGORY = 'ADMINPROCEDURE') ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE AUTHOR = :parameter3 AND (DOCUMENT_CATEGORY = 'ADMINPOLICY' OR DOCUMENT_CATEGORY = 'ADMINPROCEDURE') AND PUBLISH = '1' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }
                        else {
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " WHERE DEPARTMENT = :parameter3 AND (DOCUMENT_CATEGORY = 'ADMINPOLICY' OR DOCUMENT_CATEGORY = 'ADMINPROCEDURE') ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE DEPARTMENT = :parameter3 AND PUBLISH = '1' AND (DOCUMENT_CATEGORY = 'ADMINPOLICY' OR DOCUMENT_CATEGORY = 'ADMINPROCEDURE') AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }

                        $sql->bindParam(':parameter3', $parameter3);
                    }
                    else{
                        if($parameter2 == 'author'){
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " WHERE (AUTHOR IN (SELECT EMPLOYEE_ID FROM tblemployeeprofile WHERE FIRST_NAME LIKE CONCAT('%', :parameter3, '%') OR LAST_NAME LIKE CONCAT('%', :parameter3, '%') OR MIDDLE_NAME LIKE CONCAT('%', :parameter3, '%')) OR AUTHOR IN (SELECT USERNAME FROM tblemployeeprofile WHERE FIRST_NAME LIKE CONCAT('%', :parameter3, '%') OR LAST_NAME LIKE CONCAT('%', :parameter3, '%') OR MIDDLE_NAME LIKE CONCAT('%', :parameter3, '%'))) AND (DOCUMENT_CATEGORY = 'ADMINPOLICY' OR DOCUMENT_CATEGORY = 'ADMINPROCEDURE') ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE (AUTHOR IN (SELECT EMPLOYEE_ID FROM tblemployeeprofile WHERE FIRST_NAME LIKE CONCAT('%', :parameter3, '%') OR LAST_NAME LIKE CONCAT('%', :parameter3, '%') OR MIDDLE_NAME LIKE CONCAT('%', :parameter3, '%')) OR AUTHOR IN (SELECT USERNAME FROM tblemployeeprofile WHERE FIRST_NAME LIKE CONCAT('%', :parameter3, '%') OR LAST_NAME LIKE CONCAT('%', :parameter3, '%') OR MIDDLE_NAME LIKE CONCAT('%', :parameter3, '%'))) AND (DOCUMENT_CATEGORY = 'ADMINPOLICY' OR DOCUMENT_CATEGORY = 'ADMINPROCEDURE') AND PUBLISH = '1' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }
                        else if($parameter2 == 'department'){
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " WHERE DEPARTMENT IN (SELECT DEPARTMENT_ID FROM tbldepartment WHERE DEPARTMENT LIKE CONCAT('%', :parameter3, '%')) AND (DOCUMENT_CATEGORY = 'ADMINPOLICY' OR DOCUMENT_CATEGORY = 'ADMINPROCEDURE') ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE DEPARTMENT IN (SELECT DEPARTMENT_ID FROM tbldepartment WHERE DEPARTMENT LIKE CONCAT('%', :parameter3, '%')) AND (DOCUMENT_CATEGORY = 'ADMINPOLICY' OR DOCUMENT_CATEGORY = 'ADMINPROCEDURE') AND PUBLISH = '1' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }
                        else if($parameter2 == 'description'){
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " WHERE DESCRIPTION LIKE CONCAT('%', :parameter3, '%') AND (DOCUMENT_CATEGORY = 'ADMINPOLICY' OR DOCUMENT_CATEGORY = 'ADMINPROCEDURE') ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE DESCRIPTION LIKE CONCAT('%', :parameter3, '%') AND (DOCUMENT_CATEGORY = 'ADMINPOLICY' OR DOCUMENT_CATEGORY = 'ADMINPROCEDURE') AND PUBLISH = '1' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }
                        else if($parameter2 == 'documentid'){
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " WHERE DOCUMENT_ID LIKE CONCAT('%', :parameter3, '%') AND (DOCUMENT_CATEGORY = 'ADMINPOLICY' OR DOCUMENT_CATEGORY = 'ADMINPROCEDURE') ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE DOCUMENT_ID LIKE CONCAT('%', :parameter3, '%') AND (DOCUMENT_CATEGORY = 'ADMINPOLICY' OR DOCUMENT_CATEGORY = 'ADMINPROCEDURE') AND PUBLISH = '1' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }

                          else if($parameter2 == 'tags'){
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " WHERE tbldocument.DOCUMENT_ID IN (SELECT dt.DOCUMENT_ID FROM document_tags dt JOIN tags t ON dt.TAG_ID = t.TAG_ID WHERE t.TAG_NAME LIKE CONCAT('%', :parameter3, '%')) AND (DOCUMENT_CATEGORY = 'ADMINPOLICY' OR DOCUMENT_CATEGORY = 'ADMINPROCEDURE') ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE tbldocument.DOCUMENT_ID IN (SELECT dt.DOCUMENT_ID FROM document_tags dt JOIN tags t ON dt.TAG_ID = t.TAG_ID WHERE t.TAG_NAME LIKE CONCAT('%', :parameter3, '%')) AND (DOCUMENT_CATEGORY = 'ADMINPOLICY' OR DOCUMENT_CATEGORY = 'ADMINPROCEDURE')  AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }
                        else{
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " WHERE DOCUMENT_NAME LIKE CONCAT('%', :parameter3, '%') AND (DOCUMENT_CATEGORY = 'ADMINPOLICY' OR DOCUMENT_CATEGORY = 'ADMINPROCEDURE')  ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE DOCUMENT_NAME LIKE CONCAT('%', :parameter3, '%') AND (DOCUMENT_CATEGORY = 'ADMINPOLICY' OR DOCUMENT_CATEGORY = 'ADMINPROCEDURE') AND PUBLISH = '1' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }

                        $sql->bindParam(':parameter3', $parameter3);
                    }
                }
                else{
                    if($view_all_documents > 0){
                        $sql = $api->db_connection->prepare($query . " WHERE (DOCUMENT_CATEGORY = 'ADMINPOLICY' OR DOCUMENT_CATEGORY = 'ADMINPROCEDURE') AND PUBLISH = '1' ORDER BY DOCUMENT_ID DESC LIMIT 100");
                    }
                    else{
                        $sql = $api->db_connection->prepare($query . " WHERE PUBLISH = '1' AND (DOCUMENT_CATEGORY = 'ADMINPOLICY' OR DOCUMENT_CATEGORY = 'ADMINPROCEDURE') AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC LIMIT 100");
                        $sql->bindParam(':employee_id', $employee_id);
                        $sql->bindParam(':employee_department', $employee_department);
                    }
                }

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $document_id = trim($row['DOCUMENT_ID']);
                        $document_department = trim($row['DEPARTMENT']);

                        $check_authorizer = $api->check_authorizer($document_department, $employee_id);

                        $author = trim($row['AUTHOR']);
                        $document_name = trim($row['DOCUMENT_NAME']);
                        $document_extension = strtoupper($row['DOCUMENT_EXTENSION']);
                        $document_description = trim($row['DESCRIPTION']);
                        $publish_by = trim($row['PUBLISH_BY']);
                        $publish = trim($row['PUBLISH']);
                        $document_path = trim($row['DOCUMENT_PATH']) . '.dat';
                        $document_status = $api->get_document_status($publish)[0]['BADGE'];
                        $document_category = $api->get_system_description('DOCUMENTCATEGORY', $row['DOCUMENT_CATEGORY']);
                        $upload_date = $api->check_date('empty', trim($row['UPLOAD_DATE']), '', 'm/d/Y', '', '', '');
                        $upload_time = $api->check_date('empty', trim($row['UPLOAD_TIME']), '', 'h:i:s a', '', '', '');
                        $publish_date = $api->check_date('empty', trim($row['PUBLISH_DATE']), '', 'm/d/Y', '', '', '');
                        $publish_time = $api->check_date('empty', trim($row['PUBLISH_TIME']), '', 'h:i:s a', '', '', '');

                        $department_details = $api->get_data_details_one_parameter('department', $document_department);
                        $department = $department_details[0]['DEPARTMENT'] ?? null;

                        $employee_profile_details = $api->get_data_details_one_parameter('employee profile', $author);
                        $first_name = $employee_profile_details[0]['FIRST_NAME'];
                        $last_name = $employee_profile_details[0]['LAST_NAME'];
                        $middle_name = $employee_profile_details[0]['MIDDLE_NAME'];
                        $suffix = $employee_profile_details[0]['SUFFIX'];
                        $full_name = $api->get_full_name($first_name, $middle_name, $last_name, $suffix)[0]['REVERSE_FULL_NAME'];

                        if($publish == '1'){
                                $publish_by_details = $api->get_data_details_one_parameter('employee profile', $publish_by);
                                $publish_by_first_name = $publish_by_details[0]['FIRST_NAME'];
                                $publish_by_last_name = $publish_by_details[0]['LAST_NAME'];
                                $publish_by_middle_name = $publish_by_details[0]['MIDDLE_NAME'];
                                $publish_by_suffix = $publish_by_details[0]['SUFFIX'];
                                $publish_by_fullname = $api->get_full_name($publish_by_first_name, $publish_by_middle_name, $publish_by_last_name, $publish_by_suffix)[0]['REVERSE_FULL_NAME'];
                        }
                        else{
                            $publish_by_fullname = '';
                        }

                        if(file_exists($document_path)){
                            $document_size = $api->get_file_size_unit($document_path);
                        }
                        else{
                            $document_size = 'File Not Found';
                        }

                        if($view_all_documents > 0){
                            $delete = '<a class="dropdown-item delete-document" href="javascript: void(0);" data-documentid="'. $document_id .'">Delete Document</a>';
                            $update = '<a class="dropdown-item update-document" href="javascript: void(0);" data-documentid="'. $document_id .'">Update Document</a>';
                            $assign_permission = '<a class="dropdown-item assign-document-permission-department" href="javascript: void(0);" data-documentid="'. $document_id .'">Assign Department Permission</a>
                            <a class="dropdown-item assign-document-permission-employee" href="javascript: void(0);" data-documentid="'. $document_id .'">Assign Employee Permission</a>';
                        }
                        else{
                            $check_update = $api->check_document_permissions('U', $document_id, $employee_id, $employee_department);
                            $check_delete = $api->check_document_permissions('D', $document_id, $employee_id, $employee_department);
                            $check_set_permission = $api->check_document_permissions('S', $document_id, $employee_id, $employee_department);

                            if($check_delete > 0){
                                //delete is only available for data center department
                                $get_department = $api->get_data_details_one_parameter("employee profile",$username)[0]['DEPARTMENT'];
                                if($get_department == "DEPT1"){
                                    $delete = '<a class="dropdown-item delete-document" href="javascript: void(0);" data-documentid="'. $document_id .'">Delete Document</a>';
                                }else{
                                    $delete = '';
                                }



                            }
                            else{
                                $delete = '';
                            }

                            if($check_set_permission > 0){
                                $assign_permission = '<a class="dropdown-item assign-document-permission-department" href="javascript: void(0);" data-documentid="'. $document_id .'">Assign Department Permission</a>
                                <a class="dropdown-item assign-document-permission-employee" href="javascript: void(0);" data-documentid="'. $document_id .'">Assign Employee Permission</a>';
                            }
                            else{
                                $assign_permission = '';
                            }

                            if($check_update > 0){
                                $update = '<a class="dropdown-item update-document" href="javascript: void(0);" data-documentid="'. $document_id .'">Update Document</a>';
                            }
                            else{
                                $update = '';
                            }
                        }

                        if(($document_extension == 'pdf' || $document_extension == 'PDF')){
                            $view = '<a class="dropdown-item view-document-file" href="javascript: void(0);" data-documentid="'. $document_id .'">View Document</a>';
                        }
                        else{
                            $view = '';
                        }

                        if($check_authorizer > 0){
                            if($publish == '0'){
                                if($publish_document > 0 || $view_all_documents > 0){
                                    $publish_unpublish = '<button type="button" class="btn btn-success waves-effect waves-light publish-document" data-documentid="'. $document_id .'" title="Publish Document">
                                                    <i class="bx bx-check font-size-16 align-middle"></i>
                                                </button>';
                                }
                                else{
                                    $publish_unpublish = '';
                                }
                            }
                            else{
                                if($unpublish_document > 0 || $view_all_documents > 0){
                                    $publish_unpublish = '<button type="button" class="btn btn-danger waves-effect waves-light unpublish-document" data-documentid="'. $document_id .'" title="Unpublish Document">
                                                    <i class="bx bx-x font-size-16 align-middle"></i>
                                                </button>';
                                }
                                else{
                                    $publish_unpublish = '';
                                }
                            }
                        }

                        $response[] = array(
                            'DOCUMENT_ID' => $document_id,
                            'DOCUMENT_NAME' => $document_name,
                            'DESCRIPTION' => $document_description,
                            'FULL_NAME' => $full_name,
                            'DEPARTMENT' => $department,
                            'DOCUMENT_CATEGORY' => $document_category,
                            'STATUS' => $document_status,
                            'DOCUMENT_EXTENSION' => $document_extension,
                            'DOCUMENT_SIZE' => $document_size,
                            'UPLOAD_DATE' => $upload_date . ' ' . $upload_time,
                            'PUBLISH_BY' => $publish_by_fullname,
                            'PUBLISH_DATE' => $publish_date . ' ' . $publish_time,
                            'ACTION' => '<div class="btn-group dropstart">
                                            <button type="button" class="btn btn-primary btn-sm dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">Action</button>
                                            <div class="dropdown-menu">
                                                '. $view .'
                                                '. $update .'
                                                '. $assign_permission .'
                                                '. $delete .'
                                                <a class="dropdown-item download-document" href="javascript: void(0);" data-documentid="'. $document_id .'">Protect & Download Document</a>
                                            </div>
                                        </div>'
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo()[2];
                }
            }
        }
    }
    # -------------------------------------------------------------
else if($type == 'publish documents table'){
        if(isset($_POST['parameter1']) && isset($_POST['parameter2']) && isset($_POST['parameter3'])){
            if ($api->databaseConnection()) {
                $parameter1 = $_POST['parameter1'];
                $parameter2 = $_POST['parameter2'];
                $parameter3 = $_POST['parameter3'];



                $employee_profile_details = $api->get_data_details_one_parameter('employee profile', $username);
                $employee_id = $employee_profile_details[0]['EMPLOYEE_ID'];
                $employee_department = $employee_profile_details[0]['DEPARTMENT'];

                $view_all_documents = $api->check_role_permissions($username, 185);
                $publish_document = $api->check_role_permissions($username, 186);
                $unpublish_document = $api->check_role_permissions($username, 187);

                $query = 'SELECT DOCUMENT_ID, DOCUMENT_NAME, AUTHOR, DEPARTMENT, DOCUMENT_PATH, DOCUMENT_CATEGORY, DOCUMENT_EXTENSION, DESCRIPTION, UPLOAD_DATE, UPLOAD_TIME, PUBLISH, PUBLISH_BY, PUBLISH_DATE, PUBLISH_TIME FROM tbldocument WHERE PUBLISH = "1"';

                if(!empty($parameter1) && !empty($parameter2) && !empty($parameter3)){
                    if($parameter1 == 'filter'){
                        if($parameter2 == 'author'){
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " AND AUTHOR = :parameter3 ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " AND AUTHOR = :parameter3 AND PUBLISH = '1' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }
                        else if($parameter2 == 'department'){
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " AND DEPARTMENT = :parameter3 ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " AND DEPARTMENT = :parameter3 AND PUBLISH = '1' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }
                        else{
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " AND DOCUMENT_CATEGORY = :parameter3 ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " AND DOCUMENT_CATEGORY = :parameter3 AND PUBLISH = '1' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }

                        $sql->bindParam(':parameter3', $parameter3);
                    }
                    else{
                        if($parameter2 == 'author'){
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " AND (AUTHOR IN (SELECT EMPLOYEE_ID FROM tblemployeeprofile WHERE FIRST_NAME LIKE CONCAT('%', :parameter3, '%') OR LAST_NAME LIKE CONCAT('%', :parameter3, '%') OR MIDDLE_NAME LIKE CONCAT('%', :parameter3, '%')) OR AUTHOR IN (SELECT USERNAME FROM tblemployeeprofile WHERE FIRST_NAME LIKE CONCAT('%', :parameter3, '%') OR LAST_NAME LIKE CONCAT('%', :parameter3, '%') OR MIDDLE_NAME LIKE CONCAT('%', :parameter3, '%'))) ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " AND (AUTHOR IN (SELECT EMPLOYEE_ID FROM tblemployeeprofile WHERE FIRST_NAME LIKE CONCAT('%', :parameter3, '%') OR LAST_NAME LIKE CONCAT('%', :parameter3, '%') OR MIDDLE_NAME LIKE CONCAT('%', :parameter3, '%')) OR AUTHOR IN (SELECT USERNAME FROM tblemployeeprofile WHERE FIRST_NAME LIKE CONCAT('%', :parameter3, '%') OR LAST_NAME LIKE CONCAT('%', :parameter3, '%') OR MIDDLE_NAME LIKE CONCAT('%', :parameter3, '%'))) AND PUBLISH = '1' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }
                        else if($parameter2 == 'department'){
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " AND DEPARTMENT IN (SELECT DEPARTMENT_ID FROM tbldepartment WHERE DEPARTMENT LIKE CONCAT('%', :parameter3, '%')) ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " AND DEPARTMENT IN (SELECT DEPARTMENT_ID FROM tbldepartment WHERE DEPARTMENT LIKE CONCAT('%', :parameter3, '%')) AND PUBLISH = '1' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }

                        else if ($parameter2 == 'tags') {
                            if ($view_all_documents > 0) {
                                $sql = $api->db_connection->prepare($query . " AND tbldocument.DOCUMENT_ID IN (SELECT dt.DOCUMENT_ID FROM document_tags dt JOIN tags t ON dt.TAG_ID = t.TAG_ID WHERE t.TAG_NAME LIKE CONCAT('%', :parameter3, '%')) ORDER BY DOCUMENT_ID DESC");
                            } else {
                                $sql = $api->db_connection->prepare($query . " AND tbldocument.DOCUMENT_ID IN (SELECT dt.DOCUMENT_ID FROM document_tags dt JOIN tags t ON dt.TAG_ID = t.TAG_ID WHERE t.TAG_NAME LIKE CONCAT('%', :parameter3, '%')) AND PUBLISH = '1' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                            $sql->bindParam(':parameter3', $parameter3);
                        }
                                                else if($parameter2 == 'category'){
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " AND DOCUMENT_CATEGORY LIKE CONCAT('%', :parameter3, '%') ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " AND DOCUMENT_CATEGORY LIKE CONCAT('%', :parameter3, '%') AND PUBLISH = '1' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }
                        else if($parameter2 == 'description'){
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " AND DESCRIPTION LIKE CONCAT('%', :parameter3, '%') ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " AND DESCRIPTION LIKE CONCAT('%', :parameter3, '%') AND PUBLISH = '1' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }
                        else if($parameter2 == 'documentid'){
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " AND DOCUMENT_ID LIKE CONCAT('%', :parameter3, '%') ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " AND DOCUMENT_ID LIKE CONCAT('%', :parameter3, '%') AND PUBLISH = '1' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }
                        else{
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " AND DOCUMENT_NAME LIKE CONCAT('%', :parameter3, '%') ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " AND DOCUMENT_NAME LIKE CONCAT('%', :parameter3, '%') AND PUBLISH = '1' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }

                        $sql->bindParam(':parameter3', $parameter3);
                    }
                }
                else{
                    if($view_all_documents > 0){
                        $sql = $api->db_connection->prepare($query . " ORDER BY DOCUMENT_ID DESC LIMIT 50");
                    }
                    else{
                        $sql = $api->db_connection->prepare($query . " AND PUBLISH = '1' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC LIMIT 50");
                        $sql->bindParam(':employee_id', $employee_id);
                        $sql->bindParam(':employee_department', $employee_department);
                    }
                }

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $document_id = trim($row['DOCUMENT_ID']);
                        $document_department = trim($row['DEPARTMENT']);

                        $check_authorizer = $api->check_authorizer($document_department, $employee_id);

                        $author = trim($row['AUTHOR']);
                        $document_name = trim($row['DOCUMENT_NAME']);
                        $document_extension = strtoupper($row['DOCUMENT_EXTENSION']);
                        $allowed_extensions = ['PDF', 'JPG', 'JPEG', 'PNG', 'GIF', 'BMP', 'WEBP', 'TIFF', 'SVG'];
                        $document_description = trim($row['DESCRIPTION']);
                        $publish_by = trim($row['PUBLISH_BY']);
                        $publish = trim($row['PUBLISH']);
                        $document_path = trim($row['DOCUMENT_PATH']) . '.dat';
                        $document_status = $api->get_document_status($publish)[0]['BADGE'];
                        $document_category = $api->get_system_description('DOCUMENTCATEGORY', $row['DOCUMENT_CATEGORY']);
                        $upload_date = $api->check_date('empty', trim($row['UPLOAD_DATE']), '', 'm/d/Y', '', '', '');
                        $upload_time = $api->check_date('empty', trim($row['UPLOAD_TIME']), '', 'h:i:s a', '', '', '');
                        $publish_date = $api->check_date('empty', trim($row['PUBLISH_DATE']), '', 'm/d/Y', '', '', '');
                        $publish_time = $api->check_date('empty', trim($row['PUBLISH_TIME']), '', 'h:i:s a', '', '', '');

                        $department_details = $api->get_data_details_one_parameter('department', $document_department);
                        $department = $department_details[0]['DEPARTMENT'] ?? null;

                        $employee_profile_details = $api->get_data_details_one_parameter('employee profile', $author);
                        $first_name = $employee_profile_details[0]['FIRST_NAME'];
                        $last_name = $employee_profile_details[0]['LAST_NAME'];
                        $middle_name = $employee_profile_details[0]['MIDDLE_NAME'];
                        $suffix = $employee_profile_details[0]['SUFFIX'];
                        $full_name = $api->get_full_name($first_name, $middle_name, $last_name, $suffix)[0]['REVERSE_FULL_NAME'];

                        if($publish == '1'){
                                $publish_by_details = $api->get_data_details_one_parameter('employee profile', $publish_by);
                                $publish_by_first_name = $publish_by_details[0]['FIRST_NAME'];
                                $publish_by_last_name = $publish_by_details[0]['LAST_NAME'];
                                $publish_by_middle_name = $publish_by_details[0]['MIDDLE_NAME'];
                                $publish_by_suffix = $publish_by_details[0]['SUFFIX'];
                                $publish_by_fullname = $api->get_full_name($publish_by_first_name, $publish_by_middle_name, $publish_by_last_name, $publish_by_suffix)[0]['REVERSE_FULL_NAME'];
                        }
                        else{
                            $publish_by_fullname = '';
                        }

                        if(file_exists($document_path)){
                            $document_size = $api->get_file_size_unit($document_path);
                        }
                        else{
                            $document_size = 'File Not Found';
                        }

                        if($view_all_documents > 0){
                            $delete = '<a class="dropdown-item delete-document" href="javascript: void(0);" data-documentid="'. $document_id .'">Delete Document</a>';
                            $update = '<a class="dropdown-item update-document" href="javascript: void(0);" data-documentid="'. $document_id .'">Update Document</a>';
                            $assign_permission = '<a class="dropdown-item assign-document-permission-department" href="javascript: void(0);" data-documentid="'. $document_id .'">Assign Department Permission</a>
                            <a class="dropdown-item assign-document-permission-employee" href="javascript: void(0);" data-documentid="'. $document_id .'">Assign Employee Permission</a>';
                        }
                        else{
                            $check_update = $api->check_document_permissions('U', $document_id, $employee_id, $employee_department);
                            $check_delete = $api->check_document_permissions('D', $document_id, $employee_id, $employee_department);
                            $check_set_permission = $api->check_document_permissions('S', $document_id, $employee_id, $employee_department);

                            if($check_delete > 0){
                                //delete is only available for data center department
                                $get_department = $api->get_data_details_one_parameter("employee profile",$username)[0]['DEPARTMENT'];
                                if($get_department == "DEPT1"){
                                    $delete = '<a class="dropdown-item delete-document" href="javascript: void(0);" data-documentid="'. $document_id .'">Delete Document</a>';
                                }else{
                                    $delete = '';
                                }
                            }
                            else{
                                $delete = '';
                            }

                            if($check_set_permission > 0){
                                $assign_permission = '<a class="dropdown-item assign-document-permission-department" href="javascript: void(0);" data-documentid="'. $document_id .'">Assign Department Permission</a>
                                <a class="dropdown-item assign-document-permission-employee" href="javascript: void(0);" data-documentid="'. $document_id .'">Assign Employee Permission</a>';
                            }
                            else{
                                $assign_permission = '';
                            }

                            if($check_update > 0){
                                $update = '<a class="dropdown-item update-document" href="javascript: void(0);" data-documentid="'. $document_id .'">Update Document</a>';
                            }
                            else{
                                $update = '';
                            }
                        }

                        if (in_array($document_extension, $allowed_extensions)) {
                            $view = '<a class="dropdown-item view-document-file" href="javascript: void(0);" data-documentid="'. $document_id .'">View Document</a>';
                        }
                        else{
                            $view = '';
                        }

                        if($check_authorizer > 0){
                            if($publish == '0'){
                                if($publish_document > 0 || $view_all_documents > 0){
                                    $publish_unpublish = '<button type="button" class="btn btn-success waves-effect waves-light publish-document" data-documentid="'. $document_id .'" title="Publish Document">
                                                    <i class="bx bx-check font-size-16 align-middle"></i>
                                                </button>';
                                }
                                else{
                                    $publish_unpublish = '';
                                }
                            }
                            else{
                                if($unpublish_document > 0 || $view_all_documents > 0){
                                    $publish_unpublish = '<button type="button" class="btn btn-danger waves-effect waves-light unpublish-document" data-documentid="'. $document_id .'" title="Unpublish Document">
                                                    <i class="bx bx-x font-size-16 align-middle"></i>
                                                </button>';
                                }
                                else{
                                    $publish_unpublish = '';
                                }
                            }
                        }

                        $response[] = array(
                            'DOCUMENT_ID' => $document_id,
                            'DOCUMENT_NAME' => $document_name,
                            'DESCRIPTION' => $document_description,
                            'FULL_NAME' => $full_name,
                            'DEPARTMENT' => $department,
                            'DOCUMENT_CATEGORY' => $document_category,
                            'STATUS' => $document_status,
                            'DOCUMENT_EXTENSION' => $document_extension,
                            'DOCUMENT_SIZE' => $document_size,
                            'UPLOAD_DATE' => $upload_date . ' ' . $upload_time,
                            'PUBLISH_BY' => $publish_by_fullname,
                            'PUBLISH_DATE' => $publish_date . ' ' . $publish_time,
                            'ACTION' => '<div class="btn-group dropstart">
                                            <button type="button" class="btn btn-primary btn-sm dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">Action</button>
                                            <div class="dropdown-menu">
                                                '. $view .'
                                                '. $update .'
                                                '. $assign_permission .'
                                                '. $delete .'
                                                <a class="dropdown-item download-document" href="javascript: void(0);" data-documentid="'. $document_id .'">Protect & Download Document</a>
                                            </div>
                                        </div>'
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo()[2];
                }
            }
        }
    }
    # -------------------------------------------------------------

    # Publish images documents table
    else if($type == 'publish images documents table'){
        if(isset($_POST['parameter1']) && isset($_POST['parameter2']) && isset($_POST['parameter3'])){
            if ($api->databaseConnection()) {
                $parameter1 = $_POST['parameter1'];
                $parameter2 = $_POST['parameter2'];
                $parameter3 = $_POST['parameter3'];

                $employee_profile_details = $api->get_data_details_one_parameter('employee profile', $username);
                $employee_id = $employee_profile_details[0]['EMPLOYEE_ID'];
                $employee_department = $employee_profile_details[0]['DEPARTMENT'];

                $view_all_documents = $api->check_role_permissions($username, 185);
                $publish_document = $api->check_role_permissions($username, 186);
                $unpublish_document = $api->check_role_permissions($username, 187);

                $query = 'SELECT DOCUMENT_ID, DOCUMENT_NAME, AUTHOR, DEPARTMENT, DOCUMENT_PATH, DOCUMENT_CATEGORY, DOCUMENT_EXTENSION, DESCRIPTION, UPLOAD_DATE, UPLOAD_TIME, PUBLISH, PUBLISH_BY, PUBLISH_DATE, PUBLISH_TIME FROM tbldocument';

                if(!empty($parameter1) && !empty($parameter2) && !empty($parameter3)){
                    if($parameter1 == 'filter'){
                        if($parameter2 == 'author'){
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " WHERE AUTHOR = :parameter3 AND DOCUMENT_CATEGORY = 'IMAGES' ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE AUTHOR = :parameter3 AND DOCUMENT_CATEGORY = 'IMAGES' AND PUBLISH = '1' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }
                        else {
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " WHERE DEPARTMENT = :parameter3 AND DOCUMENT_CATEGORY = 'IMAGES' ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE DEPARTMENT = :parameter3 AND PUBLISH = '1' AND DOCUMENT_CATEGORY = 'IMAGES' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }

                        $sql->bindParam(':parameter3', $parameter3);
                    }
                    else{
                        if($parameter2 == 'author'){
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " WHERE (AUTHOR IN (SELECT EMPLOYEE_ID FROM tblemployeeprofile WHERE FIRST_NAME LIKE CONCAT('%', :parameter3, '%') OR LAST_NAME LIKE CONCAT('%', :parameter3, '%') OR MIDDLE_NAME LIKE CONCAT('%', :parameter3, '%')) OR AUTHOR IN (SELECT USERNAME FROM tblemployeeprofile WHERE FIRST_NAME LIKE CONCAT('%', :parameter3, '%') OR LAST_NAME LIKE CONCAT('%', :parameter3, '%') OR MIDDLE_NAME LIKE CONCAT('%', :parameter3, '%'))) AND DOCUMENT_CATEGORY = 'IMAGES' ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE (AUTHOR IN (SELECT EMPLOYEE_ID FROM tblemployeeprofile WHERE FIRST_NAME LIKE CONCAT('%', :parameter3, '%') OR LAST_NAME LIKE CONCAT('%', :parameter3, '%') OR MIDDLE_NAME LIKE CONCAT('%', :parameter3, '%')) OR AUTHOR IN (SELECT USERNAME FROM tblemployeeprofile WHERE FIRST_NAME LIKE CONCAT('%', :parameter3, '%') OR LAST_NAME LIKE CONCAT('%', :parameter3, '%') OR MIDDLE_NAME LIKE CONCAT('%', :parameter3, '%'))) AND DOCUMENT_CATEGORY = 'IMAGES' AND PUBLISH = '1' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }
                        else if($parameter2 == 'department'){
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " WHERE DEPARTMENT IN (SELECT DEPARTMENT_ID FROM tbldepartment WHERE DEPARTMENT LIKE CONCAT('%', :parameter3, '%')) AND DOCUMENT_CATEGORY = 'IMAGES' ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE DEPARTMENT IN (SELECT DEPARTMENT_ID FROM tbldepartment WHERE DEPARTMENT LIKE CONCAT('%', :parameter3, '%')) AND DOCUMENT_CATEGORY = 'IMAGES' AND PUBLISH = '1' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }
                        else if($parameter2 == 'description'){
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " WHERE DESCRIPTION LIKE CONCAT('%', :parameter3, '%') AND DOCUMENT_CATEGORY = 'IMAGES' ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE DESCRIPTION LIKE CONCAT('%', :parameter3, '%') AND DOCUMENT_CATEGORY = 'IMAGES' AND PUBLISH = '1' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }

                          else if($parameter2 == 'tags'){
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " WHERE tbldocument.DOCUMENT_ID IN (SELECT dt.DOCUMENT_ID FROM document_tags dt JOIN tags t ON dt.TAG_ID = t.TAG_ID WHERE t.TAG_NAME LIKE CONCAT('%', :parameter3, '%')) AND DOCUMENT_CATEGORY = 'IMAGES' ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE tbldocument.DOCUMENT_ID IN (SELECT dt.DOCUMENT_ID FROM document_tags dt JOIN tags t ON dt.TAG_ID = t.TAG_ID WHERE t.TAG_NAME LIKE CONCAT('%', :parameter3, '%')) AND DOCUMENT_CATEGORY = 'IMAGES'  AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }
                        else if($parameter2 == 'documentid'){
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " WHERE DOCUMENT_ID LIKE CONCAT('%', :parameter3, '%') AND DOCUMENT_CATEGORY = 'IMAGES' ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE DOCUMENT_ID LIKE CONCAT('%', :parameter3, '%') AND DOCUMENT_CATEGORY = 'IMAGES' AND PUBLISH = '1' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }
                        else{
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " WHERE DOCUMENT_NAME LIKE CONCAT('%', :parameter3, '%') AND DOCUMENT_CATEGORY = 'IMAGES' ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE DOCUMENT_NAME LIKE CONCAT('%', :parameter3, '%') AND DOCUMENT_CATEGORY = 'IMAGES' AND PUBLISH = '1' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }

                        $sql->bindParam(':parameter3', $parameter3);
                    }
                }
                else{
                    if($view_all_documents > 0){
                        $sql = $api->db_connection->prepare($query . " WHERE DOCUMENT_CATEGORY = 'IMAGES' ORDER BY DOCUMENT_ID DESC LIMIT 100");
                    }
                    else{
                        $sql = $api->db_connection->prepare($query . " WHERE PUBLISH = '1' AND DOCUMENT_CATEGORY = 'IMAGES' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC LIMIT 100");
                        $sql->bindParam(':employee_id', $employee_id);
                        $sql->bindParam(':employee_department', $employee_department);
                    }
                }

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $document_id = trim($row['DOCUMENT_ID']);
                        $document_department = trim($row['DEPARTMENT']);

                        $check_authorizer = $api->check_authorizer($document_department, $employee_id);

                        $author = trim($row['AUTHOR']);
                        $document_name = trim($row['DOCUMENT_NAME']);
                        $document_extension = strtoupper($row['DOCUMENT_EXTENSION']);
                        $allowed_extensions = ['PDF', 'JPG', 'JPEG', 'PNG', 'GIF', 'BMP', 'WEBP', 'TIFF', 'SVG'];
                        $document_description = trim($row['DESCRIPTION']);
                        $publish_by = trim($row['PUBLISH_BY']);
                        $publish = trim($row['PUBLISH']);
                        $document_path = trim($row['DOCUMENT_PATH']) . '.dat';
                        $document_status = $api->get_document_status($publish)[0]['BADGE'];
                        $document_category = $api->get_system_description('DOCUMENTCATEGORY', $row['DOCUMENT_CATEGORY']);
                        $upload_date = $api->check_date('empty', trim($row['UPLOAD_DATE']), '', 'm/d/Y', '', '', '');
                        $upload_time = $api->check_date('empty', trim($row['UPLOAD_TIME']), '', 'h:i:s a', '', '', '');
                        $publish_date = $api->check_date('empty', trim($row['PUBLISH_DATE']), '', 'm/d/Y', '', '', '');
                        $publish_time = $api->check_date('empty', trim($row['PUBLISH_TIME']), '', 'h:i:s a', '', '', '');

                        $department_details = $api->get_data_details_one_parameter('department', $document_department);
                        $department = $department_details[0]['DEPARTMENT'] ?? null;

                        $employee_profile_details = $api->get_data_details_one_parameter('employee profile', $author);
                        $first_name = $employee_profile_details[0]['FIRST_NAME'];
                        $last_name = $employee_profile_details[0]['LAST_NAME'];
                        $middle_name = $employee_profile_details[0]['MIDDLE_NAME'];
                        $suffix = $employee_profile_details[0]['SUFFIX'];
                        $full_name = $api->get_full_name($first_name, $middle_name, $last_name, $suffix)[0]['REVERSE_FULL_NAME'];

                        if($publish == '1'){
                                $publish_by_details = $api->get_data_details_one_parameter('employee profile', $publish_by);
                                $publish_by_first_name = $publish_by_details[0]['FIRST_NAME'];
                                $publish_by_last_name = $publish_by_details[0]['LAST_NAME'];
                                $publish_by_middle_name = $publish_by_details[0]['MIDDLE_NAME'];
                                $publish_by_suffix = $publish_by_details[0]['SUFFIX'];
                                $publish_by_fullname = $api->get_full_name($publish_by_first_name, $publish_by_middle_name, $publish_by_last_name, $publish_by_suffix)[0]['REVERSE_FULL_NAME'];
                        }
                        else{
                            $publish_by_fullname = '';
                        }

                        if(file_exists($document_path)){
                            $document_size = $api->get_file_size_unit($document_path);
                        }
                        else{
                            $document_size = 'File Not Found';
                        }

                        if($view_all_documents > 0){
                            $delete = '<a class="dropdown-item delete-document" href="javascript: void(0);" data-documentid="'. $document_id .'">Delete Document</a>';
                            $update = '<a class="dropdown-item update-document" href="javascript: void(0);" data-documentid="'. $document_id .'">Update Document</a>';
                            $assign_permission = '<a class="dropdown-item assign-document-permission-department" href="javascript: void(0);" data-documentid="'. $document_id .'">Assign Department Permission</a>
                            <a class="dropdown-item assign-document-permission-employee" href="javascript: void(0);" data-documentid="'. $document_id .'">Assign Employee Permission</a>';
                        }
                        else{
                            $check_update = $api->check_document_permissions('U', $document_id, $employee_id, $employee_department);
                            $check_delete = $api->check_document_permissions('D', $document_id, $employee_id, $employee_department);
                            $check_set_permission = $api->check_document_permissions('S', $document_id, $employee_id, $employee_department);

                            if($check_delete > 0){

                               //delete is only available for data center department
                                $get_department = $api->get_data_details_one_parameter("employee profile",$username)[0]['DEPARTMENT'];
                                if($get_department == "DEPT1"){
                                    $delete = '<a class="dropdown-item delete-document" href="javascript: void(0);" data-documentid="'. $document_id .'">Delete Document</a>';
                                }else{
                                    $delete = '';
                                }
                            }
                            else{
                                $delete = '';
                            }

                            if($check_set_permission > 0){
                                $assign_permission = '<a class="dropdown-item assign-document-permission-department" href="javascript: void(0);" data-documentid="'. $document_id .'">Assign Department Permission</a>
                                <a class="dropdown-item assign-document-permission-employee" href="javascript: void(0);" data-documentid="'. $document_id .'">Assign Employee Permission</a>';
                            }
                            else{
                                $assign_permission = '';
                            }

                            if($check_update > 0){
                                $update = '<a class="dropdown-item update-document" href="javascript: void(0);" data-documentid="'. $document_id .'">Update Document</a>';
                            }
                            else{
                                $update = '';
                            }
                        }

                        if (in_array($document_extension, $allowed_extensions)) {
                            $view = '<a class="dropdown-item view-document-file" href="javascript: void(0);" data-documentid="'. $document_id .'">View Document</a>';
                        }
                        else{
                            $view = '';
                        }

                        if($check_authorizer > 0){
                            if($publish == '0'){
                                if($publish_document > 0 || $view_all_documents > 0){
                                    $publish_unpublish = '<button type="button" class="btn btn-success waves-effect waves-light publish-document" data-documentid="'. $document_id .'" title="Publish Document">
                                                    <i class="bx bx-check font-size-16 align-middle"></i>
                                                </button>';
                                }
                                else{
                                    $publish_unpublish = '';
                                }
                            }
                            else{
                                if($unpublish_document > 0 || $view_all_documents > 0){
                                    $publish_unpublish = '<button type="button" class="btn btn-danger waves-effect waves-light unpublish-document" data-documentid="'. $document_id .'" title="Unpublish Document">
                                                    <i class="bx bx-x font-size-16 align-middle"></i>
                                                </button>';
                                }
                                else{
                                    $publish_unpublish = '';
                                }
                            }
                        }

                        $response[] = array(
                            'DOCUMENT_ID' => $document_id,
                            'DOCUMENT_NAME' => $document_name,
                            'DESCRIPTION' => $document_description,
                            'FULL_NAME' => $full_name,
                            'DEPARTMENT' => $department,
                            'DOCUMENT_CATEGORY' => $document_category,
                            'STATUS' => $document_status,
                            'DOCUMENT_EXTENSION' => $document_extension,
                            'DOCUMENT_SIZE' => $document_size,
                            'UPLOAD_DATE' => $upload_date . ' ' . $upload_time,
                            'PUBLISH_BY' => $publish_by_fullname,
                            'PUBLISH_DATE' => $publish_date . ' ' . $publish_time,
                            'ACTION' => '<div class="btn-group dropstart">
                                            <button type="button" class="btn btn-primary btn-sm dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">Action</button>
                                            <div class="dropdown-menu">
                                                '. $view .'
                                                '. $update .'
                                                '. $assign_permission .'
                                                '. $delete .'
                                                <a class="dropdown-item download-document" href="javascript: void(0);" data-documentid="'. $document_id .'">Protect & Download Document</a>
                                            </div>
                                        </div>'
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo()[2];
                }
            }
        }
    }
    # -------------------------------------------------------------

    # Publish memorandum documents table

     else if($type == 'publish memorandum documents table'){
        if(isset($_POST['parameter1']) && isset($_POST['parameter2']) && isset($_POST['parameter3'])){
            if ($api->databaseConnection()) {
                $parameter1 = $_POST['parameter1'];
                $parameter2 = $_POST['parameter2'];
                $parameter3 = $_POST['parameter3'];

                $employee_profile_details = $api->get_data_details_one_parameter('employee profile', $username);
                $employee_id = $employee_profile_details[0]['EMPLOYEE_ID'];
                $employee_department = $employee_profile_details[0]['DEPARTMENT'];

                $view_all_documents = $api->check_role_permissions($username, 185);
                $publish_document = $api->check_role_permissions($username, 186);
                $unpublish_document = $api->check_role_permissions($username, 187);

                $query = 'SELECT DOCUMENT_ID, DOCUMENT_NAME, AUTHOR, DEPARTMENT, DOCUMENT_PATH, DOCUMENT_CATEGORY, DOCUMENT_EXTENSION, DESCRIPTION, UPLOAD_DATE, UPLOAD_TIME, PUBLISH, PUBLISH_BY, PUBLISH_DATE, PUBLISH_TIME FROM tbldocument';

                if(!empty($parameter1) && !empty($parameter2) && !empty($parameter3)){
                    if($parameter1 == 'filter'){
                        if($parameter2 == 'author'){
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " WHERE AUTHOR = :parameter3 AND DOCUMENT_CATEGORY = 'MEMORANDUMS' ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE AUTHOR = :parameter3 AND DOCUMENT_CATEGORY = 'MEMORANDUMS' AND PUBLISH = '1' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }
                        else {
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " WHERE DEPARTMENT = :parameter3 AND DOCUMENT_CATEGORY = 'MEMORANDUMS' ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE DEPARTMENT = :parameter3 AND PUBLISH = '1' AND DOCUMENT_CATEGORY = 'MEMORANDUMS' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }

                        $sql->bindParam(':parameter3', $parameter3);
                    }
                    else{
                        if($parameter2 == 'author'){
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " WHERE (AUTHOR IN (SELECT EMPLOYEE_ID FROM tblemployeeprofile WHERE FIRST_NAME LIKE CONCAT('%', :parameter3, '%') OR LAST_NAME LIKE CONCAT('%', :parameter3, '%') OR MIDDLE_NAME LIKE CONCAT('%', :parameter3, '%')) OR AUTHOR IN (SELECT USERNAME FROM tblemployeeprofile WHERE FIRST_NAME LIKE CONCAT('%', :parameter3, '%') OR LAST_NAME LIKE CONCAT('%', :parameter3, '%') OR MIDDLE_NAME LIKE CONCAT('%', :parameter3, '%'))) AND DOCUMENT_CATEGORY = 'MEMORANDUMS' ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE (AUTHOR IN (SELECT EMPLOYEE_ID FROM tblemployeeprofile WHERE FIRST_NAME LIKE CONCAT('%', :parameter3, '%') OR LAST_NAME LIKE CONCAT('%', :parameter3, '%') OR MIDDLE_NAME LIKE CONCAT('%', :parameter3, '%')) OR AUTHOR IN (SELECT USERNAME FROM tblemployeeprofile WHERE FIRST_NAME LIKE CONCAT('%', :parameter3, '%') OR LAST_NAME LIKE CONCAT('%', :parameter3, '%') OR MIDDLE_NAME LIKE CONCAT('%', :parameter3, '%'))) AND DOCUMENT_CATEGORY = 'MEMORANDUMS' AND PUBLISH = '1' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }
                        else if($parameter2 == 'department'){
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " WHERE DEPARTMENT IN (SELECT DEPARTMENT_ID FROM tbldepartment WHERE DEPARTMENT LIKE CONCAT('%', :parameter3, '%')) AND DOCUMENT_CATEGORY = 'MEMORANDUMS' ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE DEPARTMENT IN (SELECT DEPARTMENT_ID FROM tbldepartment WHERE DEPARTMENT LIKE CONCAT('%', :parameter3, '%')) AND DOCUMENT_CATEGORY = 'MEMORANDUMS' AND PUBLISH = '1' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }
                        else if($parameter2 == 'description'){
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " WHERE DESCRIPTION LIKE CONCAT('%', :parameter3, '%') AND DOCUMENT_CATEGORY = 'MEMORANDUMS' ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE DESCRIPTION LIKE CONCAT('%', :parameter3, '%') AND DOCUMENT_CATEGORY = 'MEMORANDUMS' AND PUBLISH = '1' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }
                        else if($parameter2 == 'documentid'){
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " WHERE DOCUMENT_ID LIKE CONCAT('%', :parameter3, '%') AND DOCUMENT_CATEGORY = 'MEMORANDUMS' ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE DOCUMENT_ID LIKE CONCAT('%', :parameter3, '%') AND DOCUMENT_CATEGORY = 'MEMORANDUMS' AND PUBLISH = '1' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }

                          else if($parameter2 == 'tags'){
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " WHERE tbldocument.DOCUMENT_ID IN (SELECT dt.DOCUMENT_ID FROM document_tags dt JOIN tags t ON dt.TAG_ID = t.TAG_ID WHERE t.TAG_NAME LIKE CONCAT('%', :parameter3, '%')) AND DOCUMENT_CATEGORY = 'MEMORANDUMS' ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE tbldocument.DOCUMENT_ID IN (SELECT dt.DOCUMENT_ID FROM document_tags dt JOIN tags t ON dt.TAG_ID = t.TAG_ID WHERE t.TAG_NAME LIKE CONCAT('%', :parameter3, '%')) AND DOCUMENT_CATEGORY = 'MEMORANDUMS'  AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }
                        else{
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " WHERE DOCUMENT_NAME LIKE CONCAT('%', :parameter3, '%') AND DOCUMENT_CATEGORY = 'MEMORANDUMS' ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE DOCUMENT_NAME LIKE CONCAT('%', :parameter3, '%') AND DOCUMENT_CATEGORY = 'MEMORANDUMS' AND PUBLISH = '1' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }

                        $sql->bindParam(':parameter3', $parameter3);
                    }
                }
                else{
                    if($view_all_documents > 0){
                        $sql = $api->db_connection->prepare($query . " WHERE DOCUMENT_CATEGORY = 'MEMORANDUMS' AND PUBLISH = '1' ORDER BY DOCUMENT_ID DESC LIMIT 100");
                    }
                    else{
                        $sql = $api->db_connection->prepare($query . " WHERE PUBLISH = '1' AND DOCUMENT_CATEGORY = 'MEMORANDUMS' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC LIMIT 100");
                        $sql->bindParam(':employee_id', $employee_id);
                        $sql->bindParam(':employee_department', $employee_department);
                    }
                }

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $document_id = trim($row['DOCUMENT_ID']);
                        $document_department = trim($row['DEPARTMENT']);

                        $check_authorizer = $api->check_authorizer($document_department, $employee_id);

                        $author = trim($row['AUTHOR']);
                        $document_name = trim($row['DOCUMENT_NAME']);
                        $document_extension = strtoupper($row['DOCUMENT_EXTENSION']);
                        $document_description = trim($row['DESCRIPTION']);
                        $publish_by = trim($row['PUBLISH_BY']);
                        $publish = trim($row['PUBLISH']);
                        $document_path = trim($row['DOCUMENT_PATH']) . '.dat';
                        $document_status = $api->get_document_status($publish)[0]['BADGE'];
                        $document_category = $api->get_system_description('DOCUMENTCATEGORY', $row['DOCUMENT_CATEGORY']);
                        $upload_date = $api->check_date('empty', trim($row['UPLOAD_DATE']), '', 'm/d/Y', '', '', '');
                        $upload_time = $api->check_date('empty', trim($row['UPLOAD_TIME']), '', 'h:i:s a', '', '', '');
                        $publish_date = $api->check_date('empty', trim($row['PUBLISH_DATE']), '', 'm/d/Y', '', '', '');
                        $publish_time = $api->check_date('empty', trim($row['PUBLISH_TIME']), '', 'h:i:s a', '', '', '');

                        $department_details = $api->get_data_details_one_parameter('department', $document_department);
                        $department = $department_details[0]['DEPARTMENT'] ?? null;

                        $employee_profile_details = $api->get_data_details_one_parameter('employee profile', $author);
                        $first_name = $employee_profile_details[0]['FIRST_NAME'];
                        $last_name = $employee_profile_details[0]['LAST_NAME'];
                        $middle_name = $employee_profile_details[0]['MIDDLE_NAME'];
                        $suffix = $employee_profile_details[0]['SUFFIX'];
                        $full_name = $api->get_full_name($first_name, $middle_name, $last_name, $suffix)[0]['REVERSE_FULL_NAME'];

                        if($publish == '1'){
                                $publish_by_details = $api->get_data_details_one_parameter('employee profile', $publish_by);
                                $publish_by_first_name = $publish_by_details[0]['FIRST_NAME'];
                                $publish_by_last_name = $publish_by_details[0]['LAST_NAME'];
                                $publish_by_middle_name = $publish_by_details[0]['MIDDLE_NAME'];
                                $publish_by_suffix = $publish_by_details[0]['SUFFIX'];
                                $publish_by_fullname = $api->get_full_name($publish_by_first_name, $publish_by_middle_name, $publish_by_last_name, $publish_by_suffix)[0]['REVERSE_FULL_NAME'];
                        }
                        else{
                            $publish_by_fullname = '';
                        }

                        if(file_exists($document_path)){
                            $document_size = $api->get_file_size_unit($document_path);
                        }
                        else{
                            $document_size = 'File Not Found';
                        }

                        if($view_all_documents > 0){
                            $delete = '<a class="dropdown-item delete-document" href="javascript: void(0);" data-documentid="'. $document_id .'">Delete Document</a>';
                            $update = '<a class="dropdown-item update-document" href="javascript: void(0);" data-documentid="'. $document_id .'">Update Document</a>';
                            $assign_permission = '<a class="dropdown-item assign-document-permission-department" href="javascript: void(0);" data-documentid="'. $document_id .'">Assign Department Permission</a>
                            <a class="dropdown-item assign-document-permission-employee" href="javascript: void(0);" data-documentid="'. $document_id .'">Assign Employee Permission</a>';
                        }
                        else{
                            $check_update = $api->check_document_permissions('U', $document_id, $employee_id, $employee_department);
                            $check_delete = $api->check_document_permissions('D', $document_id, $employee_id, $employee_department);
                            $check_set_permission = $api->check_document_permissions('S', $document_id, $employee_id, $employee_department);

                            if($check_delete > 0){
                                //delete is only available for data center department
                                $get_department = $api->get_data_details_one_parameter("employee profile",$username)[0]['DEPARTMENT'];
                                if($get_department == "DEPT1"){
                                    $delete = '<a class="dropdown-item delete-document" href="javascript: void(0);" data-documentid="'. $document_id .'">Delete Document</a>';
                                }else{
                                    $delete = '';
                                }



                            }
                            else{
                                $delete = '';
                            }

                            if($check_set_permission > 0){
                                $assign_permission = '<a class="dropdown-item assign-document-permission-department" href="javascript: void(0);" data-documentid="'. $document_id .'">Assign Department Permission</a>
                                <a class="dropdown-item assign-document-permission-employee" href="javascript: void(0);" data-documentid="'. $document_id .'">Assign Employee Permission</a>';
                            }
                            else{
                                $assign_permission = '';
                            }

                            if($check_update > 0){
                                $update = '<a class="dropdown-item update-document" href="javascript: void(0);" data-documentid="'. $document_id .'">Update Document</a>';
                            }
                            else{
                                $update = '';
                            }
                        }

                        if(($document_extension == 'pdf' || $document_extension == 'PDF')){
                            $view = '<a class="dropdown-item view-document-file" href="javascript: void(0);" data-documentid="'. $document_id .'">View Document</a>';
                        }
                        else{
                            $view = '';
                        }

                        if($check_authorizer > 0){
                            if($publish == '0'){
                                if($publish_document > 0 || $view_all_documents > 0){
                                    $publish_unpublish = '<button type="button" class="btn btn-success waves-effect waves-light publish-document" data-documentid="'. $document_id .'" title="Publish Document">
                                                    <i class="bx bx-check font-size-16 align-middle"></i>
                                                </button>';
                                }
                                else{
                                    $publish_unpublish = '';
                                }
                            }
                            else{
                                if($unpublish_document > 0 || $view_all_documents > 0){
                                    $publish_unpublish = '<button type="button" class="btn btn-danger waves-effect waves-light unpublish-document" data-documentid="'. $document_id .'" title="Unpublish Document">
                                                    <i class="bx bx-x font-size-16 align-middle"></i>
                                                </button>';
                                }
                                else{
                                    $publish_unpublish = '';
                                }
                            }
                        }

                        $response[] = array(
                            'DOCUMENT_ID' => $document_id,
                            'DOCUMENT_NAME' => $document_name,
                            'DESCRIPTION' => $document_description,
                            'FULL_NAME' => $full_name,
                            'DEPARTMENT' => $department,
                            'DOCUMENT_CATEGORY' => $document_category,
                            'STATUS' => $document_status,
                            'DOCUMENT_EXTENSION' => $document_extension,
                            'DOCUMENT_SIZE' => $document_size,
                            'UPLOAD_DATE' => $upload_date . ' ' . $upload_time,
                            'PUBLISH_BY' => $publish_by_fullname,
                            'PUBLISH_DATE' => $publish_date . ' ' . $publish_time,
                            'ACTION' => '<div class="btn-group dropstart">
                                            <button type="button" class="btn btn-primary btn-sm dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">Action</button>
                                            <div class="dropdown-menu">
                                                '. $view .'
                                                '. $update .'
                                                '. $assign_permission .'
                                                '. $delete .'
                                                <a class="dropdown-item download-document" href="javascript: void(0);" data-documentid="'. $document_id .'">Protect & Download Document</a>
                                            </div>
                                        </div>'
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo()[2];
                }
            }
        }
    }
    # -------------------------------------------------------------

    # Publish loan documents table
    else if($type == 'publish loan documents table'){
        if(isset($_POST['parameter1']) && isset($_POST['parameter2']) && isset($_POST['parameter3'])){
            if ($api->databaseConnection()) {
                $parameter1 = $_POST['parameter1'];
                $parameter2 = $_POST['parameter2'];
                $parameter3 = $_POST['parameter3'];

                $employee_profile_details = $api->get_data_details_one_parameter('employee profile', $username);
                $employee_id = $employee_profile_details[0]['EMPLOYEE_ID'];
                $employee_department = $employee_profile_details[0]['DEPARTMENT'];

                $view_all_documents = $api->check_role_permissions($username, 185);
                $publish_document = $api->check_role_permissions($username, 186);
                $unpublish_document = $api->check_role_permissions($username, 187);

                $query = 'SELECT DOCUMENT_ID, DOCUMENT_NAME, AUTHOR, DEPARTMENT, DOCUMENT_PATH, DOCUMENT_CATEGORY, DOCUMENT_EXTENSION, DESCRIPTION, UPLOAD_DATE, UPLOAD_TIME, PUBLISH, PUBLISH_BY, PUBLISH_DATE, PUBLISH_TIME FROM tbldocument';

                if(!empty($parameter1) && !empty($parameter2) && !empty($parameter3)){
                    if($parameter1 == 'filter'){
                        if($parameter2 == 'author'){
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " WHERE AUTHOR = :parameter3 AND DOCUMENT_CATEGORY = 'LOANDOCUMENTS' ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE AUTHOR = :parameter3 AND DOCUMENT_CATEGORY = 'LOANDOCUMENTS' AND PUBLISH = '1' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }
                        else {
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " WHERE DEPARTMENT = :parameter3 AND DOCUMENT_CATEGORY = 'LOANDOCUMENTS' ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE DEPARTMENT = :parameter3 AND PUBLISH = '1' AND DOCUMENT_CATEGORY = 'LOANDOCUMENTS' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }

                        $sql->bindParam(':parameter3', $parameter3);
                    }
                    else{
                        if($parameter2 == 'author'){
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " WHERE (AUTHOR IN (SELECT EMPLOYEE_ID FROM tblemployeeprofile WHERE FIRST_NAME LIKE CONCAT('%', :parameter3, '%') OR LAST_NAME LIKE CONCAT('%', :parameter3, '%') OR MIDDLE_NAME LIKE CONCAT('%', :parameter3, '%')) OR AUTHOR IN (SELECT USERNAME FROM tblemployeeprofile WHERE FIRST_NAME LIKE CONCAT('%', :parameter3, '%') OR LAST_NAME LIKE CONCAT('%', :parameter3, '%') OR MIDDLE_NAME LIKE CONCAT('%', :parameter3, '%'))) AND DOCUMENT_CATEGORY = 'LOANDOCUMENTS' ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE (AUTHOR IN (SELECT EMPLOYEE_ID FROM tblemployeeprofile WHERE FIRST_NAME LIKE CONCAT('%', :parameter3, '%') OR LAST_NAME LIKE CONCAT('%', :parameter3, '%') OR MIDDLE_NAME LIKE CONCAT('%', :parameter3, '%')) OR AUTHOR IN (SELECT USERNAME FROM tblemployeeprofile WHERE FIRST_NAME LIKE CONCAT('%', :parameter3, '%') OR LAST_NAME LIKE CONCAT('%', :parameter3, '%') OR MIDDLE_NAME LIKE CONCAT('%', :parameter3, '%'))) AND DOCUMENT_CATEGORY = 'LOANDOCUMENTS' AND PUBLISH = '1' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }
                        else if($parameter2 == 'department'){
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " WHERE DEPARTMENT IN (SELECT DEPARTMENT_ID FROM tbldepartment WHERE DEPARTMENT LIKE CONCAT('%', :parameter3, '%')) AND DOCUMENT_CATEGORY = 'LOANDOCUMENTS' ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE DEPARTMENT IN (SELECT DEPARTMENT_ID FROM tbldepartment WHERE DEPARTMENT LIKE CONCAT('%', :parameter3, '%')) AND DOCUMENT_CATEGORY = 'LOANDOCUMENTS' AND PUBLISH = '1' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }
                        else if($parameter2 == 'description'){
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " WHERE DESCRIPTION LIKE CONCAT('%', :parameter3, '%') AND DOCUMENT_CATEGORY = 'LOANDOCUMENTS' ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE DESCRIPTION LIKE CONCAT('%', :parameter3, '%') AND DOCUMENT_CATEGORY = 'LOANDOCUMENTS' AND PUBLISH = '1' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }

                           else if($parameter2 == 'tags'){
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " WHERE tbldocument.DOCUMENT_ID IN (SELECT dt.DOCUMENT_ID FROM document_tags dt JOIN tags t ON dt.TAG_ID = t.TAG_ID WHERE t.TAG_NAME LIKE CONCAT('%', :parameter3, '%')) AND DOCUMENT_CATEGORY = 'LOANDOCUMENTS' ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE tbldocument.DOCUMENT_ID IN (SELECT dt.DOCUMENT_ID FROM document_tags dt JOIN tags t ON dt.TAG_ID = t.TAG_ID WHERE t.TAG_NAME LIKE CONCAT('%', :parameter3, '%')) AND DOCUMENT_CATEGORY = 'LOANDOCUMENTS'  AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }
                        else if($parameter2 == 'documentid'){
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " WHERE DOCUMENT_ID LIKE CONCAT('%', :parameter3, '%') AND DOCUMENT_CATEGORY = 'LOANDOCUMENTS' ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE DOCUMENT_ID LIKE CONCAT('%', :parameter3, '%') AND DOCUMENT_CATEGORY = 'LOANDOCUMENTS' AND PUBLISH = '1' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }
                        else{
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " WHERE DOCUMENT_NAME LIKE CONCAT('%', :parameter3, '%') AND DOCUMENT_CATEGORY = 'LOANDOCUMENTS' ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE DOCUMENT_NAME LIKE CONCAT('%', :parameter3, '%') AND DOCUMENT_CATEGORY = 'LOANDOCUMENTS' AND PUBLISH = '1' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }

                        $sql->bindParam(':parameter3', $parameter3);
                    }
                }
                else{
                    if($view_all_documents > 0){
                        $sql = $api->db_connection->prepare($query . " WHERE DOCUMENT_CATEGORY = 'LOANDOCUMENTS' ORDER BY DOCUMENT_ID DESC LIMIT 100");
                    }
                    else{
                        $sql = $api->db_connection->prepare($query . " WHERE PUBLISH = '1' AND DOCUMENT_CATEGORY = 'LOANDOCUMENTS' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC LIMIT 100");
                        $sql->bindParam(':employee_id', $employee_id);
                        $sql->bindParam(':employee_department', $employee_department);
                    }
                }

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $document_id = trim($row['DOCUMENT_ID']);
                        $document_department = trim($row['DEPARTMENT']);

                        $check_authorizer = $api->check_authorizer($document_department, $employee_id);

                        $author = trim($row['AUTHOR']);
                        $document_name = trim($row['DOCUMENT_NAME']);
                        $document_extension = strtoupper($row['DOCUMENT_EXTENSION']);
                        $document_description = trim($row['DESCRIPTION']);
                        $publish_by = trim($row['PUBLISH_BY']);
                        $publish = trim($row['PUBLISH']);
                        $document_path = trim($row['DOCUMENT_PATH']) . '.dat';
                        $document_status = $api->get_document_status($publish)[0]['BADGE'];
                        $document_category = $api->get_system_description('DOCUMENTCATEGORY', $row['DOCUMENT_CATEGORY']);
                        $upload_date = $api->check_date('empty', trim($row['UPLOAD_DATE']), '', 'm/d/Y', '', '', '');
                        $upload_time = $api->check_date('empty', trim($row['UPLOAD_TIME']), '', 'h:i:s a', '', '', '');
                        $publish_date = $api->check_date('empty', trim($row['PUBLISH_DATE']), '', 'm/d/Y', '', '', '');
                        $publish_time = $api->check_date('empty', trim($row['PUBLISH_TIME']), '', 'h:i:s a', '', '', '');

                        $department_details = $api->get_data_details_one_parameter('department', $document_department);
                        $department = $department_details[0]['DEPARTMENT'] ?? null;

                        $employee_profile_details = $api->get_data_details_one_parameter('employee profile', $author);
                        $first_name = $employee_profile_details[0]['FIRST_NAME'];
                        $last_name = $employee_profile_details[0]['LAST_NAME'];
                        $middle_name = $employee_profile_details[0]['MIDDLE_NAME'];
                        $suffix = $employee_profile_details[0]['SUFFIX'];
                        $full_name = $api->get_full_name($first_name, $middle_name, $last_name, $suffix)[0]['REVERSE_FULL_NAME'];

                        if($publish == '1'){
                                $publish_by_details = $api->get_data_details_one_parameter('employee profile', $publish_by);
                                $publish_by_first_name = $publish_by_details[0]['FIRST_NAME'];
                                $publish_by_last_name = $publish_by_details[0]['LAST_NAME'];
                                $publish_by_middle_name = $publish_by_details[0]['MIDDLE_NAME'];
                                $publish_by_suffix = $publish_by_details[0]['SUFFIX'];
                                $publish_by_fullname = $api->get_full_name($publish_by_first_name, $publish_by_middle_name, $publish_by_last_name, $publish_by_suffix)[0]['REVERSE_FULL_NAME'];
                        }
                        else{
                            $publish_by_fullname = '';
                        }

                        if(file_exists($document_path)){
                            $document_size = $api->get_file_size_unit($document_path);
                        }
                        else{
                            $document_size = 'File Not Found';
                        }

                        if($view_all_documents > 0){
                            $delete = '<a class="dropdown-item delete-document" href="javascript: void(0);" data-documentid="'. $document_id .'">Delete Document</a>';
                            $update = '<a class="dropdown-item update-document" href="javascript: void(0);" data-documentid="'. $document_id .'">Update Document</a>';
                            $assign_permission = '<a class="dropdown-item assign-document-permission-department" href="javascript: void(0);" data-documentid="'. $document_id .'">Assign Department Permission</a>
                            <a class="dropdown-item assign-document-permission-employee" href="javascript: void(0);" data-documentid="'. $document_id .'">Assign Employee Permission</a>';
                        }
                        else{
                            $check_update = $api->check_document_permissions('U', $document_id, $employee_id, $employee_department);
                            $check_delete = $api->check_document_permissions('D', $document_id, $employee_id, $employee_department);
                            $check_set_permission = $api->check_document_permissions('S', $document_id, $employee_id, $employee_department);

                            if($check_delete > 0){
                                //delete is only available for data center department
                                $get_department = $api->get_data_details_one_parameter("employee profile",$username)[0]['DEPARTMENT'];
                                if($get_department == "DEPT1"){
                                    $delete = '<a class="dropdown-item delete-document" href="javascript: void(0);" data-documentid="'. $document_id .'">Delete Document</a>';
                                }else{
                                    $delete = '';
                                }



                            }
                            else{
                                $delete = '';
                            }

                            if($check_set_permission > 0){
                                $assign_permission = '<a class="dropdown-item assign-document-permission-department" href="javascript: void(0);" data-documentid="'. $document_id .'">Assign Department Permission</a>
                                <a class="dropdown-item assign-document-permission-employee" href="javascript: void(0);" data-documentid="'. $document_id .'">Assign Employee Permission</a>';
                            }
                            else{
                                $assign_permission = '';
                            }

                            if($check_update > 0){
                                $update = '<a class="dropdown-item update-document" href="javascript: void(0);" data-documentid="'. $document_id .'">Update Document</a>';
                            }
                            else{
                                $update = '';
                            }
                        }

                        if(($document_extension == 'pdf' || $document_extension == 'PDF')){
                            $view = '<a class="dropdown-item view-document-file" href="javascript: void(0);" data-documentid="'. $document_id .'">View Document</a>';
                        }
                        else{
                            $view = '';
                        }

                        if($check_authorizer > 0){
                            if($publish == '0'){
                                if($publish_document > 0 || $view_all_documents > 0){
                                    $publish_unpublish = '<button type="button" class="btn btn-success waves-effect waves-light publish-document" data-documentid="'. $document_id .'" title="Publish Document">
                                                    <i class="bx bx-check font-size-16 align-middle"></i>
                                                </button>';
                                }
                                else{
                                    $publish_unpublish = '';
                                }
                            }
                            else{
                                if($unpublish_document > 0 || $view_all_documents > 0){
                                    $publish_unpublish = '<button type="button" class="btn btn-danger waves-effect waves-light unpublish-document" data-documentid="'. $document_id .'" title="Unpublish Document">
                                                    <i class="bx bx-x font-size-16 align-middle"></i>
                                                </button>';
                                }
                                else{
                                    $publish_unpublish = '';
                                }
                            }
                        }

                        $response[] = array(
                            'DOCUMENT_ID' => $document_id,
                            'DOCUMENT_NAME' => $document_name,
                            'DESCRIPTION' => $document_description,
                            'FULL_NAME' => $full_name,
                            'DEPARTMENT' => $department,
                            'DOCUMENT_CATEGORY' => $document_category,
                            'STATUS' => $document_status,
                            'DOCUMENT_EXTENSION' => $document_extension,
                            'DOCUMENT_SIZE' => $document_size,
                            'UPLOAD_DATE' => $upload_date . ' ' . $upload_time,
                            'PUBLISH_BY' => $publish_by_fullname,
                            'PUBLISH_DATE' => $publish_date . ' ' . $publish_time,
                            'ACTION' => '<div class="btn-group dropstart">
                                            <button type="button" class="btn btn-primary btn-sm dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">Action</button>
                                            <div class="dropdown-menu">
                                                '. $view .'
                                                '. $update .'
                                                '. $assign_permission .'
                                                '. $delete .'
                                                <a class="dropdown-item download-document" href="javascript: void(0);" data-documentid="'. $document_id .'">Protect & Download Document</a>
                                            </div>
                                        </div>'
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo()[2];
                }
            }
        }
    }
    # -------------------------------------------------------------

    # Publish forms table
    else if($type == 'publish forms table'){
        if(isset($_POST['parameter1']) && isset($_POST['parameter2']) && isset($_POST['parameter3'])){
            if ($api->databaseConnection()) {
                $parameter1 = $_POST['parameter1'];
                $parameter2 = $_POST['parameter2'];
                $parameter3 = $_POST['parameter3'];

                $employee_profile_details = $api->get_data_details_one_parameter('employee profile', $username);
                $employee_id = $employee_profile_details[0]['EMPLOYEE_ID'];
                $employee_department = $employee_profile_details[0]['DEPARTMENT'];

                $view_all_documents = $api->check_role_permissions($username, 185);
                $publish_document = $api->check_role_permissions($username, 186);
                $unpublish_document = $api->check_role_permissions($username, 187);

                $query = 'SELECT DOCUMENT_ID, DOCUMENT_NAME, AUTHOR, DEPARTMENT, DOCUMENT_PATH, DOCUMENT_CATEGORY, DOCUMENT_EXTENSION, DESCRIPTION, UPLOAD_DATE, UPLOAD_TIME, PUBLISH, PUBLISH_BY, PUBLISH_DATE, PUBLISH_TIME FROM tbldocument';

                if(!empty($parameter1) && !empty($parameter2) && !empty($parameter3)){
                    if($parameter1 == 'filter'){
                        if($parameter2 == 'author'){
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " WHERE AUTHOR = :parameter3 AND DOCUMENT_CATEGORY = 'FORMS' ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE AUTHOR = :parameter3 AND DOCUMENT_CATEGORY = 'FORMS' AND PUBLISH = '1' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }
                        else {
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " WHERE DEPARTMENT = :parameter3 AND DOCUMENT_CATEGORY = 'FORMS' ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE DEPARTMENT = :parameter3 AND PUBLISH = '1' AND DOCUMENT_CATEGORY = 'FORMS' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }

                        $sql->bindParam(':parameter3', $parameter3);
                    }
                    else{
                        if($parameter2 == 'author'){
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " WHERE (AUTHOR IN (SELECT EMPLOYEE_ID FROM tblemployeeprofile WHERE FIRST_NAME LIKE CONCAT('%', :parameter3, '%') OR LAST_NAME LIKE CONCAT('%', :parameter3, '%') OR MIDDLE_NAME LIKE CONCAT('%', :parameter3, '%')) OR AUTHOR IN (SELECT USERNAME FROM tblemployeeprofile WHERE FIRST_NAME LIKE CONCAT('%', :parameter3, '%') OR LAST_NAME LIKE CONCAT('%', :parameter3, '%') OR MIDDLE_NAME LIKE CONCAT('%', :parameter3, '%'))) AND DOCUMENT_CATEGORY = 'FORMS' ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE (AUTHOR IN (SELECT EMPLOYEE_ID FROM tblemployeeprofile WHERE FIRST_NAME LIKE CONCAT('%', :parameter3, '%') OR LAST_NAME LIKE CONCAT('%', :parameter3, '%') OR MIDDLE_NAME LIKE CONCAT('%', :parameter3, '%')) OR AUTHOR IN (SELECT USERNAME FROM tblemployeeprofile WHERE FIRST_NAME LIKE CONCAT('%', :parameter3, '%') OR LAST_NAME LIKE CONCAT('%', :parameter3, '%') OR MIDDLE_NAME LIKE CONCAT('%', :parameter3, '%'))) AND DOCUMENT_CATEGORY = 'FORMS' AND PUBLISH = '1' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }
                        else if($parameter2 == 'department'){
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " WHERE DEPARTMENT IN (SELECT DEPARTMENT_ID FROM tbldepartment WHERE DEPARTMENT LIKE CONCAT('%', :parameter3, '%')) AND DOCUMENT_CATEGORY = 'FORMS' ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE DEPARTMENT IN (SELECT DEPARTMENT_ID FROM tbldepartment WHERE DEPARTMENT LIKE CONCAT('%', :parameter3, '%')) AND DOCUMENT_CATEGORY = 'FORMS' AND PUBLISH = '1' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }
                        else if($parameter2 == 'description'){
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " WHERE DESCRIPTION LIKE CONCAT('%', :parameter3, '%') AND DOCUMENT_CATEGORY = 'FORMS' ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE DESCRIPTION LIKE CONCAT('%', :parameter3, '%') AND DOCUMENT_CATEGORY = 'FORMS' AND PUBLISH = '1' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }

                        else if($parameter2 == 'tags'){
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " WHERE tbldocument.DOCUMENT_ID IN (SELECT dt.DOCUMENT_ID FROM document_tags dt JOIN tags t ON dt.TAG_ID = t.TAG_ID WHERE t.TAG_NAME LIKE CONCAT('%', :parameter3, '%')) AND DOCUMENT_CATEGORY = 'FORMS' ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE tbldocument.DOCUMENT_ID IN (SELECT dt.DOCUMENT_ID FROM document_tags dt JOIN tags t ON dt.TAG_ID = t.TAG_ID WHERE t.TAG_NAME LIKE CONCAT('%', :parameter3, '%')) AND DOCUMENT_CATEGORY = 'FORMS'  AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }
                        else if($parameter2 == 'documentid'){
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " WHERE DOCUMENT_ID LIKE CONCAT('%', :parameter3, '%') AND DOCUMENT_CATEGORY = 'FORMS' ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE DOCUMENT_ID LIKE CONCAT('%', :parameter3, '%') AND DOCUMENT_CATEGORY = 'FORMS' AND PUBLISH = '1' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }
                        else{
                            if($view_all_documents > 0){
                                $sql = $api->db_connection->prepare($query . " WHERE DOCUMENT_NAME LIKE CONCAT('%', :parameter3, '%') AND DOCUMENT_CATEGORY = 'FORMS' ORDER BY DOCUMENT_ID DESC");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE DOCUMENT_NAME LIKE CONCAT('%', :parameter3, '%') AND DOCUMENT_CATEGORY = 'FORMS' AND PUBLISH = '1' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC");
                                $sql->bindParam(':employee_id', $employee_id);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }

                        $sql->bindParam(':parameter3', $parameter3);
                    }
                }
                else{
                    if($view_all_documents > 0){
                        $sql = $api->db_connection->prepare($query . " WHERE DOCUMENT_CATEGORY = 'FORMS' ORDER BY DOCUMENT_ID DESC LIMIT 100");
                    }
                    else{
                        $sql = $api->db_connection->prepare($query . " WHERE PUBLISH = '1' AND DOCUMENT_CATEGORY = 'FORMS' AND (DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentemployeepermission WHERE EMPLOYEE_ID = :employee_id AND PERMISSION = 'V') OR DOCUMENT_ID IN (SELECT DOCUMENT_ID FROM tbldocumentdepartmentpermission WHERE DEPARTMENT_ID = :employee_department AND PERMISSION = 'V')) ORDER BY DOCUMENT_ID DESC LIMIT 100");
                        $sql->bindParam(':employee_id', $employee_id);
                        $sql->bindParam(':employee_department', $employee_department);
                    }
                }

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $document_id = trim($row['DOCUMENT_ID']);
                        $document_department = trim($row['DEPARTMENT']);

                        $check_authorizer = $api->check_authorizer($document_department, $employee_id);

                        $author = trim($row['AUTHOR']);
                        $document_name = trim($row['DOCUMENT_NAME']);
                        $document_extension = strtoupper($row['DOCUMENT_EXTENSION']);
                        $document_description = trim($row['DESCRIPTION']);
                        $publish_by = trim($row['PUBLISH_BY']);
                        $publish = trim($row['PUBLISH']);
                        $document_path = trim($row['DOCUMENT_PATH']) . '.dat';
                        $document_status = $api->get_document_status($publish)[0]['BADGE'];
                        $document_category = $api->get_system_description('DOCUMENTCATEGORY', $row['DOCUMENT_CATEGORY']);
                        $upload_date = $api->check_date('empty', trim($row['UPLOAD_DATE']), '', 'm/d/Y', '', '', '');
                        $upload_time = $api->check_date('empty', trim($row['UPLOAD_TIME']), '', 'h:i:s a', '', '', '');
                        $publish_date = $api->check_date('empty', trim($row['PUBLISH_DATE']), '', 'm/d/Y', '', '', '');
                        $publish_time = $api->check_date('empty', trim($row['PUBLISH_TIME']), '', 'h:i:s a', '', '', '');

                        $department_details = $api->get_data_details_one_parameter('department', $document_department);
                        $department = $department_details[0]['DEPARTMENT'] ?? null;

                        $employee_profile_details = $api->get_data_details_one_parameter('employee profile', $author);
                        $first_name = $employee_profile_details[0]['FIRST_NAME'];
                        $last_name = $employee_profile_details[0]['LAST_NAME'];
                        $middle_name = $employee_profile_details[0]['MIDDLE_NAME'];
                        $suffix = $employee_profile_details[0]['SUFFIX'];
                        $full_name = $api->get_full_name($first_name, $middle_name, $last_name, $suffix)[0]['REVERSE_FULL_NAME'];

                        if($publish == '1'){
                                $publish_by_details = $api->get_data_details_one_parameter('employee profile', $publish_by);
                                $publish_by_first_name = $publish_by_details[0]['FIRST_NAME'];
                                $publish_by_last_name = $publish_by_details[0]['LAST_NAME'];
                                $publish_by_middle_name = $publish_by_details[0]['MIDDLE_NAME'];
                                $publish_by_suffix = $publish_by_details[0]['SUFFIX'];
                                $publish_by_fullname = $api->get_full_name($publish_by_first_name, $publish_by_middle_name, $publish_by_last_name, $publish_by_suffix)[0]['REVERSE_FULL_NAME'];
                        }
                        else{
                            $publish_by_fullname = '';
                        }

                        if(file_exists($document_path)){
                            $document_size = $api->get_file_size_unit($document_path);
                        }
                        else{
                            $document_size = 'File Not Found';
                        }

                        if($view_all_documents > 0){
                            $delete = '<a class="dropdown-item delete-document" href="javascript: void(0);" data-documentid="'. $document_id .'">Delete Document</a>';
                            $update = '<a class="dropdown-item update-document" href="javascript: void(0);" data-documentid="'. $document_id .'">Update Document</a>';
                            $assign_permission = '<a class="dropdown-item assign-document-permission-department" href="javascript: void(0);" data-documentid="'. $document_id .'">Assign Department Permission</a>
                            <a class="dropdown-item assign-document-permission-employee" href="javascript: void(0);" data-documentid="'. $document_id .'">Assign Employee Permission</a>';
                        }
                        else{
                            $check_update = $api->check_document_permissions('U', $document_id, $employee_id, $employee_department);
                            $check_delete = $api->check_document_permissions('D', $document_id, $employee_id, $employee_department);
                            $check_set_permission = $api->check_document_permissions('S', $document_id, $employee_id, $employee_department);

                            if($check_delete > 0){


                                //delete is only available for data center department
                                $get_department = $api->get_data_details_one_parameter("employee profile",$username)[0]['DEPARTMENT'];
                                if($get_department == "DEPT1"){
                                    $delete = '<a class="dropdown-item delete-document" href="javascript: void(0);" data-documentid="'. $document_id .'">Delete Document</a>';
                                }else{
                                    $delete = '';
                                }


                            }
                            else{
                                $delete = '';
                            }

                            if($check_set_permission > 0){
                                $assign_permission = '<a class="dropdown-item assign-document-permission-department" href="javascript: void(0);" data-documentid="'. $document_id .'">Assign Department Permission</a>
                                <a class="dropdown-item assign-document-permission-employee" href="javascript: void(0);" data-documentid="'. $document_id .'">Assign Employee Permission</a>';
                            }
                            else{
                                $assign_permission = '';
                            }

                            if($check_update > 0){
                                $update = '<a class="dropdown-item update-document" href="javascript: void(0);" data-documentid="'. $document_id .'">Update Document</a>';
                            }
                            else{
                                $update = '';
                            }
                        }

                        $view = '<a class="dropdown-item view-document-file" href="javascript: void(0);" data-documentid="'. $document_id .'">View Document</a>';

                        if($check_authorizer > 0){
                            if($publish == '0'){
                                if($publish_document > 0 || $view_all_documents > 0){
                                    $publish_unpublish = '<button type="button" class="btn btn-success waves-effect waves-light publish-document" data-documentid="'. $document_id .'" title="Publish Document">
                                                    <i class="bx bx-check font-size-16 align-middle"></i>
                                                </button>';
                                }
                                else{
                                    $publish_unpublish = '';
                                }
                            }
                            else{
                                if($unpublish_document > 0 || $view_all_documents > 0){
                                    $publish_unpublish = '<button type="button" class="btn btn-danger waves-effect waves-light unpublish-document" data-documentid="'. $document_id .'" title="Unpublish Document">
                                                    <i class="bx bx-x font-size-16 align-middle"></i>
                                                </button>';
                                }
                                else{
                                    $publish_unpublish = '';
                                }
                            }
                        }

                        $response[] = array(
                            'DOCUMENT_ID' => $document_id,
                            'DOCUMENT_NAME' => $document_name,
                            'DESCRIPTION' => $document_description,
                            'FULL_NAME' => $full_name,
                            'DEPARTMENT' => $department,
                            'DOCUMENT_CATEGORY' => $document_category,
                            'STATUS' => $document_status,
                            'DOCUMENT_EXTENSION' => $document_extension,
                            'DOCUMENT_SIZE' => $document_size,
                            'UPLOAD_DATE' => $upload_date . ' ' . $upload_time,
                            'PUBLISH_BY' => $publish_by_fullname,
                            'PUBLISH_DATE' => $publish_date . ' ' . $publish_time,
                            'ACTION' => '<div class="btn-group dropstart">
                                            <button type="button" class="btn btn-primary btn-sm dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">Action</button>
                                            <div class="dropdown-menu">
                                                '. $view .'
                                                '. $update .'
                                                '. $assign_permission .'
                                                '. $delete .'
                                                <a class="dropdown-item download-document" href="javascript: void(0);" data-documentid="'. $document_id .'">Protect & Download Document</a>
                                            </div>
                                        </div>'
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo()[2];
                }
            }
        }
    }
    # -------------------------------------------------------------

    # Document authorizer table
    else if($type == 'document authorizer table'){
        if ($api->databaseConnection()) {
            # Get role permission
            $delete_document_authorizer = $api->check_role_permissions($username, 175);

            $sql = $api->db_connection->prepare('SELECT DEPARTMENT, AUTHORIZER FROM tbldocumentauthorizer');

            if($sql->execute()){
                while($row = $sql->fetch()){
                    $department = trim($row['DEPARTMENT']);
                    $authorizer = trim($row['AUTHORIZER']);

                    $authorizer_details = $api->get_data_details_one_parameter('employee profile', $authorizer);
                    $authorizer_first_name = $authorizer_details[0]['FIRST_NAME'];
                    $authorizer_last_name = $authorizer_details[0]['LAST_NAME'];
                    $authorizer_middle_name = $authorizer_details[0]['MIDDLE_NAME'];
                    $authorizer_suffix = $authorizer_details[0]['SUFFIX'];
                    $authorizer_fullname = $api->get_full_name($authorizer_first_name, $authorizer_middle_name, $authorizer_last_name, $authorizer_suffix)[0]['REVERSE_FULL_NAME'];

                    $department_details = $api->get_data_details_one_parameter('department', $department);
                    $department_name = $department_details[0]['DEPARTMENT'];

                    if($delete_document_authorizer > 0){
                        $delete = '<button type="button" class="btn btn-danger waves-effect waves-light delete-document-authorizer" data-department="'. $department .'" data-authorizer="'. $authorizer .'" title="Delete Document Authorizer">
                                    <i class="bx bx-trash font-size-16 align-middle"></i>
                                </button>';
                    }
                    else{
                        $delete = '';
                    }

                    $response[] = array(
                        'DEPARTMENT' => $department_name,
                        'AUTHORIZER' => $authorizer_fullname,
                        'ACTION' => '<div class="d-flex gap-2">
                                '. $delete .'
                            </div>'
                    );
                }

                echo json_encode($response);
            }
            else{
                echo $sql->errorInfo()[2];
            }
        }
    }
    # -------------------------------------------------------------

    # Transmittal table
    else if($type == 'transmittal table'){
        if(isset($_POST['parameter1']) && isset($_POST['parameter2'])){
            if ($api->databaseConnection()) {
                $employee_details = $api->get_data_details_one_parameter('employee profile', $username);
                $employee_id = $employee_details[0]['EMPLOYEE_ID'];
                $employee_department = $employee_details[0]['DEPARTMENT'];

                # Get role permission
                $delete_transmittal = $api->check_role_permissions($username, 192);
                $receive_transmittal = $api->check_role_permissions($username, 193);
                $retransmit_transmittal = $api->check_role_permissions($username, 194);
                $file_transmittal = $api->check_role_permissions($username, 195);
                $cancel_transmittal = $api->check_role_permissions($username, 196);
                $view_transmittal_history = $api->check_role_permissions($username, 197);
                $view_all_transmittal = $api->check_role_permissions($username, 198);

                $parameter_1 = $_POST['parameter1'];
                $parameter_2 = $_POST['parameter2'];

                if($parameter_1 == 'transmittedto' || $parameter_1 == 'transmittedby' || $parameter_1 == 'status'){
                    if($view_all_transmittal > 0){
                        if($parameter_1 == 'transmittedto'){
                            $sql = $api->db_connection->prepare("SELECT TRANSMITTAL_ID, DESCRIPTION, STATUS, CURRENT_DEPARTMENT, TRANSMITTED_EMPLOYEE, TRANSMITTED_DEPARTMENT, LAST_TRANSACTION_DATE, LAST_TRANSACTION_TIME
                            FROM tbltransmittal
                            WHERE TRANSMITTED_DEPARTMENT = :parameter_2");
                        }
                        else if($parameter_1 == 'transmittedby'){
                            $sql = $api->db_connection->prepare("SELECT TRANSMITTAL_ID, DESCRIPTION, STATUS, CURRENT_DEPARTMENT, TRANSMITTED_EMPLOYEE, TRANSMITTED_DEPARTMENT, LAST_TRANSACTION_DATE, LAST_TRANSACTION_TIME
                            FROM tbltransmittal
                            WHERE CURRENT_DEPARTMENT = :parameter_2");
                        }
                        else{
                            $sql = $api->db_connection->prepare("SELECT TRANSMITTAL_ID, DESCRIPTION, STATUS, CURRENT_DEPARTMENT, TRANSMITTED_EMPLOYEE, TRANSMITTED_DEPARTMENT, LAST_TRANSACTION_DATE, LAST_TRANSACTION_TIME
                            FROM tbltransmittal
                            WHERE STATUS = :parameter_2");
                        }
                    }
                    else{
                        if($parameter_1 == 'transmittedto'){
                            $sql = $api->db_connection->prepare("SELECT TRANSMITTAL_ID, DESCRIPTION, STATUS, CURRENT_DEPARTMENT, TRANSMITTED_EMPLOYEE, TRANSMITTED_DEPARTMENT, LAST_TRANSACTION_DATE, LAST_TRANSACTION_TIME
                            FROM tbltransmittal
                            WHERE TRANSMITTED_DEPARTMENT = :parameter_2 AND (CURRENT_DEPARTMENT = :employee_department OR TRANSMITTED_EMPLOYEE = :employee_id OR ((TRANSMITTED_EMPLOYEE IS NULL OR TRANSMITTED_EMPLOYEE = '') AND TRANSMITTED_DEPARTMENT = :employee_department)) OR ((TRANSMITTED_EMPLOYEE IS NOT NULL AND TRANSMITTED_EMPLOYEE IN (SELECT SUBORDINATE_ID FROM tblemployeesubordinate WHERE EMPLOYEE_ID = :employee_id)))");
                        }
                        else if($parameter_1 == 'transmittedby'){
                            $sql = $api->db_connection->prepare("SELECT TRANSMITTAL_ID, DESCRIPTION, STATUS, CURRENT_DEPARTMENT, TRANSMITTED_EMPLOYEE, TRANSMITTED_DEPARTMENT, LAST_TRANSACTION_DATE, LAST_TRANSACTION_TIME
                            FROM tbltransmittal
                            WHERE CURRENT_DEPARTMENT = :parameter_2 AND (CURRENT_DEPARTMENT = :employee_department OR TRANSMITTED_EMPLOYEE = :employee_id OR ((TRANSMITTED_EMPLOYEE IS NULL OR TRANSMITTED_EMPLOYEE = '') AND TRANSMITTED_DEPARTMENT = :employee_department)) OR ((TRANSMITTED_EMPLOYEE IS NOT NULL AND TRANSMITTED_EMPLOYEE IN (SELECT SUBORDINATE_ID FROM tblemployeesubordinate WHERE EMPLOYEE_ID = :employee_id)))");
                        }
                        else{
                            $sql = $api->db_connection->prepare("SELECT TRANSMITTAL_ID, DESCRIPTION, STATUS, CURRENT_DEPARTMENT, TRANSMITTED_EMPLOYEE, TRANSMITTED_DEPARTMENT, LAST_TRANSACTION_DATE, LAST_TRANSACTION_TIME
                            FROM tbltransmittal
                            WHERE STATUS = :parameter_2 AND (CURRENT_DEPARTMENT = :employee_department OR TRANSMITTED_EMPLOYEE = :employee_id OR ((TRANSMITTED_EMPLOYEE IS NULL OR TRANSMITTED_EMPLOYEE = '') AND TRANSMITTED_DEPARTMENT = :employee_department)) OR ((TRANSMITTED_EMPLOYEE IS NOT NULL AND TRANSMITTED_EMPLOYEE IN (SELECT SUBORDINATE_ID FROM tblemployeesubordinate WHERE EMPLOYEE_ID = :employee_id)))");
                        }

                        $sql->bindParam(':employee_department', $employee_department);
                        $sql->bindParam(':employee_id', $employee_id);
                    }

                    $sql->bindParam(':parameter_2', $parameter_2);
                }
                else{
                    $parameter_1 = $api->check_date('empty', $_POST['parameter1'], '', 'Y-m-d', '', '', '');
                    $parameter_2 = $api->check_date('empty', $_POST['parameter2'], '', 'Y-m-d', '', '', '');

                    if(empty($parameter_1)){
                        $parameter_1 = date('Y-m-01');
                    }

                    if(empty($parameter_2)){
                        $parameter_2 = date('Y-m-t');
                    }

                    if($view_all_transmittal > 0){
                        $sql = $api->db_connection->prepare("SELECT TRANSMITTAL_ID, DESCRIPTION, STATUS, CURRENT_DEPARTMENT, TRANSMITTED_EMPLOYEE, TRANSMITTED_DEPARTMENT, LAST_TRANSACTION_DATE, LAST_TRANSACTION_TIME
                        FROM tbltransmittal
                        WHERE LAST_TRANSACTION_DATE BETWEEN :parameter_1 AND :parameter_2");
                    }
                    else{
                        $sql = $api->db_connection->prepare("SELECT TRANSMITTAL_ID, DESCRIPTION, STATUS, CURRENT_DEPARTMENT, TRANSMITTED_EMPLOYEE, TRANSMITTED_DEPARTMENT, LAST_TRANSACTION_DATE, LAST_TRANSACTION_TIME
                        FROM tbltransmittal
                        WHERE TRANSMITTAL_ID IN (SELECT DISTINCT(TRANSMITTAL_ID) AS TRANSMITTAL_ID FROM tbltransmittalhistory WHERE EMPLOYEE_FROM = :employee_id OR DEPARTMENT_FROM = :employee_department OR EMPLOYEE_TO = :employee_id OR DEPARTMENT_TO = :employee_department) AND LAST_TRANSACTION_DATE BETWEEN :parameter_1 AND :parameter_2");
                        $sql->bindParam(':employee_department', $employee_department);
                        $sql->bindParam(':employee_id', $employee_id);
                    }

                    $sql->bindParam(':parameter_1', $parameter_1);
                    $sql->bindParam(':parameter_2', $parameter_2);
                }

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $transmittal_id = trim($row['TRANSMITTAL_ID']);
                        $description = trim($row['DESCRIPTION']);
                        $status = trim($row['STATUS']);
                        $current_department = trim($row['CURRENT_DEPARTMENT']);
                        $current_department_details = $api->get_data_details_one_parameter('department', $current_department);
                        $current_department_name = $current_department_details[0]['DEPARTMENT'];
                        $transmitted_employee = trim($row['TRANSMITTED_EMPLOYEE']);
                        $transmitted_department = trim($row['TRANSMITTED_DEPARTMENT']);
                        $transmitted_department_details = $api->get_data_details_one_parameter('department', $transmitted_department);
                        $transmitted_department_name = $transmitted_department_details[0]['DEPARTMENT'];
                        $last_transaction_date = $api->check_date('empty', trim($row['LAST_TRANSACTION_DATE']), '', 'm/d/Y', '', '', '');
                        $last_transaction_time = $api->check_date('empty', trim($row['LAST_TRANSACTION_TIME']), '', 'h:i:s a', '', '', '');
                        $transmittal_status = $api->get_transmittal_status($status)[0]['BADGE'];
                        $transmittal_income_outgoing_status = $api->get_incoming_outgoing_status($employee_id, $employee_department, $current_department, $transmitted_employee, $transmitted_department, $status)[0]['BADGE'];

                        if($view_transmittal_history > 0){
                            $description = '<a href="javascript: void(0);" class="view-transmittal-history" data-transmittalid="'. $transmittal_id .'">' . trim($row['DESCRIPTION']) . '</a>';
                        }
                        else{
                            $description = trim($row['DESCRIPTION']);
                        }

                        if($view_all_transmittal > 0){
                            if($delete_transmittal > 0){
                                $delete = '<a class="dropdown-item delete-transmittal" href="javascript: void(0);" data-transmittalid="'. $transmittal_id .'">Delete Transmittal</a>';
                            }
                            else{
                                $delete = '';
                            }

                            if($status == '0' || $status == '2'){
                                if($receive_transmittal > 0){
                                    $receive = '<a class="dropdown-item receive-transmittal" href="javascript: void(0);" data-transmittalid="'. $transmittal_id .'">Receive Transmittal</a>';
                                }
                                else{
                                    $receive = '';
                                }
                            }
                            else{
                                $receive = '';
                            }

                            if($status == '1' || $status == '3' || $status == '4'){
                                if($retransmit_transmittal > 0){
                                    $retransmit = '<a class="dropdown-item retransmit-transmittal" href="javascript: void(0);" data-transmittalid="'. $transmittal_id .'">Re-Transmit Transmittal</a>';
                                }
                                else{
                                    $retransmit = '';
                                }
                            }
                            else{
                                $retransmit = '';
                            }

                            if($status == '1'){
                                if($file_transmittal > 0){
                                    $file = '<a class="dropdown-item file-transmittal" href="javascript: void(0);" data-transmittalid="'. $transmittal_id .'">File Transmittal</a>';
                                }
                                else{
                                    $file = '';
                                }
                            }
                            else{
                                $file = '';
                            }

                            if($status == '0' || $status == '2'){
                                if($cancel_transmittal > 0){
                                    $cancel = '<a class="dropdown-item cancel-transmittal" href="javascript: void(0);" data-transmittalid="'. $transmittal_id .'">Cancel Transmittal</a>';
                                }
                                else{
                                    $cancel = '';
                                }
                            }
                            else{
                                $cancel = '';
                            }
                        }
                        else{
                            if($status == '0'){
                                if($delete_transmittal > 0){
                                    $delete = '<a class="dropdown-item delete-transmittal" href="javascript: void(0);" data-transmittalid="'. $transmittal_id .'">Delete Transmittal</a>';
                                }
                                else{
                                    $delete = '';
                                }
                            }
                            else{
                                $delete = '';
                            }

                            if(($transmitted_employee == $employee_id || (empty($transmitted_employee) && $transmitted_department == $employee_department)) && ($status == '0' || $status == '2')){
                                if($receive_transmittal > 0){
                                    $receive = '<a class="dropdown-item receive-transmittal" href="javascript: void(0);" data-transmittalid="'. $transmittal_id .'">Receive Transmittal</a>';
                                }
                                else{
                                    $receive = '';
                                }
                            }
                            else{
                                $receive = '';
                            }

                            if(($transmitted_department == $employee_department && ($status == '1' || $status == '3')) || ($current_department == $employee_department && $status == '4')){
                                if($retransmit_transmittal > 0){
                                    $retransmit = '<a class="dropdown-item retransmit-transmittal" href="javascript: void(0);" data-transmittalid="'. $transmittal_id .'">Re-Transmit Transmittal</a>';
                                }
                                else{
                                    $retransmit = '';
                                }
                            }
                            else{
                                $retransmit = '';
                            }

                            if($transmitted_department == $employee_department && $status == '1'){
                                if($file_transmittal > 0){
                                    $file = '<a class="dropdown-item file-transmittal" href="javascript: void(0);" data-transmittalid="'. $transmittal_id .'">File Transmittal</a>';
                                }
                                else{
                                    $file = '';
                                }
                            }
                            else{
                                $file = '';
                            }

                            if($current_department == $employee_department && ($status == '0' || $status == '2')){
                                if($cancel_transmittal > 0){
                                    $cancel = '<a class="dropdown-item cancel-transmittal" href="javascript: void(0);" data-transmittalid="'. $transmittal_id .'">Cancel Transmittal</a>';
                                }
                                else{
                                    $cancel = '';
                                }
                            }
                            else{
                                $cancel = '';
                            }
                        }

                        if(!empty($transmitted_employee)){
                            $transmitted_employee_details = $api->get_data_details_one_parameter('employee profile', $transmitted_employee);
                            $transmitted_employee_first_name = $transmitted_employee_details[0]['FIRST_NAME'];
                            $transmitted_employee_last_name = $transmitted_employee_details[0]['LAST_NAME'];
                            $transmitted_employee_middle_name = $transmitted_employee_details[0]['MIDDLE_NAME'];
                            $transmitted_employee_suffix = $transmitted_employee_details[0]['SUFFIX'];
                            $transmitted_employee_fullname = $api->get_full_name($transmitted_employee_first_name, $transmitted_employee_middle_name, $transmitted_employee_last_name, $transmitted_employee_suffix)[0]['REVERSE_FULL_NAME'];

                            $transmitted_to = $transmitted_employee_fullname;
                        }
                        else{
                            $transmitted_to = 'Public';
                        }

                        $response[] = array(
                            'DESCRIPTION' => $description,
                            'CURRENT' => $current_department_name,
                            'TRANSMITTED' => $transmitted_to . '<br/>' . $transmitted_department_name,
                            'TRANSACTION_DATE' => $last_transaction_date . '<br/>' . $last_transaction_time,
                            'STATUS' => $transmittal_status,
                            'INCOMING_OUTGOING' => $transmittal_income_outgoing_status,
                            'ACTION' => '<div class="btn-group dropstart">
                                            <button type="button" class="btn btn-primary btn-sm dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">Action</button>
                                            <div class="dropdown-menu">
                                                <a class="dropdown-item update-transmittal" href="javascript: void(0);" data-transmittalid="'. $transmittal_id .'">Update Transmittal</a>
                                                '. $receive .'
                                                '. $retransmit .'
                                                '. $file .'
                                                '. $cancel .'
                                                '. $delete .'
                                            </div>
                                        </div>'
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo()[2];
                }
            }
        }
    }
    # -------------------------------------------------------------

    # Transmittal history table
    else if($type == 'transmittal history table'){
        if(isset($_POST['parameter'])){
            if ($api->databaseConnection()) {
                $transmittal_id = $_POST['parameter'];

                $sql = $api->db_connection->prepare('SELECT TRASMITTAL_TYPE, EMPLOYEE_FROM, DEPARTMENT_FROM, EMPLOYEE_TO, DEPARTMENT_TO, TRANSACTION_DATE, TRANSACTION_TIME, RECEIVED_BY FROM tbltransmittalhistory WHERE TRANSMITTAL_ID = :transmittal_id');
                $sql->bindParam(':transmittal_id', $transmittal_id);

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $transmittal_type = trim($row['TRASMITTAL_TYPE']);
                        $employee_from = trim($row['EMPLOYEE_FROM']);
                        $department_from = trim($row['DEPARTMENT_FROM']);
                        $department_from_details = $api->get_data_details_one_parameter('department', $department_from);
                        $department_from_name = $department_from_details[0]['DEPARTMENT'];
                        $employee_to = trim($row['EMPLOYEE_TO']);
                        $department_to = trim($row['DEPARTMENT_TO']);
                        $department_to_details = $api->get_data_details_one_parameter('department', $department_to);
                        $department_to_name = $department_to_details[0]['DEPARTMENT'];
                        $received_by = trim($row['RECEIVED_BY']);
                        $transmittal_type = $api->get_transmittal_type($transmittal_type)[0]['BADGE'];

                        $employee_from_details = $api->get_data_details_one_parameter('employee profile', $employee_from);
                        $employee_from_first_name = $employee_from_details[0]['FIRST_NAME'];
                        $employee_from_last_name = $employee_from_details[0]['LAST_NAME'];
                        $employee_from_middle_name = $employee_from_details[0]['MIDDLE_NAME'];
                        $employee_from_suffix = $employee_from_details[0]['SUFFIX'];
                        $employee_from_full_name = $api->get_full_name($employee_from_first_name, $employee_from_middle_name, $employee_from_last_name, $employee_from_suffix)[0]['REVERSE_FULL_NAME'];

                        if(!empty($employee_to)){
                            $employee_to_details = $api->get_data_details_one_parameter('employee profile', $employee_to);
                            $employee_to_first_name = $employee_to_details[0]['FIRST_NAME'];
                            $employee_to_last_name = $employee_to_details[0]['LAST_NAME'];
                            $employee_to_middle_name = $employee_to_details[0]['MIDDLE_NAME'];
                            $employee_to_suffix = $employee_to_details[0]['SUFFIX'];
                            $employee_to_full_name = $api->get_full_name($employee_to_first_name, $employee_to_middle_name, $employee_to_last_name, $employee_to_suffix)[0]['REVERSE_FULL_NAME'];
                        }
                        else{
                            $employee_to_full_name = 'Public';
                        }

                        if(!empty($received_by)){
                            $received_by_details = $api->get_data_details_one_parameter('employee profile', $received_by);
                            $received_by_first_name = $received_by_details[0]['FIRST_NAME'];
                            $received_by_last_name = $received_by_details[0]['LAST_NAME'];
                            $received_by_middle_name = $received_by_details[0]['MIDDLE_NAME'];
                            $received_by_suffix = $received_by_details[0]['SUFFIX'];
                            $received_by_full_name = $api->get_full_name($received_by_first_name, $received_by_middle_name, $received_by_last_name, $received_by_suffix)[0]['REVERSE_FULL_NAME'];
                        }
                        else{
                            $received_by_full_name = '';
                        }

                        $transaction_date = $api->check_date('empty', trim($row['TRANSACTION_DATE']), '', 'm/d/Y', '', '', '');
                        $transaction_time = $api->check_date('empty', trim($row['TRANSACTION_TIME']), '', 'H:i:s', '', '', '');

                        $response[] = array(
                            'TRANSACTION_DATE' => $transaction_date . '<br/>' . $transaction_time,
                            'TRANSMITTAL_TYPE' => $transmittal_type,
                            'TRANSMITTAL_FROM' => $employee_from_full_name . '<br/>' . $department_from_name,
                            'TRANSMITTAL_TO' => $employee_to_full_name . '<br/>' . $department_to_name,
                            'RECEIVED_BY' => $received_by_full_name,
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo()[2];
                }

            }
        }
    }
    # -------------------------------------------------------------

    # Suggest to win table
    else if($type == 'suggest to win table'){
        if(isset($_POST['parameter1']) && isset($_POST['parameter2'])){
            if ($api->databaseConnection()) {
                $employee_details = $api->get_data_details_one_parameter('employee profile', $username);
                $employee_id = $employee_details[0]['EMPLOYEE_ID'];

                # Get role permission
                $delete_suggest_to_win = $api->check_role_permissions($username, 202);
                $view_all_department_suggestions = $api->check_role_permissions($username, 203);
                $view_all_suggestions = $api->check_role_permissions($username, 204);
                $cancel_suggest_to_win = $api->check_role_permissions($username, 205);
                $adjust_vote_end_date = $api->check_role_permissions($username, 212);

                $parameter_1 = $api->check_date('empty', $_POST['parameter1'], '', 'Y-m-d', '', '', '');
                $parameter_2 = $api->check_date('empty', $_POST['parameter2'], '', 'Y-m-d', '', '', '');

                if(empty($parameter_1)){
                    $parameter_1 = date('Y-m-01');
                }

                if(empty($parameter_2)){
                    $parameter_2 = date('Y-m-t');
                }

                if($view_all_suggestions > 0){
                    $sql = $api->db_connection->prepare("SELECT STW_ID, EMPLOYEE_ID, FILE_PATH, STATUS, TITLE, POST_DATE, POST_TIME, DECISION_DATE, DECISION_TIME, VOTING_PERIOD
                    FROM tblstw
                    WHERE POST_DATE BETWEEN :parameter_1 AND :parameter_2");
                }
                else if($view_all_department_suggestions > 0){
                    $sql = $api->db_connection->prepare("SELECT STW_ID, EMPLOYEE_ID, FILE_PATH, STATUS, TITLE, POST_DATE, POST_TIME, DECISION_DATE, DECISION_TIME, VOTING_PERIOD
                    FROM tblstw
                    WHERE POST_DATE BETWEEN :parameter_1 AND :parameter_2 AND (EMPLOYEE_ID = :employee_id OR (EMPLOYEE_ID IN (SELECT SUBORDINATE_ID FROM tblemployeesubordinate WHERE EMPLOYEE_ID = :employee_id) OR EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM tblemployeeauthorizer WHERE AUTHORIZER_ID = :employee_id)))");
                    $sql->bindParam(':employee_id', $employee_id);
                }
                else{
                    $sql = $api->db_connection->prepare("SELECT STW_ID, EMPLOYEE_ID, FILE_PATH, STATUS, TITLE, POST_DATE, POST_TIME, DECISION_DATE, DECISION_TIME, VOTING_PERIOD
                    FROM tblstw
                    WHERE POST_DATE BETWEEN :parameter_1 AND :parameter_2 AND EMPLOYEE_ID = :employee_id");
                    $sql->bindParam(':employee_id', $employee_id);
                }

                $sql->bindParam(':parameter_1', $parameter_1);
                $sql->bindParam(':parameter_2', $parameter_2);

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $stw_id = trim($row['STW_ID']);
                        $employee_id = trim($row['EMPLOYEE_ID']);
                        $status = trim($row['STATUS']);
                        $file_path = trim($row['FILE_PATH']);
                        $post_date = $api->check_date('empty', trim($row['POST_DATE']), '', 'm/d/Y', '', '', '');
                        $post_time = $api->check_date('empty', trim($row['POST_TIME']), '', 'h:i:s a', '', '', '');
                        $voting_period = $api->check_date('empty', trim($row['VOTING_PERIOD']), '', 'm/d/Y', '', '', '');
                        $decision_date = $api->check_date('empty', trim($row['DECISION_DATE']), '', 'm/d/Y', '', '', '');
                        $decision_time = $api->check_date('empty', trim($row['DECISION_TIME']), '', 'h:i:s a', '', '', '');
                        $stw_status = $api->get_stw_status($status)[0]['BADGE'];

                        if(!empty($file_path)){
                            $title = '<a href="'. $file_path .'" target="_blank">' . trim($row['TITLE']) . '</a>';
                        }
                        else{
                            $title = trim($row['TITLE']);
                        }

                        $employee_details = $api->get_data_details_one_parameter('employee profile', $employee_id);
                        $employee_first_name = $employee_details[0]['FIRST_NAME'];
                        $employee_last_name = $employee_details[0]['LAST_NAME'];
                        $employee_middle_name = $employee_details[0]['MIDDLE_NAME'];
                        $employee_suffix = $employee_details[0]['SUFFIX'];
                        $employee_full_name = $api->get_full_name($employee_first_name, $employee_middle_name, $employee_last_name, $employee_suffix)[0]['REVERSE_FULL_NAME'];

                         if($status == '0'){
                            if($delete_suggest_to_win > 0){
                                $delete = '<button type="button" class="btn btn-danger waves-effect waves-light delete-suggest-to-win" data-stwid="'. $stw_id .'" title="Delete Suggest To Win">
                                            <i class="bx bx-trash font-size-16 align-middle"></i>
                                        </button>';
                            }
                            else{
                                $delete = '';
                            }

                            if($cancel_suggest_to_win > 0){
                                $cancel = '<button type="button" class="btn btn-warning waves-effect waves-light cancel-suggest-to-win" data-stwid="'. $stw_id .'" title="Cancel Suggest To Win">
                                            <i class="bx bx-block font-size-16 align-middle"></i>
                                        </button>';
                            }
                            else{
                                $cancel = '';
                            }

                            $adjust = '';
                        }
                        else if($status == '1'){
                            if($adjust_vote_end_date > 0){
                                $adjust = '<button type="button" class="btn btn-success waves-effect waves-light adjust-suggest-to-win" data-stwid="'. $stw_id .'" title="Adjust Vote End Date">
                                            <i class="bx bx-calendar-check font-size-16 align-middle"></i>
                                        </button>';
                            }
                            else{
                                $adjust = '';
                            }

                            $cancel = '';
                            $delete = '';
                        }
                        else{
                            $adjust = '';
                            $cancel = '';
                            $delete = '';
                        }


                        $response[] = array(
                            'EMPLOYEE' => $employee_full_name,
                            'TITLE' => $title,
                            'STATUS' => $stw_status,
                            'POST_DATE' => $post_date . '<br/>' . $post_time,
                            'DECISION_DATE' => $decision_date . '<br/>' . $decision_time,
                            'VOTING_PERIOD' => $voting_period,
                            'ACTION' => '<div class="d-flex gap-2">
                                <button type="button" class="btn btn-primary waves-effect waves-light update-suggest-to-win" data-stwid="'. $stw_id .'" title="View Details">
                                    <i class="bx bx-show font-size-16 align-middle"></i>
                                </button>
                                '. $adjust . $cancel . $delete .'
                            </div>'
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo()[2];
                }
            }
        }
    }
    # -------------------------------------------------------------

    # Suggest to win approval table
    else if($type == 'suggest to win approval table'){
        if(isset($_POST['parameter1']) && isset($_POST['parameter2'])){
            if ($api->databaseConnection()) {
                $employee_details = $api->get_data_details_one_parameter('employee profile', $username);
                $employee_id = $employee_details[0]['EMPLOYEE_ID'];

                # Get role permission
                $approve_suggest_to_win = $api->check_role_permissions($username, 207);
                $reject_suggest_to_win = $api->check_role_permissions($username, 208);
                $cancel_suggest_to_win = $api->check_role_permissions($username, 209);

                $parameter_1 = $api->check_date('empty', $_POST['parameter1'], '', 'Y-m-d', '', '', '');
                $parameter_2 = $api->check_date('empty', $_POST['parameter2'], '', 'Y-m-d', '', '', '');

                if(empty($parameter_1)){
                    $parameter_1 = date('Y-m-01');
                }

                if(empty($parameter_2)){
                    $parameter_2 = date('Y-m-t');
                }

                $sql = $api->db_connection->prepare("SELECT STW_ID, EMPLOYEE_ID, STATUS, FILE_PATH, TITLE, DESCRIPTION, REASON, BENEFITS, POST_DATE, POST_TIME
                FROM tblstw
                WHERE STATUS = '0' AND POST_DATE BETWEEN :parameter_1 AND :parameter_2 AND (EMPLOYEE_ID = :employee_id OR (EMPLOYEE_ID IN (SELECT SUBORDINATE_ID FROM tblemployeesubordinate WHERE EMPLOYEE_ID = :employee_id) OR EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM tblemployeeauthorizer WHERE AUTHORIZER_ID = :employee_id)))");
                $sql->bindParam(':employee_id', $employee_id);

                $sql->bindParam(':parameter_1', $parameter_1);
                $sql->bindParam(':parameter_2', $parameter_2);

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $stw_id = trim($row['STW_ID']);
                        $employee_id = trim($row['EMPLOYEE_ID']);
                        $status = trim($row['STATUS']);
                        $file_path = trim($row['FILE_PATH']);
                        $description = trim($row['DESCRIPTION']);
                        $reason = trim($row['REASON']);
                        $benefits = trim($row['BENEFITS']);
                        $post_date = $api->check_date('empty', trim($row['POST_DATE']), '', 'm/d/Y', '', '', '');
                        $post_time = $api->check_date('empty', trim($row['POST_TIME']), '', 'h:i:s a', '', '', '');
                        $stw_status = $api->get_stw_status($status)[0]['BADGE'];

                        if(!empty($file_path)){
                            $title = '<a href="'. $file_path .'" target="_blank">' . trim($row['TITLE']) . '</a>';
                        }
                        else{
                            $title = trim($row['TITLE']);
                        }

                        $employee_details = $api->get_data_details_one_parameter('employee profile', $employee_id);
                        $employee_first_name = $employee_details[0]['FIRST_NAME'];
                        $employee_last_name = $employee_details[0]['LAST_NAME'];
                        $employee_middle_name = $employee_details[0]['MIDDLE_NAME'];
                        $employee_suffix = $employee_details[0]['SUFFIX'];
                        $employee_full_name = $api->get_full_name($employee_first_name, $employee_middle_name, $employee_last_name, $employee_suffix)[0]['REVERSE_FULL_NAME'];

                        if($cancel_suggest_to_win > 0){
                            $cancel = '<button type="button" class="btn btn-warning waves-effect waves-light cancel-suggest-to-win" data-stwid="'. $stw_id .'" title="Cancel Suggest To Win">
                                        <i class="bx bx-block font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $cancel = '';
                        }

                        if($approve_suggest_to_win > 0){
                            $approve = '<button type="button" class="btn btn-success waves-effect waves-light approve-suggest-to-win" data-stwid="'. $stw_id .'" title="Approve Suggest To Win">
                                        <i class="bx bx-check font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $approve = '';
                        }

                        if($reject_suggest_to_win > 0){
                            $reject = '<button type="button" class="btn btn-danger waves-effect waves-light reject-suggest-to-win" data-stwid="'. $stw_id .'" title="Reject Suggest To Win">
                                        <i class="bx bx-x font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $reject = '';
                        }

                        $response[] = array(
                            'EMPLOYEE' => $employee_full_name,
                            'TITLE' => $title,
                            'DESCRIPTION' => $description,
                            'REASON' => $reason,
                            'BENEFITS' => $benefits,
                            'STATUS' => $stw_status,
                            'POST_DATE' => $post_date . '<br/>' . $post_time,
                            'ACTION' => '<div class="d-flex gap-2">
                                <button type="button" class="btn btn-primary waves-effect waves-light view-suggest-to-win" data-stwid="'. $stw_id .'" title="View Details">
                                    <i class="bx bx-show font-size-16 align-middle"></i>
                                </button>
                                    '. $approve . $reject . $cancel .'
                                </div>'
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo()[2];
                }
            }
        }
    }
    # -------------------------------------------------------------

    # Suggest to win voting table
    else if($type == 'suggest to win voting table'){
        if ($api->databaseConnection()) {
            $employee_details = $api->get_data_details_one_parameter('employee profile', $username);
            $employee_id = $employee_details[0]['EMPLOYEE_ID'];

            # Get role permission
            $vote_suggest_to_win = $api->check_role_permissions($username, 211);

            $sql = $api->db_connection->prepare("SELECT STW_ID, EMPLOYEE_ID, STATUS, FILE_PATH, TITLE, DESCRIPTION, REASON, BENEFITS, DECISION_DATE, DECISION_TIME, VOTING_PERIOD
            FROM tblstw
            WHERE STATUS = '1' AND VOTING_PERIOD >= :system_date AND EMPLOYEE_ID != :employee_id AND EMPLOYEE_ID NOT IN (SELECT SUBORDINATE_ID FROM tblemployeesubordinate WHERE EMPLOYEE_ID = :employee_id)");
            $sql->bindParam(':system_date', $system_date);
            $sql->bindParam(':employee_id', $employee_id);

            if($sql->execute()){
                while($row = $sql->fetch()){
                    $stw_id = trim($row['STW_ID']);
                    $employee = trim($row['EMPLOYEE_ID']);
                    $status = trim($row['STATUS']);
                    $file_path = trim($row['FILE_PATH']);
                    $description = trim($row['DESCRIPTION']);
                    $reason = trim($row['REASON']);
                    $benefits = trim($row['BENEFITS']);
                    $voting_period = $api->check_date('empty', trim($row['VOTING_PERIOD']), '', 'm/d/Y', '', '', '');
                    $decision_date = $api->check_date('empty', trim($row['DECISION_DATE']), '', 'm/d/Y', '', '', '');
                    $decision_time = $api->check_date('empty', trim($row['DECISION_TIME']), '', 'h:i:s a', '', '', '');
                    $stw_status = $api->get_stw_status($status)[0]['BADGE'];

                    $vote_status_count = $api->check_data_exist_two_parameter('suggest to win vote', $stw_id, $employee_id);

                    if($vote_status_count > 0){
                        $vote_status = '<span class="badge bg-success">Voted</span>';
                    }
                    else{
                        $vote_status = '<span class="badge bg-danger">Not Yet Voted</span>';
                    }

                    if(!empty($file_path)){
                        $title = '<a href="'. $file_path .'" target="_blank">' . trim($row['TITLE']) . '</a>';
                    }
                    else{
                        $title = trim($row['TITLE']);
                    }

                    if($vote_suggest_to_win > 0){
                        $vote = '<button type="button" class="btn btn-success waves-effect waves-light vote-suggest-to-win" data-stwid="'. $stw_id .'" data-employeeid="'. $employee_id .'" title="Vote Suggest To Win">
                                    <i class="bx bx-badge-check font-size-16 align-middle"></i>
                                </button>';
                    }
                    else{
                        $vote = '';
                    }

                    $response[] = array(
                        'TITLE' => $title,
                        'DESCRIPTION' => $description,
                        'REASON' => $reason,
                        'BENEFITS' => $benefits,
                        'STATUS' => $stw_status,
                        'VOTE_STATUS' => $vote_status,
                        'DECISION_DATE' => $decision_date . '<br/>' . $decision_time,
                        'VOTING_PERIOD' => $voting_period,
                        'ACTION' => '<div class="d-flex gap-2">
                                <button type="button" class="btn btn-primary waves-effect waves-light view-suggest-to-win" data-stwid="'. $stw_id .'" title="View Details">
                                    <i class="bx bx-show font-size-16 align-middle"></i>
                                </button>
                                '. $vote .'
                            </div>'
                    );
                }

                echo json_encode($response);
            }
            else{
                echo $sql->errorInfo()[2];
            }
        }
    }
    # -------------------------------------------------------------

    # Suggest to win vote summary table
    else if($type == 'suggest to win vote summary table'){
        if(isset($_POST['parameter1']) && isset($_POST['parameter2'])){
            if ($api->databaseConnection()) {
                $rank = 1;
                # Get role permission
                $view_suggest_to_win_votes = $api->check_role_permissions($username, 214);

                $parameter_1 = $_POST['parameter1'];
                $parameter_2 = $_POST['parameter2'];

                if(empty($parameter_1)){
                    $parameter_1 = date('m');
                }

                if(empty($parameter_2)){
                    $parameter_2 = date('Y');
                }

                $sql = $api->db_connection->prepare("SELECT STW_ID, SATISFACTION, QUALITY, INNOVATION, FEASIBILITY, TOTAL
                FROM tblstwvotesummary
                WHERE STW_ID IN (SELECT STW_ID FROM tblstw WHERE STATUS = '1' AND VOTING_PERIOD < :system_date AND MONTH(DECISION_DATE) = :parameter_1 AND YEAR(DECISION_DATE) = :parameter_2) ORDER BY TOTAL DESC");
                $sql->bindParam(':system_date', $system_date);
                $sql->bindParam(':parameter_1', $parameter_1);
                $sql->bindParam(':parameter_2', $parameter_2);

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $stw_id = trim($row['STW_ID']);
                        $satisfaction = trim($row['SATISFACTION']);
                        $quality = trim($row['QUALITY']);
                        $innovation = trim($row['INNOVATION']);
                        $feasibility = trim($row['FEASIBILITY']);
                        $total = trim($row['TOTAL']);

                        $stw_details = $api->get_data_details_one_parameter('suggest to win', $stw_id);
                        $file_path = $stw_details[0]['FILE_PATH'];
                        $employee_id = $stw_details[0]['EMPLOYEE_ID'];

                        if(!empty($file_path)){
                            $title = '<a href="'. $file_path .'" target="_blank">' . $stw_details[0]['TITLE'] . '</a>';
                        }
                        else{
                            $title = $stw_details[0]['TITLE'];
                        }

                        $employee_details = $api->get_data_details_one_parameter('employee profile', $employee_id);
                        $employee_first_name = $employee_details[0]['FIRST_NAME'];
                        $employee_last_name = $employee_details[0]['LAST_NAME'];
                        $employee_middle_name = $employee_details[0]['MIDDLE_NAME'];
                        $employee_suffix = $employee_details[0]['SUFFIX'];
                        $employee_full_name = $api->get_full_name($employee_first_name, $employee_middle_name, $employee_last_name, $employee_suffix)[0]['REVERSE_FULL_NAME'];

                        if($view_suggest_to_win_votes > 0){
                            $vote = '<button type="button" class="btn btn-success waves-effect waves-light view-suggest-to-win-votes" data-stwid="'. $stw_id .'" title="View Suggest To Win Votes">
                                        <i class="bx bx-list-check font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $vote = '';
                        }

                        $response[] = array(
                            'EMPLOYEE' => $employee_full_name,
                            'TITLE' => $title,
                            'SATISFACTION' => $satisfaction,
                            'QUALITY' => $quality,
                            'INNOVATION' => $innovation,
                            'FEASIBILITY' => $feasibility,
                            'TOTAL' => $total,
                            'RANK' => $rank,
                            'ACTION' => '<div class="d-flex gap-2">
                                <button type="button" class="btn btn-primary waves-effect waves-light view-suggest-to-win" data-stwid="'. $stw_id .'" title="View Details">
                                    <i class="bx bx-show font-size-16 align-middle"></i>
                                </button>
                                '. $vote .'
                            </div>'
                        );

                        $rank++;
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo()[2];
                }
            }
        }
    }
    # -------------------------------------------------------------

    # Suggest to win vote details
    else if($type == 'suggest to win vote details table'){
        if(isset($_POST['parameter'])){
            if ($api->databaseConnection()) {
                $stw_id = $_POST['parameter'];

                $sql = $api->db_connection->prepare('SELECT EMPLOYEE_ID, SATISFACTION, QUALITY, INNOVATION, FEASIBILITY, VOTE_DATE, VOTE_TIME, REMARKS FROM tblstwvote WHERE STW_ID = :stw_id');
                $sql->bindParam(':stw_id', $stw_id);

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $employee_id = trim($row['EMPLOYEE_ID']);
                        $remarks = trim($row['REMARKS']);
                        $satisfaction = $row['SATISFACTION'] * 0.3;
                        $quality = $row['QUALITY'] * 0.2;
                        $innovation = $row['INNOVATION'] * 0.2;
                        $feasibility = $row['FEASIBILITY'] * 0.3;
                        $total = $satisfaction + $quality + $innovation + $feasibility;

                        $employee_details = $api->get_data_details_one_parameter('employee profile', $employee_id);
                        $employee_first_name = $employee_details[0]['FIRST_NAME'];
                        $employee_last_name = $employee_details[0]['LAST_NAME'];
                        $employee_middle_name = $employee_details[0]['MIDDLE_NAME'];
                        $employee_suffix = $employee_details[0]['SUFFIX'];
                        $employee_full_name = $api->get_full_name($employee_first_name, $employee_middle_name, $employee_last_name, $employee_suffix)[0]['REVERSE_FULL_NAME'];

                        $vote_date = $api->check_date('empty', trim($row['VOTE_DATE']), '', 'm/d/Y', '', '', '');
                        $vote_time = $api->check_date('empty', trim($row['VOTE_TIME']), '', 'h:i:s a', '', '', '');

                        $stw_details = $api->get_data_details_one_parameter('suggest to win', $stw_id);
                        $title = $stw_details[0]['TITLE'];

                        $response[] = array(
                            'FULL_NAME' => $employee_full_name,
                            'TITLE' => $title,
                            'SATISFACTION' => number_format($satisfaction, 2),
                            'QUALITY' => number_format($quality, 2),
                            'INNOVATION' => number_format($innovation, 2),
                            'FEASIBILITY' => number_format($feasibility, 2),
                            'TOTAL' => number_format($total, 2),
                            'VOTE_DATE' => $vote_date . ' ' . $vote_time,
                            'REMARKS' => $remarks
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo()[2];
                }

            }
        }
    }
    # -------------------------------------------------------------

    # Training room log table
    else if($type == 'training room log table'){
        if(isset($_POST['parameter1']) && isset($_POST['parameter2'])){
            if ($api->databaseConnection()) {
                $parameter_1 = $api->check_date('empty', $_POST['parameter1'], '', 'Y-m-d', '', '', '');
                $parameter_2 = $api->check_date('empty', $_POST['parameter2'], '', 'Y-m-d', '', '', '');

                if(empty($parameter_1)){
                    $parameter_1 = date('Y-m-01');
                }

                if(empty($parameter_2)){
                    $parameter_2 = date('Y-m-t');
                }

                # Get role permission
                $delete_training_room_log = $api->check_role_permissions($username, 223);
                $cancel_training_room_log = $api->check_role_permissions($username, 224);

                $employee_details = $api->get_data_details_one_parameter('employee profile', $username);
                $emp_id = $employee_details[0]['EMPLOYEE_ID'];

                $sql = $api->db_connection->prepare('SELECT LOG_ID, EMPLOYEE_ID, START_DATE, START_TIME, END_TIME, REQUEST_DATE, REQUEST_TIME, STATUS, DECISION_DATE, DECISION_TIME, DECISION_BY, OTHER_PARTICIPANT, FAN, AIRCON, LIGHTS, REASON FROM tbltrainingroomlogsheet WHERE START_DATE BETWEEN :parameter_1 AND :parameter_2 LIMIT 200');
                $sql->bindParam(':parameter_1', $parameter_1);
                $sql->bindParam(':parameter_2', $parameter_2);

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $equipment = '';
                        $participant = '';
                        $log_id = trim($row['LOG_ID']);
                        $employee_id = trim($row['EMPLOYEE_ID']);
                        $status = trim($row['STATUS']);
                        $decision_by = trim($row['DECISION_BY']);
                        $reason = trim($row['REASON']);
                        $other_participant = trim($row['OTHER_PARTICIPANT']);
                        $fan = $row['FAN'];
                        $aicon = $row['AIRCON'];
                        $lights = $row['LIGHTS'];
                        $start_date = $api->check_date('empty', trim($row['START_DATE']), '', 'm/d/Y', '', '', '');
                        $start_time = $api->check_date('empty', trim($row['START_TIME']), '', 'h:i:s a', '', '', '');
                        $end_time = $api->check_date('empty', trim($row['END_TIME']), '', 'h:i:s a', '', '', '');
                        $request_date = $api->check_date('empty', trim($row['REQUEST_DATE']), '', 'm/d/Y', '', '', '');
                        $request_time = $api->check_date('empty', trim($row['REQUEST_TIME']), '', 'h:i:s a', '', '', '');
                        $decision_date = $api->check_date('empty', trim($row['DECISION_DATE']), '', 'm/d/Y', '', '', '');
                        $decision_time = $api->check_date('empty', trim($row['DECISION_TIME']), '', 'h:i:s a', '', '', '');
                        $training_room_log_status = $api->get_training_room_log_status($status)[0]['BADGE'];

                        if(!empty($decision_by)){
                            $decision_by_details = $api->get_data_details_one_parameter('employee profile', $decision_by);
                            $decision_by_first_name = $decision_by_details[0]['FIRST_NAME'];
                            $decision_by_last_name = $decision_by_details[0]['LAST_NAME'];
                            $decision_by_middle_name = $decision_by_details[0]['MIDDLE_NAME'];
                            $decision_by_suffix = $decision_by_details[0]['SUFFIX'];
                            $decision_by_fullname = $api->get_full_name($decision_by_first_name, $decision_by_middle_name, $decision_by_last_name, $decision_by_suffix)[0]['REVERSE_FULL_NAME'];
                        }
                        else{
                            $decision_by_fullname = '';
                        }

                        $employee_details = $api->get_data_details_one_parameter('employee profile', $employee_id);
                        $employee_first_name = $employee_details[0]['FIRST_NAME'];
                        $employee_last_name = $employee_details[0]['LAST_NAME'];
                        $employee_middle_name = $employee_details[0]['MIDDLE_NAME'];
                        $employee_suffix = $employee_details[0]['SUFFIX'];
                        $employee_full_name = $api->get_full_name($employee_first_name, $employee_middle_name, $employee_last_name, $employee_suffix)[0]['REVERSE_FULL_NAME'];

                        if($status == '0' && $cancel_training_room_log > 0 && $employee_id == $emp_id){
                            $cancel = '<button type="button" class="btn btn-warning waves-effect waves-light cancel-training-room-log" data-logid="'. $log_id .'" title="Cancel Training Room Log">
                                        <i class="bx bx-calendar-x font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $cancel = '';
                        }

                        if($delete_training_room_log > 0){
                            $delete = '<button type="button" class="btn btn-danger waves-effect waves-light delete-training-room-log" data-logid="'. $log_id .'" title="Delete Training Room Log">
                                        <i class="bx bx-trash font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $delete = '';
                        }

                        if($employee_id == $emp_id){
                            $locked = '0';
                        }
                        else{
                            $locked = '1';
                        }

                        if($fan > 0){
                            if($fan == 1){
                                $equipment .= $fan . ' Fan <br/>';
                            }
                            else{
                                $equipment .= $fan . ' Fans <br/>';
                            }
                        }

                        if($aicon > 0){
                            $equipment .= $aicon . ' Aircon <br/>';
                        }

                        if($lights > 0){
                            if($lights == 1){
                                $equipment .= $lights . ' Light <br/>';
                            }
                            else{
                                $equipment .= $lights . ' Lights <br/>';
                            }
                        }

                        $training_room_log_patricipant_details = $api->get_data_details_one_parameter('training room log participant', $log_id);

                        for($i = 0; $i < count($training_room_log_patricipant_details); $i++) {
                            $participant_details = $api->get_data_details_one_parameter('employee profile', $training_room_log_patricipant_details[$i]['EMPLOYEE_ID']);
                            $participant_first_name = $participant_details[0]['FIRST_NAME'];
                            $participant_last_name = $participant_details[0]['LAST_NAME'];
                            $participant_middle_name = $participant_details[0]['MIDDLE_NAME'];
                            $participant_suffix = $participant_details[0]['SUFFIX'];
                            $participant_full_name = $api->get_full_name($participant_first_name, $participant_middle_name, $participant_last_name, $participant_suffix)[0]['REVERSE_FULL_NAME'];

                            $participant .= $participant_full_name;

                            if($i != (count($training_room_log_patricipant_details)-1)){
                                $participant .= ', ';
                            }
                        }

                        $response[] = array(
                            'EMPLOYEE' => $employee_full_name,
                            'STATUS' => $training_room_log_status,
                            'DATE' => $start_date,
                            'TIME' => $start_time . '<br/>' . $end_time,
                            'EQUIPMENT' => $equipment,
                            'PARTICIPANT' => $participant,
                            'OTHER_PARTICIPANT' => $other_participant,
                            'REQUEST_DATE' => $request_date . '<br/>' . $request_time,
                            'DECISION_BY' => $decision_by_fullname,
                            'DECISION_DATE' => $decision_date . '<br/>' . $decision_time,
                            'REASON' => $reason,
                            'ACTION' => '<div class="d-flex gap-2">
                                    <button type="button" class="btn btn-primary waves-effect waves-light update-training-room-log" data-logid="'. $log_id .'" data-locked="'. $locked .'" title="View Details">
                                        <i class="bx bx-show font-size-16 align-middle"></i>
                                    </button>
                                    '. $cancel . $delete .'
                                </div>'
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo()[2];
                }
            }
        }
    }
    # -------------------------------------------------------------

    # Training room log approval table
    else if($type == 'training room log approval table'){
        if ($api->databaseConnection()) {
            # Get role permission
            $approve_training_room_log = $api->check_role_permissions($username, 226);
            $reject_training_room_log = $api->check_role_permissions($username, 227);
            $cancel_training_room_log = $api->check_role_permissions($username, 228);

            $sql = $api->db_connection->prepare("SELECT LOG_ID, EMPLOYEE_ID, START_DATE, START_TIME, END_TIME, REQUEST_DATE, REQUEST_TIME, STATUS, DECISION_DATE, DECISION_TIME, DECISION_BY, OTHER_PARTICIPANT, FAN, AIRCON, LIGHTS, REASON FROM tbltrainingroomlogsheet WHERE STATUS = '0'");

            if($sql->execute()){
                while($row = $sql->fetch()){
                    $equipment = '';
                    $participant = '';
                    $log_id = trim($row['LOG_ID']);
                    $employee_id = trim($row['EMPLOYEE_ID']);
                    $status = trim($row['STATUS']);
                    $decision_by = trim($row['DECISION_BY']);
                    $reason = trim($row['REASON']);
                    $other_participant = trim($row['OTHER_PARTICIPANT']);
                    $fan = $row['FAN'];
                    $aicon = $row['AIRCON'];
                    $lights = $row['LIGHTS'];
                    $start_date = $api->check_date('empty', trim($row['START_DATE']), '', 'm/d/Y', '', '', '');
                    $start_time = $api->check_date('empty', trim($row['START_TIME']), '', 'h:i:s a', '', '', '');
                    $end_time = $api->check_date('empty', trim($row['END_TIME']), '', 'h:i:s a', '', '', '');
                    $request_date = $api->check_date('empty', trim($row['REQUEST_DATE']), '', 'm/d/Y', '', '', '');
                    $request_time = $api->check_date('empty', trim($row['REQUEST_TIME']), '', 'h:i:s a', '', '', '');
                    $decision_date = $api->check_date('empty', trim($row['DECISION_DATE']), '', 'm/d/Y', '', '', '');
                    $decision_time = $api->check_date('empty', trim($row['DECISION_TIME']), '', 'h:i:s a', '', '', '');
                    $training_room_log_status = $api->get_training_room_log_status($status)[0]['BADGE'];

                    if(!empty($decision_by)){
                        $decision_by_details = $api->get_data_details_one_parameter('employee profile', $decision_by);
                        $decision_by_first_name = $decision_by_details[0]['FIRST_NAME'];
                        $decision_by_last_name = $decision_by_details[0]['LAST_NAME'];
                        $decision_by_middle_name = $decision_by_details[0]['MIDDLE_NAME'];
                        $decision_by_suffix = $decision_by_details[0]['SUFFIX'];
                        $decision_by_fullname = $api->get_full_name($decision_by_first_name, $decision_by_middle_name, $decision_by_last_name, $decision_by_suffix)[0]['REVERSE_FULL_NAME'];
                    }
                    else{
                        $decision_by_fullname = '';
                    }

                    $employee_details = $api->get_data_details_one_parameter('employee profile', $employee_id);
                    $employee_first_name = $employee_details[0]['FIRST_NAME'];
                    $employee_last_name = $employee_details[0]['LAST_NAME'];
                    $employee_middle_name = $employee_details[0]['MIDDLE_NAME'];
                    $employee_suffix = $employee_details[0]['SUFFIX'];
                    $employee_full_name = $api->get_full_name($employee_first_name, $employee_middle_name, $employee_last_name, $employee_suffix)[0]['REVERSE_FULL_NAME'];

                    if($status == '0' && $cancel_training_room_log > 0){
                        $cancel = '<button type="button" class="btn btn-warning waves-effect waves-light cancel-training-room-log" data-logid="'. $log_id .'" title="Cancel Training Room Log">
                                    <i class="bx bx-calendar-x font-size-16 align-middle"></i>
                                </button>';
                    }
                    else{
                        $cancel = '';
                    }

                    if($fan > 0){
                        if($fan == 1){
                            $equipment .= $fan . ' Fan <br/>';
                        }
                        else{
                            $equipment .= $fan . ' Fans <br/>';
                        }
                    }

                    if($aicon > 0){
                        $equipment .= $aicon . ' Aircon <br/>';
                    }

                    if($lights > 0){
                        if($lights == 1){
                            $equipment .= $lights . ' Light <br/>';
                        }
                        else{
                            $equipment .= $lights . ' Lights <br/>';
                        }
                    }

                    $training_room_log_patricipant_details = $api->get_data_details_one_parameter('training room log participant', $log_id);

                    for($i = 0; $i < count($training_room_log_patricipant_details); $i++) {
                        $participant_details = $api->get_data_details_one_parameter('employee profile', $training_room_log_patricipant_details[$i]['EMPLOYEE_ID']);
                        $participant_first_name = $participant_details[0]['FIRST_NAME'];
                        $participant_last_name = $participant_details[0]['LAST_NAME'];
                        $participant_middle_name = $participant_details[0]['MIDDLE_NAME'];
                        $participant_suffix = $participant_details[0]['SUFFIX'];
                        $participant_full_name = $api->get_full_name($participant_first_name, $participant_middle_name, $participant_last_name, $participant_suffix)[0]['REVERSE_FULL_NAME'];

                        $participant .= $participant_full_name;

                        if($i != (count($training_room_log_patricipant_details)-1)){
                            $participant .= ', ';
                        }
                    }

                    if($approve_training_room_log > 0){
                        $approve = '<button type="button" class="btn btn-success waves-effect waves-light approve-training-room-log" data-logid="'. $log_id .'" title="Approve Training Room Log">
                                    <i class="bx bx-check font-size-16 align-middle"></i>
                                </button>';
                    }
                    else{
                        $approve = '';
                    }

                    if($reject_training_room_log > 0){
                        $reject = '<button type="button" class="btn btn-danger waves-effect waves-light reject-training-room-log" data-logid="'. $log_id .'" title="Reject Training Room Log">
                                    <i class="bx bx-x font-size-16 align-middle"></i>
                                </button>';
                    }
                    else{
                        $reject = '';
                    }

                    $response[] = array(
                        'EMPLOYEE' => $employee_full_name,
                        'STATUS' => $training_room_log_status,
                        'DATE' => $start_date,
                        'TIME' => $start_time . '<br/>' . $end_time,
                        'EQUIPMENT' => $equipment,
                        'PARTICIPANT' => $participant,
                        'OTHER_PARTICIPANT' => $other_participant,
                        'REQUEST_DATE' => $request_date . '<br/>' . $request_time,
                        'REASON' => $reason,
                        'ACTION' => '<div class="d-flex gap-2">
                                <button type="button" class="btn btn-primary waves-effect waves-light view-training-room-log" data-logid="'. $log_id .'" title="View Details">
                                    <i class="bx bx-show font-size-16 align-middle"></i>
                                </button>
                                '. $approve . $reject . $cancel .'
                            </div>'
                    );
                }

                echo json_encode($response);
            }
            else{
                echo $sql->errorInfo()[2];
            }
        }
    }
    # -------------------------------------------------------------

    # Weekly cash flow table
    else if($type == 'weekly cash flow table'){
        if(isset($_POST['parameter'])){
            if ($api->databaseConnection()) {
                $parameter = $_POST['parameter'];

                $employee_details = $api->get_data_details_one_parameter('employee profile', $username);
                $employee_department = $employee_details[0]['DEPARTMENT'];

                # Get role permission
                $delete_weekly_cash_flow = $api->check_role_permissions($username, 236);
                $view_all_weekly_cash_flow = $api->check_role_permissions($username, 237);
                $approve_weekly_cash_flow = $api->check_role_permissions($username, 238);
                $lock_weekly_cash_flow = $api->check_role_permissions($username, 239);
                $unlock_weekly_cash_flow = $api->check_role_permissions($username, 240);
                $view_weekly_cash_flow_particulars = $api->check_role_permissions($username, 242);

                if($view_all_weekly_cash_flow > 0){
                    if(!empty($parameter)){
                        $pieces = explode('|', $parameter);
                        $start_date = $pieces[0];
                        $end_date = $pieces[1];
                        $system_date = date("Y-m-d");

                        $sql = $api->db_connection->prepare('SELECT WCF_ID, DEPARTMENT, STATUS, START_DATE, END_DATE, APPROVAL_DATE, APPROVAL_TIME, APPROVAL_BY FROM tblwcf WHERE START_DATE = :start_date AND END_DATE = :end_date LIMIT 50');
                        $sql->bindParam(':start_date', $start_date);
                        $sql->bindParam(':end_date', $end_date);
                    }
                    else{

                        //get the first day of the this month
                        $date_start = new DateTime('now');
                        $startdate = $date_start->modify('first day of this month')->format('Y-m-d');

                       //get the last day of the next month
                        $date_end = new DateTime('now');
                        $enddate = $date_end->modify('last day of next month')->format('Y-m-d');

                        $sql = $api->db_connection->prepare('SELECT WCF_ID, DEPARTMENT, STATUS, START_DATE, END_DATE, APPROVAL_DATE, APPROVAL_TIME, APPROVAL_BY FROM tblwcf WHERE tblwcf.START_DATE  BETWEEN :startdate and :enddate ORDER BY tblwcf.START_DATE DESC LIMIT 50');
                        $sql->bindParam(':startdate',$startdate);
                        $sql->bindParam(':enddate',$enddate);
                    }
                }
                else{
                    if(!empty($parameter)){
                        $pieces = explode('|', $parameter);
                        $start_date = $pieces[0];
                        $end_date = $pieces[1];

                        $sql = $api->db_connection->prepare('SELECT WCF_ID, DEPARTMENT, STATUS, START_DATE, END_DATE, APPROVAL_DATE, APPROVAL_TIME, APPROVAL_BY FROM tblwcf WHERE START_DATE = :start_date AND END_DATE = :end_date AND DEPARTMENT = :employee_department LIMIT 50');
                        $sql->bindParam(':start_date', $start_date);
                        $sql->bindParam(':end_date', $end_date);
                        $sql->bindParam(':employee_department', $employee_department);
                    }
                    else{

                        //get the first day of the this month
                        $date_start = new DateTime('now');
                        $startdate = $date_start->modify('first day of this month')->format('Y-m-d');

                        //get the last day of the next month
                        $date_end = new DateTime('now');
                        $enddate = $date_end->modify('last day of next month')->format('Y-m-d');

                        $sql = $api->db_connection->prepare('SELECT WCF_ID, DEPARTMENT, STATUS, START_DATE, END_DATE, APPROVAL_DATE, APPROVAL_TIME, APPROVAL_BY FROM tblwcf WHERE DEPARTMENT = :employee_department and tblwcf.START_DATE  BETWEEN :startdate and :enddate ORDER BY tblwcf.START_DATE DESC LIMIT 50');
                        $sql->bindParam(':employee_department', $employee_department);
                        $sql->bindParam(':startdate',$startdate);
                        $sql->bindParam(':enddate',$enddate);
                    }
                }

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $wcf_id = trim($row['WCF_ID']);
                        $wcf_status = $row['STATUS'];
                        $approval_by = $row['APPROVAL_BY'];
                        $status = $api->get_wcf_status($wcf_status)[0]['BADGE'];
                        $start_date = $api->check_date('empty', $row['START_DATE'], '', 'm/d/Y', '', '', '');
                        $end_date = $api->check_date('empty', $row['END_DATE'], '', 'm/d/Y', '', '', '');
                        $approval_date = $api->check_date('empty', $row['APPROVAL_DATE'], '', 'm/d/Y', '', '', '');
                        $approval_time = $api->check_date('empty', $row['APPROVAL_TIME'], '', 'H:i:s a', '', '', '');
                        $wcf_id_encrypted = $api->encrypt_data($wcf_id);
                        $department_details = $api->get_data_details_one_parameter('department', $row['DEPARTMENT']);
                        $department = $department_details[0]['DEPARTMENT'];

                        if($view_weekly_cash_flow_particulars > 0){
                            $view = '<a href="weekly-cash-flow-particulars.php?id='. $wcf_id_encrypted .'" class="btn btn-warning waves-effect waves-light view-email-recipients" data-wcfid="'. $wcf_id .'" title="View Weekly Cash Flow Particulars">
                                        <i class="bx bx-receipt font-size-16 align-middle"></i>
                                    </a>';
                        }
                        else{
                            $view = '';
                        }

                        if(!empty($approval_by)){
                            $approval_by_details = $api->get_data_details_one_parameter('employee profile', $approval_by);
                            $approval_by_first_name = $approval_by_details[0]['FIRST_NAME'];
                            $approval_by_last_name = $approval_by_details[0]['LAST_NAME'];
                            $approval_by_middle_name = $approval_by_details[0]['MIDDLE_NAME'];
                            $approval_by_suffix = $approval_by_details[0]['SUFFIX'];
                            $approval_by_fullname = $api->get_full_name($approval_by_first_name, $approval_by_middle_name, $approval_by_last_name, $approval_by_suffix)[0]['REVERSE_FULL_NAME'];
                        }
                        else{
                            $approval_by_fullname = '';
                        }

                        if($wcf_status == '0' && $delete_weekly_cash_flow > 0){
                            $delete = '<button type="button" class="btn btn-danger waves-effect waves-light delete-weekly-cash-flow" data-wcfid="'. $wcf_id .'" title="Delete Weekly Cash Flow">
                                        <i class="bx bx-trash font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $delete = '';
                        }

                        if($wcf_status == '0' && $approve_weekly_cash_flow > 0){
                            $approve = '<button type="button" class="btn btn-success waves-effect waves-light approve-weekly-cash-flow" data-wcfid="'. $wcf_id .'" title="Approve Weekly Cash Flow">
                                        <i class="bx bx-check font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $approve = '';
                        }

                        if($wcf_status == '2'){
                            if($unlock_weekly_cash_flow > 0){
                                $lock_unlock = '<button class="btn btn-info waves-effect waves-light unlock-weekly-cash-flow" title="Unlock Weekly Cash Flow" data-wcfid="'. $wcf_id .'">
                                <i class="bx bx-lock-open-alt font-size-16 align-middle"></i>
                                </button>';
                            }
                            else{
                                $lock_unlock = '';
                            }
                        }
                        else if($wcf_status == '1' || $wcf_status == '3'){
                            if($lock_weekly_cash_flow > 0){
                                $lock_unlock = '<button class="btn btn-warning waves-effect waves-light lock-weekly-cash-flow" title="Lock Weekly Cash Flow" data-wcfid="'. $wcf_id .'">
                                <i class="bx bx-lock-alt font-size-16 align-middle"></i>
                                </button>';
                            }
                            else{
                                $lock_unlock = '';
                            }
                        }
                        else{
                            $lock_unlock = '';
                        }

                        $response[] = array(
                            'DEPARTMENT' => $department,
                            'STATUS' => $status,
                            'PERIOD_COVERED' => $start_date . ' - ' . $end_date,
                            'APPROVAL_BY' => $approval_by_fullname,
                            'APPROVAL_DATE' => $approval_date . ' ' . $approval_time,
                            'ACTION' => '<div class="d-flex gap-2">
                                    <button type="button" class="btn btn-primary waves-effect waves-light update-weekly-cash-flow" data-wcfid="'. $wcf_id .'" title="View Details">
                                        <i class="bx bx-show font-size-16 align-middle"></i>
                                    </button>
                                    '. $view . $approve . $lock_unlock . $delete .'
                                </div>'
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo();
                }
            }
        }
    }
    # -------------------------------------------------------------

    # Weekly cash flow particulars table
    else if($type == 'weekly cash flow particulars table'){
        if(isset($_POST['parameter'])){
            if ($api->databaseConnection()) {
                $parameter = $_POST['parameter'];

                # Get role permission
                $delete_weekly_cash_flow_particulars = $api->check_role_permissions($username, 245);
                $weekly_cash_flow_details = $api->get_data_details_one_parameter('weekly cash flow', $parameter);
                $wcf_status = $weekly_cash_flow_details[0]['STATUS'];

                $sql = $api->db_connection->prepare('SELECT PARTICULAR_ID, DETAILS, WCF_TYPE, LOAN_WCF_TYPE, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, TOTAL FROM tblwcfparticulars WHERE WCF_ID = :parameter');
                $sql->bindParam(':parameter', $parameter);

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $particular_id = trim($row['PARTICULAR_ID']);
                        $details = $row['DETAILS'];
                        $wcf_type = $api->get_system_description('WCFTYPE', $row['WCF_TYPE']);
                        $loan_wcf_type = $api->get_system_description('WCFLOANTYPE', $row['LOAN_WCF_TYPE']);
                        $monday = number_format($row['MONDAY'], 2);
                        $tuesday = number_format($row['TUESDAY'], 2);
                        $wednesday = number_format($row['WEDNESDAY'], 2);
                        $thursday = number_format($row['THURSDAY'], 2);
                        $friday = number_format($row['FRIDAY'], 2);
                        $total = number_format($row['TOTAL'], 2);

                        if($wcf_status == '0' && $delete_weekly_cash_flow_particulars > 0){
                            $delete = '<button type="button" class="btn btn-danger waves-effect waves-light delete-weekly-cash-flow-particulars" data-wcfid="'. $parameter .'" data-particularid="'. $particular_id .'" title="Delete Weekly Cash Flow">
                                        <i class="bx bx-trash font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $delete = '';
                        }

                        $response[] = array(
                            'DETAILS' => $details,
                            'WCF_TYPE' => $wcf_type,
                            'LOAN_WCF_TYPE' => $loan_wcf_type,
                            'MONDAY' => $monday,
                            'TUESDAY' => $tuesday,
                            'WEDNESDAY' => $wednesday,
                            'THURSDAY' => $thursday,
                            'FRIDAY' => $friday,
                            'TOTAL' => $total,
                            'ACTION' => '<div class="d-flex gap-2">
                                <button type="button" class="btn btn-primary waves-effect waves-light update-weekly-cash-flow-particulars" data-wcfid="'. $parameter .'" data-particularid="'. $particular_id .'" title="View Details">
                                    <i class="bx bx-show font-size-16 align-middle"></i>
                                </button>
                                '. $delete .'
                            </div>'
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo();
                }
            }
        }
    }
    # -------------------------------------------------------------

    # Weekly cash flow summary table
    else if($type == 'weekly cash flow summary table'){
        if(isset($_POST['parameter'])){
            if ($api->databaseConnection()) {
                $parameter = $_POST['parameter'];

                if(!empty($parameter)){
                    $pieces = explode('|', $parameter);
                    $start_date = $pieces[0];
                    $end_date = $pieces[1];

                    $sql = $api->db_connection->prepare("SELECT PARTICULAR_ID, WCF_ID, DETAILS, WCF_TYPE, LOAN_WCF_TYPE, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, TOTAL FROM tblwcfparticulars WHERE WCF_ID IN (SELECT WCF_ID FROM tblwcf WHERE STATUS IN ('1', '2', '3') AND START_DATE = :start_date AND END_DATE = :end_date) LIMIT 500");
                    $sql->bindParam(':start_date', $start_date);
                    $sql->bindParam(':end_date', $end_date);
                }
                else{
                    $sql = $api->db_connection->prepare("SELECT PARTICULAR_ID, WCF_ID, DETAILS, WCF_TYPE, LOAN_WCF_TYPE, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, TOTAL FROM tblwcfparticulars WHERE WCF_ID IN (SELECT WCF_ID FROM tblwcf WHERE STATUS IN ('1', '2', '3')) LIMIT 500");
                }

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $particular_id = trim($row['PARTICULAR_ID']);
                        $wcf_id = trim($row['WCF_ID']);
                        $details = $row['DETAILS'];
                        $wcf_type = $api->get_system_description('WCFTYPE', $row['WCF_TYPE']);
                        $loan_wcf_type = $api->get_system_description('WCFLOANTYPE', $row['LOAN_WCF_TYPE']);
                        $monday = $row['MONDAY'];
                        $tuesday = $row['TUESDAY'];
                        $wednesday = $row['WEDNESDAY'];
                        $thursday = $row['THURSDAY'];
                        $friday = $row['FRIDAY'];
                        $total = $row['TOTAL'];

                        $weekly_cash_flow_details = $api->get_data_details_one_parameter('weekly cash flow', $wcf_id);
                        $start_date = $api->check_date('empty', $weekly_cash_flow_details[0]['START_DATE'], '', 'm/d/Y', '', '', '');
                        $end_date = $api->check_date('empty', $weekly_cash_flow_details[0]['END_DATE'], '', 'm/d/Y', '', '', '');
                        $department_details = $api->get_data_details_one_parameter('department', $weekly_cash_flow_details[0]['DEPARTMENT']);
                        $department = $department_details[0]['DEPARTMENT'];

                        $response[] = array(
                            'DEPARTMENT' => $department,
                            'PERIOD_COVERED' => $start_date . ' - ' . $end_date,
                            'DETAILS' => $details,
                            'WCF_TYPE' => $wcf_type,
                            'LOAN_WCF_TYPE' => $loan_wcf_type,
                            'MONDAY' => $monday,
                            'TUESDAY' => $tuesday,
                            'WEDNESDAY' => $wednesday,
                            'THURSDAY' => $thursday,
                            'FRIDAY' => $friday,
                            'TOTAL' => $total
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo();
                }
            }
        }
    }
    # -------------------------------------------------------------

     # Ticket table
    else if($type == 'ticket table'){
        if(isset($_POST['parameter1']) && isset($_POST['parameter2']) && isset($_POST['parameter3'])){
            if ($api->databaseConnection()) {
                $api->update_accept_status_on_open_ticket(1, 'DEPT1');

                $parameter1 = $_POST['parameter1'];
                $parameter2 = $api->check_date('empty', $_POST['parameter2'], '', 'Y-m-d', '', '', '');
                $parameter3 = $api->check_date('empty', $_POST['parameter3'], '', 'Y-m-d', '', '', '');

                $employee_details = $api->get_data_details_one_parameter('employee profile', $username);
                $employee_id = $employee_details[0]['EMPLOYEE_ID'];
                $employee_department = $employee_details[0]['DEPARTMENT'];

                # Get role permission
                $delete_ticket = $api->check_role_permissions($username, 250);
                $view_all_ticket = $api->check_role_permissions($username, 251);
                $view_all_department_ticket = $api->check_role_permissions($username, 252);
                $accept_ticket = $api->check_role_permissions($username, 253);
                $reject_ticket = $api->check_role_permissions($username, 254);
                $cancel_ticket = $api->check_role_permissions($username, 255);
                $tag_ticket_as_solved = $api->check_role_permissions($username, 256);
                $tag_ticket_as_closed = $api->check_role_permissions($username, 257);
                $tag_ticket_as_unsolved = $api->check_role_permissions($username, 258);
                $view_ticket_details_page = $api->check_role_permissions($username, 259);

                $query = 'SELECT TICKET_ID, REQUESTER, ASSIGNED_DEPARTMENT, ASSIGNED_EMPLOYEE, SUBJECT, DESCRIPTION, PRIORITY, STATUS, DUE_DATE, DUE_TIME, CREATED_DATE, CREATED_TIME, ACCEPTED_DATE, ACCEPTED_TIME, SOLVED_DATE, SOLVED_TIME, CLOSED_DATE, CLOSED_TIME, AUTO_CLOSE_DATE, AUTO_CLOSE_TIME, DECISION_DATE, DECISION_TIME, REJECTION_REASON, CANCELLATION_REASON FROM tblticket ';

                if($view_all_ticket > 0){
                    if(!empty($parameter1)){
                        if(empty($parameter2) && empty($parameter3)){
                            if($parameter1 == 'duetoday'){
                                $sql = $api->db_connection->prepare($query . " WHERE DUE_DATE = :system_date LIMIT 400");
                                $sql->bindParam(':system_date', $system_date);
                            }
                            else if($parameter1 == 'assignedtome'){
                                $sql = $api->db_connection->prepare($query . " WHERE ASSIGNED_EMPLOYEE = :employee_id LIMIT 400");
                                $sql->bindParam(':employee_id', $employee_id);
                            }
                            else if($parameter1 == 'openticket'){
                                $sql = $api->db_connection->prepare($query . " WHERE STATUS = '0' LIMIT 400");
                            }
                            else if($parameter1 == 'acceptedticket'){
                                $sql = $api->db_connection->prepare($query . " WHERE STATUS IN ('1', '5') LIMIT 400");
                            }
                            else if($parameter1 == 'overdueticket'){
                                $sql = $api->db_connection->prepare($query . " WHERE STATUS IN ('1', '5') AND DUE_DATE < :system_date LIMIT 400");
                                $sql->bindParam(':system_date', $system_date);
                            }
                            else if($parameter1 == 'solvedticket'){
                                $sql = $api->db_connection->prepare($query . " WHERE STATUS = '4' LIMIT 400");
                            }
                            else if($parameter1 == 'unsolvedticket'){
                                $sql = $api->db_connection->prepare($query . " WHERE STATUS = '5' LIMIT 400");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE STATUS = '6' LIMIT 400");
                            }
                        }
                        else{
                            if($parameter1 == 'requestdate'){
                                $sql = $api->db_connection->prepare($query . " WHERE CREATED_DATE BETWEEN :parameter2 AND :parameter3 LIMIT 400");
                            }
                            else if($parameter1 == 'duedate'){
                                $sql = $api->db_connection->prepare($query . " WHERE DUE_DATE BETWEEN :parameter2 AND :parameter3 LIMIT 400");
                            }
                            else if($parameter1 == 'solveddate'){
                                $sql = $api->db_connection->prepare($query . " WHERE SOLVED_DATE BETWEEN :parameter2 AND :parameter3 LIMIT 400");
                            }
                            else if($parameter1 == 'closeddate'){
                                $sql = $api->db_connection->prepare($query . " WHERE CLOSED_DATE BETWEEN :parameter2 AND :parameter3 LIMIT 400");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE DECISION_DATE BETWEEN :parameter2 AND :parameter3 LIMIT 400");
                            }

                            $sql->bindParam(':parameter2', $parameter2);
                            $sql->bindParam(':parameter3', $parameter3);
                        }
                    }
                    else{
                       $sql = $api->db_connection->prepare($query . " WHERE STATUS IN ('0', '1', '4', '5') LIMIT 400 ");
                    }
                }
                else if($view_all_department_ticket > 0){
                    if(!empty($parameter1)){
                        if(empty($parameter2) && empty($parameter3)){
                            if($parameter1 == 'duetoday'){
                                $sql = $api->db_connection->prepare($query . " WHERE DUE_DATE = :system_date AND DEPARTMENT = :employee_department LIMIT 400");
                                $sql->bindParam(':system_date', $system_date);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                            else if($parameter1 == 'assignedtome'){
                                $sql = $api->db_connection->prepare($query . " WHERE ASSIGNED_EMPLOYEE = :employee_id LIMIT 400");
                                $sql->bindParam(':employee_id', $employee_id);
                            }
                            else if($parameter1 == 'openticket'){
                                $sql = $api->db_connection->prepare($query . " WHERE STATUS = '0' AND DEPARTMENT = :employee_department LIMIT 400");
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                            else if($parameter1 == 'acceptedticket'){
                                $sql = $api->db_connection->prepare($query . " WHERE STATUS IN ('1', '5') AND DEPARTMENT = :employee_department LIMIT 400");
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                            else if($parameter1 == 'overdueticket'){
                                $sql = $api->db_connection->prepare($query . " WHERE STATUS IN ('1', '5') AND DUE_DATE < :system_date AND DEPARTMENT = :employee_department LIMIT 400");
                                $sql->bindParam(':system_date', $system_date);
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                            else if($parameter1 == 'solvedticket'){
                                $sql = $api->db_connection->prepare($query . " WHERE STATUS = '4' AND DEPARTMENT = :employee_department LIMIT 400");
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                            else if($parameter1 == 'unsolvedticket'){
                                $sql = $api->db_connection->prepare($query . " WHERE STATUS = '5' AND DEPARTMENT = :employee_department LIMIT 400");
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE STATUS = '6' AND DEPARTMENT = :employee_department LIMIT 400");
                                $sql->bindParam(':employee_department', $employee_department);
                            }
                        }
                        else{
                            if($parameter1 == 'requestdate'){
                                $sql = $api->db_connection->prepare($query . " WHERE CREATED_DATE BETWEEN :parameter2 AND :parameter3 AND DEPARTMENT = :employee_department LIMIT 400");
                            }
                            else if($parameter1 == 'duedate'){
                                $sql = $api->db_connection->prepare($query . " WHERE DUE_DATE BETWEEN :parameter2 AND :parameter3 AND DEPARTMENT = :employee_department LIMIT 400");
                            }
                            else if($parameter1 == 'solveddate'){
                                $sql = $api->db_connection->prepare($query . " WHERE SOLVED_DATE BETWEEN :parameter2 AND :parameter3 AND DEPARTMENT = :employee_department LIMIT 400");
                            }
                            else if($parameter1 == 'closeddate'){
                                $sql = $api->db_connection->prepare($query . " WHERE CLOSED_DATE BETWEEN :parameter2 AND :parameter3 AND DEPARTMENT = :employee_department LIMIT 400");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE DECISION_DATE BETWEEN :parameter2 AND :parameter3 AND DEPARTMENT = :employee_department LIMIT 400");
                            }

                            $sql->bindParam(':parameter2', $parameter2);
                            $sql->bindParam(':parameter3', $parameter3);
                            $sql->bindParam(':employee_department', $employee_department);
                        }
                    }
                    else{
                        $sql = $api->db_connection->prepare($query . " WHERE DEPARTMENT = :employee_department LIMIT 400");
                        $sql->bindParam(':employee_department', $employee_department);
                    }
                }
                else{
                    if(!empty($parameter1)){
                        if(empty($parameter2) && empty($parameter3)){
                            if($parameter1 == 'duetoday'){
                                $sql = $api->db_connection->prepare($query . " WHERE DUE_DATE = :system_date AND ASSIGNED_EMPLOYEE = :employee_id LIMIT 400");
                                $sql->bindParam(':system_date', $system_date);
                            }
                            else if($parameter1 == 'assignedtome'){
                                $sql = $api->db_connection->prepare($query . " WHERE ASSIGNED_EMPLOYEE = :employee_id LIMIT 400");
                            }
                            else if($parameter1 == 'openticket'){
                                $sql = $api->db_connection->prepare($query . " WHERE STATUS = '0' AND ASSIGNED_EMPLOYEE = :employee_id LIMIT 400");
                            }
                            else if($parameter1 == 'acceptedticket'){
                                $sql = $api->db_connection->prepare($query . " WHERE STATUS IN ('1', '5') AND ASSIGNED_EMPLOYEE = :employee_id LIMIT 400");
                            }
                            else if($parameter1 == 'overdueticket'){
                                $sql = $api->db_connection->prepare($query . " WHERE STATUS IN ('1', '5') AND DUE_DATE < :system_date AND ASSIGNED_EMPLOYEE = :employee_id LIMIT 400");
                                $sql->bindParam(':system_date', $system_date);
                            }
                            else if($parameter1 == 'solvedticket'){
                                $sql = $api->db_connection->prepare($query . " WHERE STATUS = '4' AND ASSIGNED_EMPLOYEE = :employee_id LIMIT 400");
                            }
                            else if($parameter1 == 'unsolvedticket'){
                                $sql = $api->db_connection->prepare($query . " WHERE STATUS = '5' AND ASSIGNED_EMPLOYEE = :employee_id LIMIT 400");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE STATUS = '6' AND ASSIGNED_EMPLOYEE = :employee_id LIMIT 400");
                            }
                        }
                        else{
                            if($parameter1 == 'requestdate'){
                                $sql = $api->db_connection->prepare($query . " WHERE CREATED_DATE BETWEEN :parameter2 AND :parameter3 AND ASSIGNED_EMPLOYEE = :employee_id LIMIT 400");
                            }
                            else if($parameter1 == 'duedate'){
                                $sql = $api->db_connection->prepare($query . " WHERE DUE_DATE BETWEEN :parameter2 AND :parameter3 AND ASSIGNED_EMPLOYEE = :employee_id LIMIT 400");
                            }
                            else if($parameter1 == 'solveddate'){
                                $sql = $api->db_connection->prepare($query . " WHERE SOLVED_DATE BETWEEN :parameter2 AND :parameter3 AND ASSIGNED_EMPLOYEE = :employee_id LIMIT 400");
                            }
                            else if($parameter1 == 'closeddate'){
                                $sql = $api->db_connection->prepare($query . " WHERE CLOSED_DATE BETWEEN :parameter2 AND :parameter3 AND ASSIGNED_EMPLOYEE = :employee_id LIMIT 400");
                            }
                            else{
                                $sql = $api->db_connection->prepare($query . " WHERE DECISION_DATE BETWEEN :parameter2 AND :parameter3 AND ASSIGNED_EMPLOYEE = :employee_id LIMIT 400");
                            }

                            $sql->bindParam(':parameter2', $parameter2);
                            $sql->bindParam(':parameter3', $parameter3);
                        }
                    }
                    else{
                        $sql = $api->db_connection->prepare($query . " WHERE ASSIGNED_EMPLOYEE = :employee_id OR REQUESTER = :employee_id LIMIT 400");
                    }

                    $sql->bindParam(':employee_id', $employee_id);
                }

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $ticket_id = trim($row['TICKET_ID']);
                        $requester = trim($row['REQUESTER']);
                        $assigned_department = $row['ASSIGNED_DEPARTMENT'];
                        $assigned_employee = $row['ASSIGNED_EMPLOYEE'];
                        $subject = $row['SUBJECT'];
                        $description = $row['DESCRIPTION'];
                        $priority = $row['PRIORITY'];
                        $status = $row['STATUS'];
                        $rejection_reason = $row['REJECTION_REASON'];
                        $cancellation_reason = $row['CANCELLATION_REASON'];
                        $due_time = $row['DUE_TIME'];
                        $due_date = $api->check_date('empty', $row['DUE_DATE'], '', 'm/d/Y', '', '', '');
                        $created_date = $api->check_date('empty', $row['CREATED_DATE'], '', 'm/d/Y', '', '', '');
                        $created_time = $api->check_date('empty', trim($row['CREATED_TIME']), '', 'h:i:s a', '', '', '');
                        $accepted_date = $api->check_date('empty', $row['ACCEPTED_DATE'], '', 'm/d/Y', '', '', '');
                        $accepted_time = $api->check_date('empty', trim($row['ACCEPTED_TIME']), '', 'h:i:s a', '', '', '');
                        $solved_date = $api->check_date('empty', $row['SOLVED_DATE'], '', 'm/d/Y', '', '', '');
                        $solved_time = $api->check_date('empty', trim($row['SOLVED_TIME']), '', 'h:i:s a', '', '', '');
                        $closed_date = $api->check_date('empty', $row['CLOSED_DATE'], '', 'm/d/Y', '', '', '');
                        $closed_time = $api->check_date('empty', trim($row['CLOSED_TIME']), '', 'h:i:s a', '', '', '');
                        $auto_close_date = $api->check_date('empty', $row['AUTO_CLOSE_DATE'], '', 'm/d/Y', '', '', '');
                        $auto_close_time = $api->check_date('empty', trim($row['AUTO_CLOSE_TIME']), '', 'h:i:s a', '', '', '');
                        $decision_date = $api->check_date('empty', $row['DECISION_DATE'], '', 'm/d/Y', '', '', '');
                        $decision_time = $api->check_date('empty', trim($row['DECISION_TIME']), '', 'h:i:s a', '', '', '');
                        $ticket_status = $api->get_ticket_status($status, $system_date, $due_date)[0]['BADGE'];
                        $ticket_priority = $api->get_ticket_priority($priority)[0]['BADGE'];

                        $department_details = $api->get_data_details_one_parameter('department', $assigned_department);
                        $department = $department_details[0]['DEPARTMENT'];

                        $requester_details = $api->get_data_details_one_parameter('employee profile', $requester);
                        $requester_by_first_name = $requester_details[0]['FIRST_NAME'];
                        $requester_by_last_name = $requester_details[0]['LAST_NAME'];
                        $requester_by_middle_name = $requester_details[0]['MIDDLE_NAME'];
                        $requester_by_suffix = $requester_details[0]['SUFFIX'];
                        $requester_by_fullname = $api->get_full_name($requester_by_first_name, $requester_by_middle_name, $requester_by_last_name, $requester_by_suffix)[0]['REVERSE_FULL_NAME'];

                        $ticket_id_encrypted = $api->encrypt_data($ticket_id);

                        if($view_ticket_details_page > 0){
                            $view = '<a href="ticket-details.php?id='. $ticket_id_encrypted .'" class="btn btn-dark waves-effect waves-light view-email-recipients" data-ticketid="'. $ticket_id .'" title="View Ticket Details">
                                        <i class="bx bx-receipt font-size-16 align-middle"></i>
                                    </a>';
                        }
                        else{
                            $view = '';
                        }

                        if($status == '0' && $requester == $employee_id){
                            $locked = '0';
                        }
                        else{
                            $locked = '1';
                        }

                        if(!empty($assigned_employee)){
                            $assigned_employee_details = $api->get_data_details_one_parameter('employee profile', $assigned_employee);
                            $assigned_employee_by_first_name = $assigned_employee_details[0]['FIRST_NAME'];
                            $assigned_employee_by_last_name = $assigned_employee_details[0]['LAST_NAME'];
                            $assigned_employee_by_middle_name = $assigned_employee_details[0]['MIDDLE_NAME'];
                            $assigned_employee_by_suffix = $assigned_employee_details[0]['SUFFIX'];
                            $assigned_employee_by_fullname = $api->get_full_name($assigned_employee_by_first_name, $assigned_employee_by_middle_name, $assigned_employee_by_last_name, $assigned_employee_by_suffix)[0]['REVERSE_FULL_NAME'];
                        }
                        else{
                            $assigned_employee_by_fullname = 'No Assigned Personnel';
                        }

                        if($delete_ticket > 0 && $status == '0'){
                            $delete = '<button type="button" class="btn btn-danger waves-effect waves-light delete-ticket" data-ticketid="'. $ticket_id .'" title="Delete Ticket">
                                        <i class="bx bx-trash font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $delete = '';
                        }

                        if($accept_ticket > 0 && $status == '0'){
                            $accept = '<button type="button" class="btn btn-success waves-effect waves-light accept-ticket" data-ticketid="'. $ticket_id .'" title="Accept Ticket">
                                        <i class="bx bx-check font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $accept = '';
                        }

                        if($reject_ticket > 0 && $status == '0' && $assigned_employee == $employee_id){
                            $reject = '<button type="button" class="btn btn-danger waves-effect waves-light reject-ticket" data-ticketid="'. $ticket_id .'" title="Reject Ticket">
                                        <i class="bx bx-x font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $reject = '';
                        }

                        if($cancel_ticket > 0 && ($status == '0' || $status == '1') && $requester == $employee_id ){
                            $cancel = '<button type="button" class="btn btn-warning waves-effect waves-light cancel-ticket" data-ticketid="'. $ticket_id .'" title="Cancel Ticket">
                                        <i class="bx bx-block font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $cancel = '';
                        }

                        if($tag_ticket_as_solved > 0 && ($status == '1' || $status == '5') && $assigned_employee == $employee_id){
                            $tag_solved = '<button type="button" class="btn btn-success waves-effect waves-light tag-ticket-as-solved" data-ticketid="'. $ticket_id .'" title="Tag Ticket As Solved">
                                        <i class="bx bx-badge-check font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $tag_solved = '';
                        }

                        if(($tag_ticket_as_closed > 0 && $status == '4' && $requester == $employee_id) || (strtotime($auto_close_date . ' ' . $auto_close_time) <= strtotime($system_date . ' ' . $current_time) && $assigned_employee == $employee_id && $status == '4')){

                            if(($tag_ticket_as_closed > 0 && $status == '4' && $requester == $employee_id)){
                                $tag_closed = '<button type="button" class="btn btn-success waves-effect waves-light tag-ticket-as-closed" data-ticketid="'. $ticket_id .'" title="Tag Ticket As Closed">
                                    <i class="bx bx-block font-size-16 align-middle"></i>
                                </button>';
                            }

                            if(strtotime($auto_close_date . ' ' . $auto_close_time) <= strtotime($system_date . ' ' . $current_time) && $assigned_employee == $employee_id && $status == '4'){
                                $tag_closed = '<button type="button" class="btn btn-success waves-effect waves-light tag-ticket-as-auto-closed" data-ticketid="'. $ticket_id .'" title="Tag Ticket As Closed">
                                    <i class="bx bx-block font-size-16 align-middle"></i>
                                </button>';
                            }
                        }
                        else{
                            $tag_closed = '';
                        }


                        if($tag_ticket_as_unsolved > 0 && $status == '4' && $requester == $employee_id){
                            $tag_unsolved = '<button type="button" class="btn btn-danger waves-effect waves-light tag-ticket-as-unsolved" data-ticketid="'. $ticket_id .'" title="Tag Ticket As Unsolved">
                                        <i class="bx bx-revision font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $tag_unsolved = '';
                        }

                        $response[] = array(
                            'TICKET_ID' => $ticket_id,
                            'SUBJECT' => $subject,
                            'REQUESTER' => $requester_by_fullname,
                            'STATUS' => $ticket_status,
                            'ASSIGNED' => $assigned_employee_by_fullname . '<br/>' . $department,
                            'PRIORITY' => $ticket_priority,
                            'DUE_DATE' => $due_date . '<br/>' . $due_time,
                            'REQUEST_DATE' => $created_date . ' ' . $created_time,
                            'SOLVED_DATE' => $solved_date . ' ' . $solved_time,
                            'ACCEPTED_DATE' => $accepted_date . ' ' . $accepted_time,
                            'CLOSED_DATE' => $closed_date . ' ' . $closed_time,
                            'DECISION_DATE' => $decision_date . ' ' . $decision_time,
                            'REJECTION_REASON' => $rejection_reason,
                            'CANCELLATION_REASON' => $cancellation_reason,
                            'ACTION' => '<div class="d-flex gap-2">
                                    <button type="button" class="btn btn-primary waves-effect waves-light update-ticket" data-ticketid="'. $ticket_id .'" data-locked="'. $locked .'" title="View Details">
                                        <i class="bx bx-show font-size-16 align-middle"></i>
                                    </button>
                                    '. $view . $accept . $reject . $cancel . $tag_solved . $tag_closed . $tag_unsolved . $delete .'
                                </div>'
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo();
                }
            }
        }
    }
    # -------------------------------------------------------------

    # Ticket attachment table
    else if($type == 'ticket attachment table'){
        if(isset($_POST['parameter'])){
            if ($api->databaseConnection()) {
                $parameter = $_POST['parameter'];

                $ticket_details = $api->get_data_details_one_parameter('ticket', $parameter);
                $status = $ticket_details[0]['STATUS'];

                # Get role permission
                $delete_ticket_attachment = $api->check_role_permissions($username, 270);

                $sql = $api->db_connection->prepare('SELECT ATTACHMENT_ID, FILE_NAME, FILE_PATH, UPLOAD_BY, UPLOAD_DATE, UPLOAD_TIME FROM tblticketattachment WHERE TICKET_ID = :parameter');
                $sql->bindParam(':parameter', $parameter);

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $attachment_id = trim($row['ATTACHMENT_ID']);
                        $file_name = $row['FILE_NAME'];
                        $file_path = $row['FILE_PATH'];
                        $upload_by = $row['UPLOAD_BY'];
                        $upload_date = $api->check_date('empty', $row['UPLOAD_DATE'], '', 'F d, Y', '', '', '');
                        $upload_time = $api->check_date('empty', trim($row['UPLOAD_TIME']), '', 'h:i:s a', '', '', '');
                        $file_size = $api->get_file_size_unit($file_path);
                        $file_type = strtoupper(pathinfo($file_path, PATHINFO_EXTENSION));

                        $upload_by_details = $api->get_data_details_one_parameter('employee profile', $upload_by);
                        $upload_by_first_name = $upload_by_details[0]['FIRST_NAME'];
                        $upload_by_last_name = $upload_by_details[0]['LAST_NAME'];
                        $upload_by_middle_name = $upload_by_details[0]['MIDDLE_NAME'];
                        $upload_by_suffix = $upload_by_details[0]['SUFFIX'];
                        $upload_by_fullname = $api->get_full_name($upload_by_first_name, $upload_by_middle_name, $upload_by_last_name, $upload_by_suffix)[0]['REVERSE_FULL_NAME'];

                        if($delete_ticket_attachment > 0 && ($status != '2' && $status != '3' && $status != '6')){
                            $delete = '<button type="button" class="btn btn-danger waves-effect waves-light delete-ticket-attachment" data-attachmentid="'. $attachment_id .'" title="Delete Ticket Attachment">
                                        <i class="bx bx-trash font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $delete = '';
                        }

                        $response[] = array(
                            'FILE_NAME' => '<a href="'. $file_path .'">
                                                '. $file_name .'
                                            </a>',
                            'UPLOAD_BY' => $upload_by_fullname,
                            'UPLOAD_DATE' => $upload_date . '<br/>' . $upload_time,
                            'FILE_TYPE' => $file_type,
                            'FILE_SIZE' => $file_size,
                            'ACTION' => '<div class="d-flex gap-2">
                                    '. $delete .'
                                </div>'
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo();
                }
            }
        }
    }
    # -------------------------------------------------------------

    # Ticket request table
    else if($type == 'ticket request table'){
        if(isset($_POST['parameter'])){
            if ($api->databaseConnection()) {
                $parameter = $_POST['parameter'];

                $ticket_details = $api->get_data_details_one_parameter('ticket', $parameter);
                $status = $ticket_details[0]['STATUS'];
                $ticket_assigned_employee = $ticket_details[0]['ASSIGNED_EMPLOYEE'];

                $employee_details = $api->get_data_details_one_parameter('employee profile', $username);
                $employee_id = $employee_details[0]['EMPLOYEE_ID'];

                # Get role permission
                $delete_ticket_request = $api->check_role_permissions($username, 273);
                $cancel_ticket_request = $api->check_role_permissions($username, 274);

                $sql = $api->db_connection->prepare('SELECT ADJUSTMENT_ID, EMPLOYEE_ID, STATUS, ASSIGNED_EMPLOYEE_ORG, ASSIGNED_EMPLOYEE_ADJ, CATEGORY_ORG, CATEGORY_ADJ, SUBJECT_ORG, SUBJECT_ADJ, DESCRIPTION_ORG, DESCRIPTION_ADJ, PRIORITY_ORG, PRIORITY_ADJ, DUE_DATE_ORG, DUE_DATE_ADJ, REASON, REQUEST_DATE, REQUEST_TIME, DECISION_BY, DECISION_DATE, DECISION_TIME FROM tblticketadjustment WHERE TICKET_ID = :parameter');
                $sql->bindParam(':parameter', $parameter);

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $adjustment_id = trim($row['ADJUSTMENT_ID']);
                        $request_by = $row['EMPLOYEE_ID'];
                        $assigned_employee_org = $row['ASSIGNED_EMPLOYEE_ORG'];
                        $assigned_employee_adj = $row['ASSIGNED_EMPLOYEE_ADJ'];
                        $subject_org = $row['SUBJECT_ORG'];
                        $subject_adj = $row['SUBJECT_ADJ'];
                        $description_org = $row['DESCRIPTION_ORG'];
                        $description_adj = $row['DESCRIPTION_ADJ'];
                        $priority_org = $row['PRIORITY_ORG'];
                        $priority_adj = $row['PRIORITY_ADJ'];
                        $decision_by = $row['DECISION_BY'];
                        $category_org = $api->get_system_description('TICKETCATEGORY', $row['CATEGORY_ORG']);
                        $category_adj = $api->get_system_description('TICKETCATEGORY', $row['CATEGORY_ADJ']);
                        $ticket_adjustment_status = $row['STATUS'];
                        $due_date_org = $api->check_date('empty', $row['DUE_DATE_ORG'], '', 'F d, Y', '', '', '');
                        $due_date_adj = $api->check_date('empty', $row['DUE_DATE_ADJ'], '', 'F d, Y', '', '', '');
                        $reason = $row['REASON'];
                        $request_date = $api->check_date('empty', $row['REQUEST_DATE'], '', 'F d, Y', '', '', '');
                        $request_time = $api->check_date('empty', trim($row['REQUEST_TIME']), '', 'h:i:s a', '', '', '');
                        $decision_date = $api->check_date('empty', trim($row['DECISION_DATE']), '', 'F d, Y', '', '', '');
                        $decision_time = $api->check_date('empty', trim($row['DECISION_TIME']), '', 'h:i:s a', '', '', '');
                        $ticket_priority_org = $api->get_ticket_priority($priority_org)[0]['BADGE'];
                        $ticket_adjustment_status_badge = $api->get_ticket_adjustment_status($ticket_adjustment_status)[0]['BADGE'];

                        $request_by_details = $api->get_data_details_one_parameter('employee profile', $request_by);
                        $request_by_first_name = $request_by_details[0]['FIRST_NAME'];
                        $request_by_last_name = $request_by_details[0]['LAST_NAME'];
                        $request_by_middle_name = $request_by_details[0]['MIDDLE_NAME'];
                        $request_by_suffix = $request_by_details[0]['SUFFIX'];
                        $request_by_fullname = $api->get_full_name($request_by_first_name, $request_by_middle_name, $request_by_last_name, $request_by_suffix)[0]['REVERSE_FULL_NAME'];

                        $assigned_employee_org_details = $api->get_data_details_one_parameter('employee profile', $assigned_employee_org);
                        $assigned_employee_org_first_name = $assigned_employee_org_details[0]['FIRST_NAME'];
                        $assigned_employee_org_last_name = $assigned_employee_org_details[0]['LAST_NAME'];
                        $assigned_employee_org_middle_name = $assigned_employee_org_details[0]['MIDDLE_NAME'];
                        $assigned_employee_org_suffix = $assigned_employee_org_details[0]['SUFFIX'];
                        $assigned_employee_org_fullname = $api->get_full_name($assigned_employee_org_first_name, $assigned_employee_org_middle_name, $assigned_employee_org_last_name, $assigned_employee_org_suffix)[0]['REVERSE_FULL_NAME'];

                        if(!empty($decision_by)){
                            $decision_by_details = $api->get_data_details_one_parameter('employee profile', $decision_by);
                            $decision_by_first_name = $decision_by_details[0]['FIRST_NAME'];
                            $decision_by_last_name = $decision_by_details[0]['LAST_NAME'];
                            $decision_by_middle_name = $decision_by_details[0]['MIDDLE_NAME'];
                            $decision_by_suffix = $decision_by_details[0]['SUFFIX'];
                            $decision_by_fullname = $api->get_full_name($decision_by_first_name, $decision_by_middle_name, $decision_by_last_name, $decision_by_suffix)[0]['REVERSE_FULL_NAME'];
                        }
                        else{
                            $decision_by_fullname = '';
                        }

                        if($delete_ticket_request > 0 && ($status == '1' || $status == '5')){
                            $delete = '<button type="button" class="btn btn-danger waves-effect waves-light delete-ticket-adjustment" data-adjustmentid="'. $adjustment_id .'" title="Delete Ticket Adjustment">
                                        <i class="bx bx-trash font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $delete = '';
                        }

                        if($cancel_ticket_request > 0 && ($status == '1' || $status == '5') && $ticket_adjustment_status == '0'){
                            $cancel = '<button type="button" class="btn btn-warning waves-effect waves-light cancel-ticket-adjustment" data-adjustmentid="'. $adjustment_id .'" title="Cancel Ticket Adjustment">
                                        <i class="bx bx-block font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $cancel = '';
                        }

                        if(($status == '1' || $status == '5') && $ticket_adjustment_status == '0' && $ticket_assigned_employee == $employee_id){
                            $update =  '<button type="button" class="btn btn-primary waves-effect waves-light update-ticket-adjustment" data-adjustmentid="'. $adjustment_id .'" title="View Details">
                                            <i class="bx bx-show font-size-16 align-middle"></i>
                                            </button>';
                        }
                        else{
                            $update = '';
                        }

                        if($assigned_employee_org != $assigned_employee_adj){
                            $assigned_employee_adj_details = $api->get_data_details_one_parameter('employee profile', $assigned_employee_adj);
                            $assigned_employee_adj_first_name = $assigned_employee_adj_details[0]['FIRST_NAME'];
                            $assigned_employee_adj_last_name = $assigned_employee_adj_details[0]['LAST_NAME'];
                            $assigned_employee_adj_middle_name = $assigned_employee_adj_details[0]['MIDDLE_NAME'];
                            $assigned_employee_adj_suffix = $assigned_employee_adj_details[0]['SUFFIX'];
                            $assigned_employee_adj_fullname = $api->get_full_name($assigned_employee_adj_first_name, $assigned_employee_adj_middle_name, $assigned_employee_adj_last_name, $assigned_employee_adj_suffix)[0]['REVERSE_FULL_NAME'];

                            $assigned_employee = $assigned_employee_org_fullname . ' -> ' . $assigned_employee_adj_fullname;
                        }
                        else{
                            $assigned_employee = $assigned_employee_org_fullname;
                        }

                        if($subject_org != $subject_adj){
                            $subject = $subject_org . ' -> ' . $subject_adj;
                        }
                        else{
                            $subject = $subject_org;
                        }

                        if($description_org != $description_adj){
                            $description = $description_org . ' -> ' . $description_adj;
                        }
                        else{
                            $description = $description_org;
                        }

                        if($priority_org != $priority_adj){
                            $ticket_priority_adj = $api->get_ticket_priority($priority_adj)[0]['BADGE'];
                            $priority = $ticket_priority_org . ' -> ' . $ticket_priority_adj;
                        }
                        else{
                            $priority = $ticket_priority_org;
                        }

                        if($category_org != $category_adj){
                            $category = $category_org . ' -> ' . $category_adj;
                        }
                        else{
                            $category = $category_org;
                        }

                        if(strtotime($due_date_org) != strtotime($due_date_adj)){
                            $due_date = $due_date_org . ' -> ' . $due_date_adj;
                        }
                        else{
                            $due_date = $due_date_org;
                        }

                        $response[] = array(
                            'REQUEST_BY' => $request_by_fullname,
                            'ASSIGNED_EMPLOYEE' => $assigned_employee,
                            'STATUS' => $ticket_adjustment_status_badge,
                            'CATEGORY' => $category,
                            'SUBJECT' => $subject,
                            'DESCRIPTION' => $description,
                            'PRIORITY' => $priority,
                            'DUE_DATE' => $due_date,
                            'REASON' => $reason,
                            'REQUEST_DATE' => $request_date . '<br/>' . $request_time,
                            'DECISION_BY' => $decision_by_fullname,
                            'DECISION_DATE' => $decision_date . '<br/>' . $decision_time,
                            'ACTION' => '<div class="d-flex gap-2">
                                    '. $update . $cancel . $delete .'
                                </div>'
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo();
                }
            }
        }
    }
    # -------------------------------------------------------------

    # Ticket adjustment request table
    else if($type == 'ticket adjustment request table'){
        if ($api->databaseConnection()) {
            $employee_details = $api->get_data_details_one_parameter('employee profile', $username);
            $employee_id = $employee_details[0]['EMPLOYEE_ID'];

            # Get role permission
            $approve_ticket_request = $api->check_role_permissions($username, 276);
            $reject_ticket_request = $api->check_role_permissions($username, 277);
            $cancel_ticket_request = $api->check_role_permissions($username, 278);
            $view_all_pending_ticket_adjustment_request = $api->check_role_permissions($username, 279);

            if($view_all_pending_ticket_adjustment_request > 0){
                $sql = $api->db_connection->prepare("SELECT TICKET_ID, ADJUSTMENT_ID, EMPLOYEE_ID, STATUS, ASSIGNED_EMPLOYEE_ORG, ASSIGNED_EMPLOYEE_ADJ, CATEGORY_ORG, CATEGORY_ADJ, SUBJECT_ORG, SUBJECT_ADJ, DESCRIPTION_ORG, DESCRIPTION_ADJ, PRIORITY_ORG, PRIORITY_ADJ, DUE_DATE_ORG, DUE_DATE_ADJ, REASON, REQUEST_DATE, REQUEST_TIME FROM tblticketadjustment WHERE STATUS = '0' AND TICKET_ID IN (SELECT TICKET_ID FROM tblticket WHERE STATUS IN ('1', '5'))");
            }
            else{
                $sql = $api->db_connection->prepare("SELECT TICKET_ID, ADJUSTMENT_ID, EMPLOYEE_ID, STATUS, ASSIGNED_EMPLOYEE_ORG, ASSIGNED_EMPLOYEE_ADJ, CATEGORY_ORG, CATEGORY_ADJ, SUBJECT_ORG, SUBJECT_ADJ, DESCRIPTION_ORG, DESCRIPTION_ADJ, PRIORITY_ORG, PRIORITY_ADJ, DUE_DATE_ORG, DUE_DATE_ADJ, REASON, REQUEST_DATE, REQUEST_TIME FROM tblticketadjustment WHERE STATUS = '0' AND TICKET_ID IN (SELECT TICKET_ID FROM tblticket WHERE STATUS IN ('1', '5') AND ASSIGNED_EMPLOYEE IN (SELECT SUBORDINATE_ID FROM tblemployeesubordinate WHERE EMPLOYEE_ID = :employee_id))");
                $sql->bindParam(':employee_id', $employee_id);
            }

            if($sql->execute()){
                while($row = $sql->fetch()){
                    $adjustment_id = trim($row['ADJUSTMENT_ID']);
                    $request_by = $row['EMPLOYEE_ID'];
                    $assigned_employee_org = $row['ASSIGNED_EMPLOYEE_ORG'];
                    $assigned_employee_adj = $row['ASSIGNED_EMPLOYEE_ADJ'];
                    $subject_org = $row['SUBJECT_ORG'];
                    $subject_adj = $row['SUBJECT_ADJ'];
                    $description_org = $row['DESCRIPTION_ORG'];
                    $description_adj = $row['DESCRIPTION_ADJ'];
                    $priority_org = $row['PRIORITY_ORG'];
                    $priority_adj = $row['PRIORITY_ADJ'];
                    $category_org = $api->get_system_description('TICKETCATEGORY', $row['CATEGORY_ORG']);
                    $category_adj = $api->get_system_description('TICKETCATEGORY', $row['CATEGORY_ADJ']);
                    $ticket_adjustment_status = $row['STATUS'];
                    $due_date_org = $api->check_date('empty', $row['DUE_DATE_ORG'], '', 'F d, Y', '', '', '');
                    $due_date_adj = $api->check_date('empty', $row['DUE_DATE_ADJ'], '', 'F d, Y', '', '', '');
                    $reason = $row['REASON'];
                    $request_date = $api->check_date('empty', $row['REQUEST_DATE'], '', 'F d, Y', '', '', '');
                    $request_time = $api->check_date('empty', trim($row['REQUEST_TIME']), '', 'h:i:s a', '', '', '');
                    $ticket_priority_org = $api->get_ticket_priority($priority_org)[0]['BADGE'];
                    $ticket_adjustment_status_badge = $api->get_ticket_adjustment_status($ticket_adjustment_status)[0]['BADGE'];

                    $request_by_details = $api->get_data_details_one_parameter('employee profile', $request_by);
                    $request_by_first_name = $request_by_details[0]['FIRST_NAME'];
                    $request_by_last_name = $request_by_details[0]['LAST_NAME'];
                    $request_by_middle_name = $request_by_details[0]['MIDDLE_NAME'];
                    $request_by_suffix = $request_by_details[0]['SUFFIX'];
                    $request_by_fullname = $api->get_full_name($request_by_first_name, $request_by_middle_name, $request_by_last_name, $request_by_suffix)[0]['REVERSE_FULL_NAME'];

                    $assigned_employee_org_details = $api->get_data_details_one_parameter('employee profile', $assigned_employee_org);
                    $assigned_employee_org_first_name = $assigned_employee_org_details[0]['FIRST_NAME'];
                    $assigned_employee_org_last_name = $assigned_employee_org_details[0]['LAST_NAME'];
                    $assigned_employee_org_middle_name = $assigned_employee_org_details[0]['MIDDLE_NAME'];
                    $assigned_employee_org_suffix = $assigned_employee_org_details[0]['SUFFIX'];
                    $assigned_employee_org_fullname = $api->get_full_name($assigned_employee_org_first_name, $assigned_employee_org_middle_name, $assigned_employee_org_last_name, $assigned_employee_org_suffix)[0]['REVERSE_FULL_NAME'];

                    if($cancel_ticket_request > 0){
                        $cancel = '<button type="button" class="btn btn-warning waves-effect waves-light cancel-ticket-adjustment" data-adjustmentid="'. $adjustment_id .'" title="Cancel Ticket Adjustment">
                                    <i class="bx bx-block font-size-16 align-middle"></i>
                                </button>';
                    }
                    else{
                        $cancel = '';
                    }

                    if($approve_ticket_request > 0){
                        $approve = '<button type="button" class="btn btn-success waves-effect waves-light approve-ticket-adjustment" data-adjustmentid="'. $adjustment_id .'" title="Approve Ticket Adjustment">
                                    <i class="bx bx-check font-size-16 align-middle"></i>
                                </button>';
                    }
                    else{
                        $approve = '';
                    }

                    if($reject_ticket_request > 0 ){
                        $reject = '<button type="button" class="btn btn-danger waves-effect waves-light reject-ticket-adjustment" data-adjustmentid="'. $adjustment_id .'" title="Reject Ticket Adjustment">
                                    <i class="bx bx-x font-size-16 align-middle"></i>
                                </button>';
                    }
                    else{
                        $reject = '';
                    }

                    if($assigned_employee_org != $assigned_employee_adj){
                        $assigned_employee_adj_details = $api->get_data_details_one_parameter('employee profile', $assigned_employee_adj);
                        $assigned_employee_adj_first_name = $assigned_employee_adj_details[0]['FIRST_NAME'];
                        $assigned_employee_adj_last_name = $assigned_employee_adj_details[0]['LAST_NAME'];
                        $assigned_employee_adj_middle_name = $assigned_employee_adj_details[0]['MIDDLE_NAME'];
                        $assigned_employee_adj_suffix = $assigned_employee_adj_details[0]['SUFFIX'];
                        $assigned_employee_adj_fullname = $api->get_full_name($assigned_employee_adj_first_name, $assigned_employee_adj_middle_name, $assigned_employee_adj_last_name, $assigned_employee_adj_suffix)[0]['REVERSE_FULL_NAME'];

                        $assigned_employee = $assigned_employee_org_fullname . ' -> ' . $assigned_employee_adj_fullname;
                    }
                    else{
                        $assigned_employee = $assigned_employee_org_fullname;
                    }

                    if($subject_org != $subject_adj){
                        $subject = $subject_org . ' -> ' . $subject_adj;
                    }
                    else{
                        $subject = $subject_org;
                    }

                    if($description_org != $description_adj){
                        $description = $description_org . ' -> ' . $description_adj;
                    }
                    else{
                        $description = $description_org;
                    }

                    if($priority_org != $priority_adj){
                        $ticket_priority_adj = $api->get_ticket_priority($priority_adj)[0]['BADGE'];
                        $priority = $ticket_priority_org . ' -> ' . $ticket_priority_adj;
                    }
                    else{
                        $priority = $ticket_priority_org;
                    }

                    if($category_org != $category_adj){
                        $category = $category_org . ' -> ' . $category_adj;
                    }
                    else{
                        $category = $category_org;
                    }

                    if(strtotime($due_date_org) != strtotime($due_date_adj)){
                        $due_date = $due_date_org . ' -> ' . $due_date_adj;
                    }
                    else{
                        $due_date = $due_date_org;
                    }

                    $response[] = array(
                        'REQUEST_BY' => $request_by_fullname,
                        'ASSIGNED_EMPLOYEE' => $assigned_employee,
                        'STATUS' => $ticket_adjustment_status_badge,
                        'CATEGORY' => $category,
                        'SUBJECT' => $subject,
                        'DESCRIPTION' => $description,
                        'PRIORITY' => $priority,
                        'DUE_DATE' => $due_date,
                        'REASON' => $reason,
                        'REQUEST_DATE' => $request_date . '<br/>' . $request_time,
                        'ACTION' => '<div class="d-flex gap-2">
                                '. $approve . $reject . $cancel .'
                            </div>'
                    );
                }

                echo json_encode($response);
            }
            else{
                echo $sql->errorInfo();
            }
        }
    }

	# Car search parameter table
    else if($type == 'car search parameter table'){
        if ($api->databaseConnection()) {
            # Get role permission
            $delete_car_search_parameter = $api->check_role_permissions($username, 355);

            $sql = $api->db_connection->prepare('SELECT PARAMETER_ID, PARAMETER_CODE, CATEGORY_TYPE, PARAMETER_VALUE FROM tblcarparameter ORDER BY PARAMETER_ID');

            if($sql->execute()){
                while($row = $sql->fetch()){
                    $parameter_id = trim($row['PARAMETER_ID']);
                    $parameter_code = trim($row['PARAMETER_CODE']);
                    $parameter_value = trim($row['PARAMETER_VALUE']);
                    $category_type = $api->get_system_description('CARSEARCHCATEGORY', $row['CATEGORY_TYPE']);

                    if($delete_car_search_parameter > 0){
                        $delete = '<button type="button" class="btn btn-danger waves-effect waves-light delete-car-search-parameter" data-parameterid="'. $parameter_id .'" title="Delete Car Search Parameter">
                                    <i class="bx bx-trash font-size-16 align-middle"></i>
                                </button>';
                    }
                    else{
                        $delete = '';
                    }

                    $response[] = array(
                        'PARAMETER_CODE' => $parameter_code,
                        'PARAMETER_VALUE' => $parameter_value,
                        'CATEGORY_TYPE' => $category_type,
                        'ACTION' => '<div class="d-flex gap-2">
                            <button type="button" class="btn btn-primary waves-effect waves-light update-car-search-parameter" data-parameterid="'. $parameter_id .'" title="View Details">
                                <i class="bx bx-show font-size-16 align-middle"></i>
                            </button>
                            '. $delete .'
                        </div>'
                    );
                }

                echo json_encode($response);
            }
            else{
                echo $sql->errorInfo()[2];
            }
        }
    }
    # -------------------------------------------------------------
    # -------------------------------------------------------------

    // ++++++++++++++++++++++++++++++++++++++++++++++changes lemar bill+++++++++++++++++++++++++++++++++++++++++++
                    # -------------------------------------------------------------

                    # Inventory Items category table
                    else if($type == 'inventory category table')

                    {
                        if ($api->databaseConnection()) {
                            $dept_owner ='';
                            $condition = 'WHERE DELETED_AT is null';

                            // if(isset( $_POST['data']['dept_owner_cat'])){
                            // $dept_owner = $_POST['data']['dept_owner_cat'];
                            // $condition .="WHERE cat.DEPT ='".$dept_owner."' ";

                            // }

                            $sql = $api->db_connection->prepare("SELECT cat.* FROM tblitemcategory as cat ".$condition);
                            $sql->setFetchMode(PDO::FETCH_ASSOC);

                            if($sql->execute()){
                                while($row = $sql->fetch()){
                                    $item_cat = trim($row['ITEM_CATEGORY']);
                                    $categ_name = trim($row['CATEG_NAME']);
                                    // $model = trim($row['DEPT_NAME']);


                                // if($cancel_ticket_request > 0){
                                        $edit = '<button type="button" class="btn btn-primary waves-effect waves-light edit-category-items" data-editcatcode="'. $item_cat .'" title="Edit Category">
                                                    <i class="bx bx-show font-size-16 align-middle"></i>
                                                </button>';
                                // }
                                // else{
                                    // $cancel = '';
                                // }

                                // if($approve_ticket_request > 0){
                                        $delete = '<button type="button" class="btn btn-danger waves-effect waves-light delete-category-items" data-deletecatcode="'. $item_cat .'" title="Delete Category">
                                                    <i class="bx bxs-trash font-size-16 align-middle"></i>
                                                </button>';
                                // }
                                    // else{
                                    //     $approve = '';
                                    // }



                                    $response[] = array(
                                        'ITEM_CATEGORY' => $item_cat,
                                        'CATEG_NAME' => $categ_name,
                                        'ACTION' => '<div class="d-flex gap-2">
                                                '. $edit  . $delete .'
                                            </div>'
                                    );
                                }

                                echo json_encode($response);
                            }
                            else{
                                echo json_encode($sql->errorInfo());
                            }
                        }
                    }

                    # -------------------------------------------------------------

                    # Inventory Items table
                    else if($type == "inventory item table"){


                        if ($api->databaseConnection()) {
                            $employee_details = $api->get_data_details_one_parameter('employee profile', $username);
                            $employee_id = $employee_details[0]['EMPLOYEE_ID'];
                            $dept_owner ='';
                            $item_cat = '';
                            $item_brand = '';
                            $condition = '';

                            $condition.= " WHERE tblinventoryitems.DELETED_AT is null ";
                            $edit_inventory_item = $api->check_role_permissions($username,338);
                            $dispose_inventory_item = $api->check_role_permissions($username,339);



                            if(isset( $_POST['data']['item_cat'])){
                                $item_cat = $_POST['data']['item_cat'];
                                if($item_cat!=""){
                                    $condition.="AND tblinventoryitems.ITEM_CATEGORY='".$item_cat."' ";
                                }
                            }


                            if(isset( $_POST['data']['dept_owner'])){
                                $dept_owner = $_POST['data']['dept_owner'];
                                if($dept_owner != "all_dept"){
                                    $condition .="AND tblinventoryitems.DEPT_ITEM_OWNER ='".$dept_owner."' ";
                                }else{
                                    $condition .="";
                                }
                            }

                            if(isset($_POST['data']['item_brand'])){
                                $item_brand = $_POST['data']['item_brand'];
                                $condition.="AND tblinventoryitems.BRAND = '".$item_brand."' ";
                            }


                            $sql = $api->db_connection->prepare("SELECT * FROM tblinventoryitems ".$condition);
                            $sql->setFetchMode(PDO::FETCH_ASSOC);

                            if($sql->execute()){
                                while($row = $sql->fetch()){
                                    $item_id = trim('ITEM_'.$row['ITEM_ID']);
                                    $brand = '';
                                    $model = trim($row['MODEL']);
                                    $description = trim($row['DESCRIPTION']);
                                    $status = trim($row['CURR_STATUS']);

                                    $curr_assign_to =$api->get_latest_assigned_to_items(trim($row['ITEM_ID']));
                                    $curr_assign = '';
                                    $disabled_dispose = '';




                                    // if item is assigned
                                    if(count($curr_assign_to)!=0){

                                        $curr_assign = $curr_assign_to[0]['EMP_NAME'];

                                        if($curr_assign_to[0]['DATE_RETURN']!=null){
                                            $curr_assign = 'N/A';
                                        }else{

                                            if($curr_assign_to[0]['EMPLOYEE_ID'] ==null && $curr_assign_to[0]['BRANCH']!=null){
                                                $curr_assign = $curr_assign_to[0]['BRANCHNAME'] . ' '.$curr_assign_to[0]['LOCATION'];
                                            }
                                        }


                                    }else{
                                        $curr_assign = 'N/A';
                                    }

                                    if($status != "STOCK"){
                                        $disabled_dispose = "disabled";
                                    }

                                    $edit="";
                                    $dispose = "";
                                    if($edit_inventory_item > 0){
                                        $edit = '<button type="button" class="btn btn-primary waves-effect waves-light edit-inventory-items" data-edititemid="'. $item_id .'" title="Edit Item">
                                                    <i class="bx bx-show font-size-16 align-middle"></i>
                                                </button>';
                                    }

                                    if($dispose_inventory_item > 0){
                                        $dispose = '<button type="button" class="btn btn-danger waves-effect waves-light delete-inventory-items" '.$disabled_dispose.' data-deleteitemid="'. $item_id .'" title="Dispose Item">
                                                    <i class="bx bxs-trash font-size-16 align-middle"></i>
                                                </button>';
                                    }


                                    $response[] = array(
                                        'ITEM_ID' => $item_id,
                                        'BRAND' => $brand,
                                        'MODEL' => $model,
                                        'DESCRIPTION' => $description,
                                        'CURR_STATUS' => $status,
                                        'CURR_ASSIGNED' => $curr_assign,
                                        'ACTION' => '<div class="d-flex gap-2">
                                                '. $edit  . $dispose .'
                                            </div>'
                                    );
                                }

                                echo json_encode($response);
                            }
                            else{
                                echo json_encode($sql->errorInfo());
                            }
                        }
                    }


                    # -------------------------------------------------------------




                    # Inventory Brand table
                    # -------------------------------------------------------------
                    else if($type == "inventory brand table"){

                        if ($api->databaseConnection()) {
                            $dept_owner ='';
                            $item_cat = '';
                            $condition = '';


                            // if(isset( $_POST['data']['dept_owner_brand'])){
                            // $dept_owner = $_POST['data']['dept_owner_brand'];
                            // $condition .="AND dept.DEPARTMENT_ID ='".$dept_owner."' ";

                            // }

                            // if(isset( $_POST['data']['brand_cat'])){
                            //     $item_cat = $_POST['data']['brand_cat'];
                            //     $condition.=" AND dept_categ.ITEM_CATEGORY ='".$item_cat."' ";
                            // }


                            $query = 'SELECT br.* FROM tblitembrand as br
                             WHERE  br.DELETED_AT is null '.$condition;

                            $sql = $api->db_connection->prepare($query);
                            $sql->setFetchMode(PDO::FETCH_ASSOC);

                            if($sql->execute()){
                                while($row = $sql->fetch()){
                                    $brand_code = trim($row['BRAND_CODE']);
                                    $brandname = trim($row['BRANDNAME']);



                                // if($cancel_ticket_request > 0){
                                        $edit = '<button type="button" class="btn btn-primary waves-effect waves-light edit-inventory-brand" data-editbrand="'. $brand_code .'" title="Edit Brand">
                                                    <i class="bx bx-show font-size-16 align-middle"></i>
                                                </button>';
                                // }
                                // else{
                                    // $cancel = '';
                                // }

                                // if($approve_ticket_request > 0){
                                        $delete = '<button type="button" class="btn btn-danger waves-effect waves-light delete-inventory-brand" data-deletebrand="'. $brand_code .'" title="Delete Brand">
                                                    <i class="bx bxs-trash font-size-16 align-middle"></i>
                                                </button>';
                                // }
                                    // else{
                                    //     $approve = '';
                                    // }

                                    $response[] = array(
                                        'BRAND_CODE' => $brand_code,
                                        'BRANDNAME' => $brandname,
                                        'ACTION' => '<div class="d-flex gap-2">
                                                '. $edit  . $delete .'
                                            </div>'
                                    );
                                }

                                echo json_encode($response);
                            }
                            else{
                                echo json_encode($sql->errorInfo());
                            }
                        }
                    }
                    else if($type == "inventory assign cat brand table"){



                        if ($api->databaseConnection()) {
                            $dept_owner ='';
                            $condition = 'WHERE DELETED_AT is null';

                            // if(isset( $_POST['data']['dept_owner_cat'])){
                            // $dept_owner = $_POST['data']['dept_owner_cat'];
                            // $condition .="WHERE cat.DEPT ='".$dept_owner."' ";

                            // }

                            $sql = $api->db_connection->prepare("SELECT cat.* FROM tblitemcategory as cat ".$condition);
                            $sql->setFetchMode(PDO::FETCH_ASSOC);

                            if($sql->execute()){
                                while($row = $sql->fetch()){
                                    $item_cat = trim($row['ITEM_CATEGORY']);
                                    $categ_name = trim($row['CATEG_NAME']);
                                    // $model = trim($row['DEPT_NAME']);


                                // if($cancel_ticket_request > 0){
                                        $edit = '<button type="button" class="btn btn-primary waves-effect waves-light assign-cat-brand" data-assigncatcode="'. $item_cat .'" title="Edit Category">
                                                    <i class="bx bx-list-check font-size-16 align-middle"></i>
                                                </button>';
                                // }
                                // else{
                                    // $cancel = '';
                                // }

                                    $response[] = array(
                                        'ITEM_CATEGORY' => $item_cat,
                                        'CATEG_NAME' => $categ_name,
                                        'ACTION' => '<div class="d-flex gap-2">
                                                '. $edit  .'
                                            </div>'
                                    );
                                }

                                echo json_encode($response);
                            }
                            else{
                                echo json_encode($sql->errorInfo());
                            }
                        }





                    }
                    else if ($type == "inventory item inquiry table") {


                        if ($api->databaseConnection()) {
                            $employee_details = $api->get_data_details_one_parameter('employee profile', $username);
                            $employee_id = $employee_details[0]['EMPLOYEE_ID'];
                            $dept_owner ='';
                            $item_cat = '';
                            $item_brand = '';
                            $condition = '';
                            $condition.= " WHERE tblinventoryitems.DELETED_AT is null ";
                            $edit_inventory_item = $api->check_role_permissions($username,338);
                            $dispose_inventory_item = $api->check_role_permissions($username,339);



                            if(isset( $_POST['data']['item_cat'])){
                                $item_cat = $_POST['data']['item_cat'];

                                if($item_cat!=""){
                                    $condition.=" AND tblinventoryitems.ITEM_CATEGORY='".$item_cat."' ";
                                }

                            }
                            if(isset($_POST['data']['item_brand'])){
                                $item_brand = $_POST['data']['item_brand'];
                                $condition.=" AND tblinventoryitems.BRAND = '".$item_brand."' ";
                            }


                            if(isset( $_POST['data']['dept_owner'])){
                                $dept_owner = $_POST['data']['dept_owner'];

                                if($dept_owner != "all_dept"){
                                    $condition .=" AND tblinventoryitems.DEPT_ITEM_OWNER ='".$dept_owner."' ";
                                }else{
                                    $condition .="";
                                }

                                }



                            //$sql = $api->db_connection->prepare("SELECT tblinventoryitems.*,tblitembrand.BRANDNAME as BRANDNAME FROM tblinventoryitems ".$condition); //CODE WITH ERROR: original code
                            $sql = $api->db_connection->prepare("SELECT tblinventoryitems.*,tblitembrand.BRANDNAME as BRANDNAME FROM tblinventoryitems LEFT JOIN tblitembrand ON tblitembrand.brand_code = tblinventoryitems.brand ".$condition); //SOLUTION(02-07-2024): add left join to get the brand name
                            $sql->setFetchMode(PDO::FETCH_ASSOC);

                            if($sql->execute()){
                                while($row = $sql->fetch()){
                                    $item_id = trim('ITEM_'.$row['ITEM_ID']);
                                    $brand = trim($row['BRANDNAME']);
                                    $model = trim($row['MODEL']);
                                    $description = trim($row['DESCRIPTION']);
                                    $status = trim($row['CURR_STATUS']);
                                    $serial_number = trim($row['SERIAL_NUMBER']);

                                    $curr_assign_to =$api->get_latest_assigned_to_items(trim($row['ITEM_ID']));
                                    $curr_assign = '';

                                    // if item is assigned
                                    if(count($curr_assign_to)!=0){

                                        $curr_assign = $curr_assign_to[0]['EMP_NAME'];

                                        if($curr_assign_to[0]['DATE_RETURN']!=null){
                                            $curr_assign = 'N/A';
                                        }else{

                                            if($curr_assign_to[0]['EMPLOYEE_ID'] ==null && $curr_assign_to[0]['BRANCH']!=null){
                                                $curr_assign = $curr_assign_to[0]['BRANCHNAME'] . ' '.$curr_assign_to[0]['LOCATION'];
                                            }
                                        }


                                    }else{
                                        $curr_assign = 'N/A';
                                    }
                                    $edit="";
                                    $dispose = "";


                                    $response[] = array(
                                        'ITEM_ID' => $item_id,
                                        'BRAND' => $brand,
                                        'MODEL' => $model,
                                        'DESCRIPTION' => $description,
                                        'CURR_STATUS' => $status,
                                        'CURR_ASSIGNED' => $curr_assign,
                                        'SERIAL_NUMBER'=>$serial_number,
                                    );
                                }

                                echo json_encode($response);
                            }
                            else{
                                echo json_encode($sql->errorInfo());
                            }
                        }
                    }
                    else if($type == "inventory department table"){
                        if ($api->databaseConnection()) {


                                $sql = $api->db_connection->prepare('SELECT DEPARTMENT_ID, DEPARTMENT FROM tbldepartment ORDER BY DEPARTMENT_ID');

                                if($sql->execute()){
                                    while($row = $sql->fetch()){
                                        $department_id = trim($row['DEPARTMENT_ID']);
                                        $department = trim($row['DEPARTMENT']);

                                       // if($delete_department > 0){
                                           $assign = '<button type="button" class="btn btn-success waves-effect waves-light text assign-category-dept" data-departmentid="'. $department_id .'" title="Assign Categories">
                                                            <i class="bx bx-list-check font-size-16 align-middle"></i>
                                                       </button>';
                                            $delete = '<button type="button" class="btn btn-danger waves-effect waves-light " data-departmentid="'. $department_id .'" title="Delete Department">
                                                        <i class="bx bx-trash font-size-16 align-middle"></i>
                                                    </button>';
                                      //  }
                                        // else{
                                        //     $delete = '';
                                        // }

                                        $response[] = array(
                                            'DEPARTMENT' => $department,
                                            'ACTION' => $assign . '
                                            </div>'
                                        );
                                    }

                                    echo json_encode($response);
                                }
                                else{
                                    echo $sql->errorInfo()[2];
                                }
                        }

                    }









                    # -------------------------------------------------------------
                    #   Get History data
                    # -------------------------------------------------------------
                    else if($type=="inventory item history"){
                        echo json_encode($api->get_item_history($_POST['data']['itemid']));
                    }


    // ++++++++++++++++++++++++++++++++++++++++++++++changes lemar bill+++++++++++++++++++++++++++++++++++++++++++






    # Telephone log summary table
    else if($type == 'telephone log summary table'){
        if(isset($_POST['parameter1']) && isset($_POST['parameter2']) && isset($_POST['parameter3'])){
            if ($api->databaseConnection()) {
                $parameter1 = $_POST['parameter1'];
                $parameter2 = $api->check_date('empty', $_POST['parameter2'], '', 'Y-m-d', '', '', '');
                $parameter3 = $api->check_date('empty', $_POST['parameter3'], '', 'Y-m-d', '', '', '');

                if(empty($parameter2)){
                    $parameter2 = date('Y-m-01');
                }

                if(empty($parameter3)){
                    $parameter3 = date('Y-m-t');
                }

                $employee_profile_details = $api->get_data_details_one_parameter('employee profile', $username);
                $employee_id = $employee_profile_details[0]['EMPLOYEE_ID'];

                # Get role permission
                $view_all_consumed_telephone_log = $api->check_role_permissions($username, 281);

                $query = "SELECT LOG_ID, INITIAL_CALL_DATE, INITIAL_CALL_TIME, ACTUAL_CALL_DATE, ACTUAL_CALL_TIME, ACTUAL_CALL_DURATION, RECIPIENT, TELEPHONE, REQUEST_DATE, REQUEST_TIME, STATUS, DECISION_DATE, DECISION_TIME, DECISION_BY, REASON FROM tbltelephonelogsheet WHERE STATUS IN ('4', '1', '5')";

                if($view_all_consumed_telephone_log > 0){
                    if($parameter1 == 'initialcalldate'){
                        $sql = $api->db_connection->prepare($query . " AND INITIAL_CALL_DATE BETWEEN :parameter2 AND :parameter3");
                    }
                    else if($parameter1 == 'requestdate'){
                        $sql = $api->db_connection->prepare($query . " AND REQUEST_DATE BETWEEN :parameter2 AND :parameter3");
                    }
                    else if($parameter1 == 'decisiondate'){
                        $sql = $api->db_connection->prepare($query . " AND DECISION_DATE BETWEEN :parameter2 AND :parameter3");
                    }
                    else{
                        $sql = $api->db_connection->prepare($query . " AND ACTUAL_CALL_DATE BETWEEN :parameter2 AND :parameter3");
                    }
                }
                else{
                    if($parameter1 == 'initialcalldate'){
                        $sql = $api->db_connection->prepare($query . " AND (EMPLOYEE_ID IN (SELECT SUBORDINATE_ID FROM tblemployeesubordinate WHERE EMPLOYEE_ID = :employee_id) OR EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM tblemployeeauthorizer WHERE AUTHORIZER_ID = :employee_id)) AND INITIAL_CALL_DATE BETWEEN :parameter2 AND :parameter3");
                    }
                    else if($parameter1 == 'requestdate'){
                        $sql = $api->db_connection->prepare($query . " AND (EMPLOYEE_ID IN (SELECT SUBORDINATE_ID FROM tblemployeesubordinate WHERE EMPLOYEE_ID = :employee_id) OR EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM tblemployeeauthorizer WHERE AUTHORIZER_ID = :employee_id)) AND REQUEST_DATE BETWEEN :parameter2 AND :parameter3");
                    }
                    else if($parameter1 == 'decisiondate'){
                        $sql = $api->db_connection->prepare($query . " AND (EMPLOYEE_ID IN (SELECT SUBORDINATE_ID FROM tblemployeesubordinate WHERE EMPLOYEE_ID = :employee_id) OR EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM tblemployeeauthorizer WHERE AUTHORIZER_ID = :employee_id)) AND DECISION_DATE BETWEEN :parameter2 AND :parameter3");
                    }
                    else{
                        $sql = $api->db_connection->prepare($query . " AND EMPLOYEE_ID IN (SELECT SUBORDINATE_ID FROM tblemployeesubordinate WHERE EMPLOYEE_ID = :employee_id ) AND ACTUAL_CALL_DATE BETWEEN :parameter2 AND :parameter3");
                    }

                    $sql->bindParam(':employee_id', $employee_id);
                }

                $sql->bindParam(':parameter2', $parameter2);
                $sql->bindParam(':parameter3', $parameter3);

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $log_id = trim($row['LOG_ID']);
                        $initial_call_date = $api->check_date('empty', trim($row['INITIAL_CALL_DATE']), '', 'F d, Y', '', '', '');
                        $initial_call_time = $api->check_date('empty', trim($row['INITIAL_CALL_TIME']), '', 'h:i:s a', '', '', '');
                        $actual_call_date = $api->check_date('empty', trim($row['ACTUAL_CALL_DATE']), '', 'F d, Y', '', '', '');
                        $actual_call_time = $api->check_date('empty', trim($row['ACTUAL_CALL_TIME']), '', 'h:i:s a', '', '', '');
                        $request_date = $api->check_date('empty', trim($row['REQUEST_DATE']), '', 'F d, Y', '', '', '');
                        $request_time = $api->check_date('empty', trim($row['REQUEST_TIME']), '', 'h:i:s a', '', '', '');
                        $decision_date = $api->check_date('empty', trim($row['DECISION_DATE']), '', 'F d, Y', '', '', '');
                        $decision_time = $api->check_date('empty', trim($row['DECISION_TIME']), '', 'h:i:s a', '', '', '');
                        $actual_call_duration = trim($row['ACTUAL_CALL_DURATION']);
                        $recipient = trim($row['RECIPIENT']);
                        $telephone = trim($row['TELEPHONE']);
                        $status = trim($row['STATUS']);
                        $decision_by = trim($row['DECISION_BY']);
                        $reason = trim($row['REASON']);
                        $log_status = $api->get_telephone_log_status($status)[0]['BADGE'];

                        $decision_by_details = $api->get_data_details_one_parameter('employee profile', $decision_by);
                        $decision_by_first_name = $decision_by_details[0]['FIRST_NAME'];
                        $decision_by_last_name = $decision_by_details[0]['LAST_NAME'];
                        $decision_by_middle_name = $decision_by_details[0]['MIDDLE_NAME'];
                        $decision_by_suffix = $decision_by_details[0]['SUFFIX'];
                        $decision_by_fullname = $api->get_full_name($decision_by_first_name, $decision_by_middle_name, $decision_by_last_name, $decision_by_suffix)[0]['REVERSE_FULL_NAME'];

                        $response[] = array(
                            'RECIPIENT' => $recipient,
                            'TELEPHONE' => $telephone,
                            'STATUS' => $log_status,
                            'INITIAL_CALL' => $initial_call_date . '<br/>' . $initial_call_time,
                            'ACTUAL_CALL' => $actual_call_date . '<br/>' . $actual_call_time . '<br/>' . $actual_call_duration,
                            'REQUEST_DATE' => $request_date . '<br/>' . $request_time,
                            'DECISION_BY' => $decision_by_fullname,
                            'DECISION_DATE' => $decision_date . '<br/>' . $decision_time,
                            'REASON' => $reason
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo()[2];
                }
            }
        }
    }
    # -------------------------------------------------------------

    # Profile employee leave entitlement table
    else if($type == 'profile employee leave entitlement table'){
        if(isset($_POST['parameter']) && !empty($_POST['parameter'])){
            if ($api->databaseConnection()) {
                $parameter = $_POST['parameter'];

                $sql = $api->db_connection->prepare('SELECT LEAVE_ENTITLEMENT_ID, LEAVE_TYPE, NO_LEAVES, ACQUIRED_NO_LEAVES, START_DATE, END_DATE FROM tblleaveentitlement WHERE EMPLOYEE_ID = :parameter ORDER BY LEAVE_ENTITLEMENT_ID');
                $sql->bindParam(':parameter', $parameter);

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $leave_entitlement_id = trim($row['LEAVE_ENTITLEMENT_ID']);
                        $leave_name = $api->get_data_details_one_parameter('leave type', trim($row['LEAVE_TYPE']))[0]['LEAVE_NAME'];
                        $no_leaves = $row['NO_LEAVES'];
                        $acquired_no_leaves = $row['ACQUIRED_NO_LEAVES'];
                        $leave_status = $api->get_leave_entitlement_status($no_leaves, $acquired_no_leaves)[0]['BADGE'];
                        $start_date = $api->check_date('empty', $row['START_DATE'], '', 'F d, Y', '', '', '');
                        $end_date = $api->check_date('empty', $row['END_DATE'], '', 'F d, Y', '', '', '');

                        $response[] = array(
                            'LEAVE_NAME' => $leave_name,
                            'LEAVE_STATUS' => $leave_status,
                            'DATE_COVERAGE' => $start_date . ' - ' . $end_date
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo()[2];
                }
            }
        }
    }
    # -------------------------------------------------------------

    # Profile employee leave table
    else if($type == 'profile employee leave table'){
        if(isset($_POST['parameter']) && !empty($_POST['parameter'])){
            if ($api->databaseConnection()) {
                $parameter = $_POST['parameter'];

                $sql = $api->db_connection->prepare('SELECT LEAVE_ID, LEAVE_TYPE, LEAVE_DATE, REASON, START_TIME, END_TIME, STATUS, CANCELATION_REASON, REJECTION_REASON, ATTACHMENT_PATH FROM tblleave WHERE EMPLOYEE_ID = :parameter ORDER BY LEAVE_ID');
                $sql->bindParam(':parameter', $parameter);

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $leave_id = trim($row['LEAVE_ID']);
                        $leave_date = $api->check_date('empty', $row['LEAVE_DATE'], '', 'F d, Y', '', '', '');
                        $reason = trim($row['REASON']);
                        $status = trim($row['STATUS']);
                        $leave_type = trim($row['LEAVE_TYPE']);
                        $cancelation_reason = trim($row['CANCELATION_REASON']);
                        $rejection_reason = trim($row['REJECTION_REASON']);
                        $start_time = $api->check_date('empty', trim($row['START_TIME']), '', 'h:i a', '', '', '');
                        $end_time = $api->check_date('empty', trim($row['END_TIME']), '', 'h:i a', '', '', '');
                        $leave_name = $api->get_data_details_one_parameter('leave type', $leave_type)[0]['LEAVE_NAME'];
                        $leave_status = $api->get_leave_status($status, $system_date, $leave_date)[0]['BADGE'];

                        $attachment = $row['ATTACHMENT_PATH'];
                        $attachment_button = '';

                        if($attachment != null){
                           // $leave_name = '<a href="'.$attachment.'" target="_blank">'.$leave_type_details[0]['LEAVE_NAME'].'</a>';
                            $attachment_button = '<a href="'.$attachment.'" target="_blank" class="btn btn-primary btn-sm">see attachment</a>';
                        }else{
                            //$leave_name = $leave_type_details[0]['LEAVE_NAME'];
                            $attachment_button = ' no attachement';
                        }


                        $response[] = array(
                            'LEAVE_NAME' => $leave_name,
                            'LEAVE_DATE' => $leave_date . '<br/>' . $start_time . ' - ' . $end_time,
                            'LEAVE_STATUS' => $leave_status,
                            'ATTACHMENT_PATH' =>$attachment_button ,
                            'REASON' => $reason,
                            'CANCELATION_REASON' => $cancelation_reason,
                            'REJECTION_REASON' => $rejection_reason,
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo()[2];
                }
            }
        }
    }
    # -------------------------------------------------------------

    # Profile employee document table
    else if($type == 'profile employee document table'){
        if(isset($_POST['parameter']) && !empty($_POST['parameter'])){
            if ($api->databaseConnection()) {
                $parameter = $_POST['parameter'];

                # Get role permission
                $delete_employee_document = $api->check_role_permissions($username, 63);

                $sql = $api->db_connection->prepare('SELECT DOCUMENT_ID, DOCUMENT_NAME, DOCUMENT_NOTE, DOCUMENT_PATH, DOCUMENT_DATE, DOCUMENT_CATEGORY, UPLOAD_DATE, UPLOAD_TIME, UPLOAD_BY FROM tblemployeedocument WHERE EMPLOYEE_ID = :parameter ORDER BY DOCUMENT_ID');
                $sql->bindParam(':parameter', $parameter);

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $document_id = trim($row['DOCUMENT_ID']);
                        $document_name = trim($row['DOCUMENT_NAME']);
                        $document_note = trim($row['DOCUMENT_NOTE']);
                        $document_path = trim($row['DOCUMENT_PATH']);
                        $document_category = $api->get_system_description('EMPLOYEEDOC', $row['DOCUMENT_CATEGORY']);
                        $upload_time = trim($row['UPLOAD_TIME']);
                        $upload_by = trim($row['UPLOAD_BY']);
                        $document_date = $api->check_date('empty', $row['DOCUMENT_DATE'], '', 'F d, Y', '', '', '');
                        $upload_date = $api->check_date('empty', $row['UPLOAD_DATE'], '', 'F d, Y', '', '', '');

                        $upload_by_details = $api->get_data_details_one_parameter('employee profile', $upload_by);
                        $upload_by_by_first_name = $upload_by_details[0]['FIRST_NAME'];
                        $upload_by_by_last_name = $upload_by_details[0]['LAST_NAME'];
                        $upload_by_by_middle_name = $upload_by_details[0]['MIDDLE_NAME'];
                        $upload_by_by_suffix = $upload_by_details[0]['SUFFIX'];
                        $upload_by_by_fullname = $api->get_full_name($upload_by_by_first_name, $upload_by_by_middle_name, $upload_by_by_last_name, $upload_by_by_suffix)[0]['REVERSE_FULL_NAME'];

                        if($delete_employee_document > 0){
                            $delete = '<button type="button" class="btn btn-danger waves-effect waves-light delete-employee-document" data-documentid="'. $document_id .'" data-employeeid="'. $parameter .'" title="Delete Employee Document">
                                        <i class="bx bx-trash font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $delete = '';
                        }

                        $response[] = array(
                            'DOCUMENT_NAME' => '<a href="'. $document_path .'" target="_blank">
                                                    '. $document_name .'
                                                </a>',
                            'DOCUMENT_CATEGORY' => $document_category,
                            'DOCUMENT_NOTE' => $document_note,
                            'DOCUMENT_DATE' => $document_date,
                            'UPLOAD_DATE' => $upload_date . '<br/>' . $upload_time,
                            'UPLOAD_BY' => $upload_by_by_fullname
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo()[2];
                }
            }
        }
    }
    # -------------------------------------------------------------

    # Profile employee attendance logs table
    else if($type == 'profile employee attendance logs table'){
        if(isset($_POST['parameter']) && !empty($_POST['parameter'])){
            if ($api->databaseConnection()) {
                $parameter = $_POST['parameter'];

                $sql = $api->db_connection->prepare('SELECT ATTENDANCE_ID, TIME_IN_DATE, TIME_IN, TIME_IN_BY, TIME_IN_IP, TIME_IN_LAT, TIME_IN_LONG, TIME_OUT_DATE, TIME_OUT, TIME_OUT_BY, TIME_OUT_IP, TIME_OUT_LAT, TIME_OUT_LONG, LATE, EARLY_LEAVING, OVERTIME, TOTAL_HOURS, REMARKS FROM tblattendancerecord WHERE EMPLOYEE_ID = :parameter ORDER BY ATTENDANCE_ID');
                $sql->bindParam(':parameter', $parameter);

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $attendance_id = trim($row['ATTENDANCE_ID']);
                        $time_in_date = $api->check_date('empty', trim($row['TIME_IN_DATE']), '', 'F d, Y', '', '', '');
                        $time_in = $api->check_date('empty', trim($row['TIME_IN']), '', 'h:i:s a', '', '', '');
                        $time_in_by = trim($row['TIME_IN_BY']);
                        $time_in_ip = trim($row['TIME_IN_IP']);
                        $time_in_lat = trim($row['TIME_IN_LAT']);
                        $time_in_long = trim($row['TIME_IN_LONG']);
                        $time_out_date = $api->check_date('empty', trim($row['TIME_OUT_DATE']), '', 'F d, Y', '', '', '');
                        $time_out = $api->check_date('empty', trim($row['TIME_OUT']), '', 'h:i:s a', '', '', '');
                        $time_out_by = trim($row['TIME_OUT_BY']);
                        $time_out_ip = trim($row['TIME_OUT_IP']);
                        $time_out_lat = trim($row['TIME_OUT_LAT']);
                        $time_out_long = trim($row['TIME_OUT_LONG']);
                        $late = number_format($row['LATE'], 2) . ' Minute(s)';
                        $early_leaving = number_format($row['EARLY_LEAVING'], 2) . ' Minute(s)';
                        $overtime = number_format($row['OVERTIME'], 2) . ' Hour(s)';
                        $total_hours = number_format($row['TOTAL_HOURS'], 2) . ' Hour(s)';
                        $remarks = trim($row['REMARKS']);

                        $time_in_by_details = $api->get_data_details_one_parameter('employee profile', $time_in_by);
                        $time_in_by_first_name = $time_in_by_details[0]['FIRST_NAME'];
                        $time_in_by_last_name = $time_in_by_details[0]['LAST_NAME'];
                        $time_in_by_middle_name = $time_in_by_details[0]['MIDDLE_NAME'];
                        $time_in_by_suffix = $time_in_by_details[0]['SUFFIX'];
                        $time_in_by_fullname = $api->get_full_name($time_in_by_first_name, $time_in_by_middle_name, $time_in_by_last_name, $time_in_by_suffix)[0]['REVERSE_FULL_NAME'];

                        if(!empty($time_out_date) && !empty($time_out)){
                            $time_out_by_details = $api->get_data_details_one_parameter('employee profile', $time_out_by);
                            $time_out_by_first_name = $time_out_by_details[0]['FIRST_NAME'];
                            $time_out_by_last_name = $time_out_by_details[0]['LAST_NAME'];
                            $time_out_by_middle_name = $time_out_by_details[0]['MIDDLE_NAME'];
                            $time_out_by_suffix = $time_out_by_details[0]['SUFFIX'];
                            $time_out_by_fullname = $api->get_full_name($time_out_by_first_name, $time_out_by_middle_name, $time_out_by_last_name, $time_out_by_suffix)[0]['REVERSE_FULL_NAME'];
                        }
                        else{
                            $time_out_by_fullname = '';
                        }

                        $response[] = array(
                            'TIME_IN_DATE' => '<a href="https://maps.google.com/?q=' . $time_in_lat . ', ' . $time_in_long . '" target="_blank">' . $time_in_date . '<br/>' . $time_in . '</a>',
                            'TIME_IN_BY' => $time_in_by_fullname,
                            'TIME_IN_IP' => $time_in_ip,
                            'TIME_OUT_DATE' => '<a href="https://maps.google.com/?q=' . $time_out_lat . ', ' . $time_out_long . '" target="_blank">' . $time_out_date . '<br/>' . $time_out . '</a>',
                            'TIME_OUT_BY' => $time_out_by_fullname,
                            'TIME_OUT_IP' => $time_out_ip,
                            'LATE' => $late,
                            'EARLY_LEAVING' => $early_leaving,
                            'OVERTIME' => $overtime,
                            'TOTAL_HOURS' => $total_hours,
                            'REMARKS' => $remarks
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo()[2];
                }
            }
        }
    }
    # -------------------------------------------------------------

    # Dashboard transmittal table
    else if($type == 'dashboard transmittal table'){
        if ($api->databaseConnection()) {
            $employee_details = $api->get_data_details_one_parameter('employee profile', $username);
            $employee_id = $employee_details[0]['EMPLOYEE_ID'];
            $employee_department = $employee_details[0]['DEPARTMENT'];

            # Get role permission
            $delete_transmittal = $api->check_role_permissions($username, 192);
            $receive_transmittal = $api->check_role_permissions($username, 193);
            $retransmit_transmittal = $api->check_role_permissions($username, 194);
            $file_transmittal = $api->check_role_permissions($username, 195);
            $cancel_transmittal = $api->check_role_permissions($username, 196);
            $view_transmittal_history = $api->check_role_permissions($username, 197);

            $sql = $api->db_connection->prepare("SELECT TRANSMITTAL_ID, DESCRIPTION, STATUS, CURRENT_DEPARTMENT, TRANSMITTED_EMPLOYEE, TRANSMITTED_DEPARTMENT, LAST_TRANSACTION_DATE, LAST_TRANSACTION_TIME
            FROM tbltransmittal
            WHERE (CURRENT_DEPARTMENT = :employee_department OR TRANSMITTED_EMPLOYEE = :employee_id OR ((TRANSMITTED_EMPLOYEE IS NULL OR TRANSMITTED_EMPLOYEE = '') AND TRANSMITTED_DEPARTMENT = :employee_department)) OR ((TRANSMITTED_EMPLOYEE IS NOT NULL AND TRANSMITTED_EMPLOYEE IN (SELECT SUBORDINATE_ID FROM tblemployeesubordinate WHERE EMPLOYEE_ID = :employee_id))) LIMIT 50");
            $sql->bindParam(':employee_department', $employee_department);
            $sql->bindParam(':employee_id', $employee_id);

            if($sql->execute()){
                while($row = $sql->fetch()){
                    $transmittal_id = trim($row['TRANSMITTAL_ID']);
                    $description = trim($row['DESCRIPTION']);
                    $status = trim($row['STATUS']);
                    $current_department = trim($row['CURRENT_DEPARTMENT']);
                    $current_department_details = $api->get_data_details_one_parameter('department', $current_department);
                    $current_department_name = $current_department_details[0]['DEPARTMENT'];
                    $transmitted_employee = trim($row['TRANSMITTED_EMPLOYEE']);
                    $transmitted_department = trim($row['TRANSMITTED_DEPARTMENT']);
                    $transmitted_department_details = $api->get_data_details_one_parameter('department', $transmitted_department);
                    $transmitted_department_name = $transmitted_department_details[0]['DEPARTMENT'];
                    $last_transaction_date = $api->check_date('empty', trim($row['LAST_TRANSACTION_DATE']), '', 'm/d/Y', '', '', '');
                    $last_transaction_time = $api->check_date('empty', trim($row['LAST_TRANSACTION_TIME']), '', 'h:i:s a', '', '', '');
                    $transmittal_status = $api->get_transmittal_status($status)[0]['BADGE'];
                    $transmittal_income_outgoing_status = $api->get_incoming_outgoing_status($employee_id, $employee_department, $current_department, $transmitted_employee, $transmitted_department, $status)[0]['BADGE'];

                    if($view_transmittal_history > 0){
                        $description = '<a href="javascript: void(0);" class="view-transmittal-history" data-transmittalid="'. $transmittal_id .'">' . trim($row['DESCRIPTION']) . '</a>';
                    }
                    else{
                        $description = trim($row['DESCRIPTION']);
                    }

                    if($status == '0'){
                        if($delete_transmittal > 0){
                            $delete = '<a class="dropdown-item delete-transmittal" href="javascript: void(0);" data-transmittalid="'. $transmittal_id .'">Delete Transmittal</a>';
                        }
                        else{
                            $delete = '';
                        }
                    }
                    else{
                        $delete = '';
                    }

                    if(($transmitted_employee == $employee_id || (empty($transmitted_employee) && $transmitted_department == $employee_department)) && ($status == '0' || $status == '2')){
                        if($receive_transmittal > 0){
                            $receive = '<a class="dropdown-item receive-transmittal" href="javascript: void(0);" data-transmittalid="'. $transmittal_id .'">Receive Transmittal</a>';
                        }
                        else{
                            $receive = '';
                        }
                    }
                    else{
                        $receive = '';
                    }

                    if(($transmitted_department == $employee_department && ($status == '1' || $status == '3')) || ($current_department == $employee_department && $status == '4')){
                        if($retransmit_transmittal > 0){
                            $retransmit = '<a class="dropdown-item retransmit-transmittal" href="javascript: void(0);" data-transmittalid="'. $transmittal_id .'">Re-Transmit Transmittal</a>';
                        }
                        else{
                            $retransmit = '';
                        }
                    }
                    else{
                        $retransmit = '';
                    }

                    if($transmitted_department == $employee_department && $status == '1'){
                        if($file_transmittal > 0){
                            $file = '<a class="dropdown-item file-transmittal" href="javascript: void(0);" data-transmittalid="'. $transmittal_id .'">File Transmittal</a>';
                        }
                        else{
                            $file = '';
                        }
                    }
                    else{
                        $file = '';
                    }

                    if($current_department == $employee_department && ($status == '0' || $status == '2')){
                        if($cancel_transmittal > 0){
                            $cancel = '<a class="dropdown-item cancel-transmittal" href="javascript: void(0);" data-transmittalid="'. $transmittal_id .'">Cancel Transmittal</a>';
                        }
                        else{
                            $cancel = '';
                        }
                    }
                    else{
                        $cancel = '';
                    }

                    if(!empty($transmitted_employee)){
                        $transmitted_employee_details = $api->get_data_details_one_parameter('employee profile', $transmitted_employee);
                        $transmitted_employee_first_name = $transmitted_employee_details[0]['FIRST_NAME'];
                        $transmitted_employee_last_name = $transmitted_employee_details[0]['LAST_NAME'];
                        $transmitted_employee_middle_name = $transmitted_employee_details[0]['MIDDLE_NAME'];
                        $transmitted_employee_suffix = $transmitted_employee_details[0]['SUFFIX'];
                        $transmitted_employee_fullname = $api->get_full_name($transmitted_employee_first_name, $transmitted_employee_middle_name, $transmitted_employee_last_name, $transmitted_employee_suffix)[0]['REVERSE_FULL_NAME'];

                        $transmitted_to = $transmitted_employee_fullname;
                    }
                    else{
                        $transmitted_to = 'Public';
                    }

                    $response[] = array(
                        'DESCRIPTION' => $description,
                        'CURRENT' => $current_department_name,
                        'TRANSMITTED' => $transmitted_to . '<br/>' . $transmitted_department_name,
                        'TRANSACTION_DATE' => $last_transaction_date . '<br/>' . $last_transaction_time,
                        'STATUS' => $transmittal_status,
                        'INCOMING_OUTGOING' => $transmittal_income_outgoing_status,
                        'ACTION' => '<div class="btn-group dropstart">
                                            <button type="button" class="btn btn-primary btn-sm dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">Action</button>
                                            <div class="dropdown-menu">
                                                <a class="dropdown-item update-transmittal" href="javascript: void(0);" data-transmittalid="'. $transmittal_id .'">Update Transmittal</a>
                                                '. $receive .'
                                                '. $retransmit .'
                                                '. $file .'
                                                '. $cancel .'
                                                '. $delete .'
                                            </div>
                                        </div>'
                    );
                }

                echo json_encode($response);
            }
            else{
                echo $sql->errorInfo()[2];
            }
        }
    }
    # -------------------------------------------------------------

    # Health declaration summary table
    else if($type == 'health declaration summary table'){
        if(isset($_POST['parameter1']) && isset($_POST['parameter2'])){
            if ($api->databaseConnection()) {
                $parameter_1 = $api->check_date('empty', $_POST['parameter1'], '', 'Y-m-d', '', '', '');
                $parameter_2 = $api->check_date('empty', $_POST['parameter2'], '', 'Y-m-d', '', '', '');

                if(empty($parameter_1)){
                    $parameter_1 = date('Y-m-d');
                }

                if(empty($parameter_2)){
                    $parameter_2 = date('Y-m-d');
                }

                $sql = $api->db_connection->prepare("SELECT EMPLOYEE_ID, TEMPERATURE, QUESTION_1, QUESTION_2, QUESTION_3, QUESTION_4, QUESTION_5, QUESTION_5_SPECIFIC, SUBMIT_DATE, SUBMIT_TIME FROM tblhealthdeclaration WHERE SUBMIT_DATE BETWEEN :parameter_1 AND :parameter_2 ORDER BY SUBMIT_DATE DESC, SUBMIT_TIME DESC");
                $sql->bindParam(':parameter_1', $parameter_1);
                $sql->bindParam(':parameter_2', $parameter_2);

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $employee_id = trim($row['EMPLOYEE_ID']);
                        $temperature = trim($row['TEMPERATURE']);
                        $question_1 = $row['QUESTION_1'];
                        $question_2 = $row['QUESTION_2'];
                        $question_3 = $row['QUESTION_3'];
                        $question_4 = $row['QUESTION_4'];
                        $question_5 = $row['QUESTION_5'];
                        $question_5_specific = trim($row['QUESTION_5_SPECIFIC']);
                        $submit_date = $api->check_date('empty', trim($row['SUBMIT_DATE']), '', 'm/d/Y', '', '', '');
                        $submit_time = $api->check_date('empty', trim($row['SUBMIT_TIME']), '', 'H:i:s', '', '', '');

                        $employee_profile_details = $api->get_data_details_one_parameter('employee profile', $employee_id);
                        $employee_first_name = $employee_profile_details[0]['FIRST_NAME'];
                        $employee_last_name = $employee_profile_details[0]['LAST_NAME'];
                        $employee_middle_name = $employee_profile_details[0]['MIDDLE_NAME'];
                        $employee_suffix = $employee_profile_details[0]['SUFFIX'];
                        $employee_email = $employee_profile_details[0]['EMAIL'];
                        $employee_address = $employee_profile_details[0]['ADDRESS'];
                        $employee_phone = $employee_profile_details[0]['PHONE'];
                        $employee_age = $api->get_age($employee_profile_details[0]['BIRTHDAY']);
                        $employee_gender = $api->get_system_description('GENDER', $employee_profile_details[0]['GENDER']);
                        $employee_fullname = $api->get_full_name($employee_first_name, $employee_middle_name, $employee_last_name, $employee_suffix)[0]['REVERSE_FULL_NAME'];

                        $question_decbin = decbin($question_1);

                        if(strlen($question_decbin) == 3){
                            $bin_value = '0' . $question_decbin;
                        }
                        else if(strlen($question_decbin) == 2){
                            $bin_value = '00' . $question_decbin;
                        }
                        else if(strlen($question_decbin) == 1){
                            $bin_value = '000' . $question_decbin;
                        }
                        else{
                            $bin_value = '0000';
                        }

                        if($bin_value[3] == '1'){
                            $sore_throat = 'Yes';
                        }
                        else{
                            $sore_throat = 'No';
                        }

                        if($bin_value[2] == '1'){
                            $body_pains = 'Yes';
                        }
                        else{
                            $body_pains = 'No';
                        }

                        if($bin_value[1] == '1'){
                            $headache = 'Yes';
                        }
                        else{
                            $headache = 'No';
                        }

                        if($bin_value[0] == '1'){
                            $fever = 'Yes';
                        }
                        else{
                            $fever = 'No';
                        }

                        if($question_2 == '1'){
                            $question_2 = 'Yes';
                        }
                        else{
                            $question_2 = 'No';
                        }

                        if($question_3 == '1'){
                            $question_3 = 'Yes';
                        }
                        else{
                            $question_3 = 'No';
                        }

                        if($question_4 == '1'){
                            $question_4 = 'Yes';
                        }
                        else{
                            $question_4 = 'No';
                        }

                        if($question_5 == '1'){
                            $question_5 = 'Yes';
                        }
                        else{
                            $question_5 = 'No';
                        }

                        $response[] = array(
                            'EMPLOYEE' => $employee_fullname,
                            'GENDER' => $employee_gender,
                            'AGE' => $employee_age,
                            'ADDRESS' => $employee_address,
                            'PHONE' => $employee_phone,
                            'EMAIL' => $employee_email,
                            'SUBMIT_DATE' => $submit_date . '<br/>' . $submit_time,
                            'TEMPERATURE' => $temperature,
                            'SORE_THROAT' => $sore_throat,
                            'BODY_PAINS' => $body_pains,
                            'HEADACHE' => $headache,
                            'FEVER' => $fever,
                            'QUESTION_2' => $question_2,
                            'QUESTION_3' => $question_3,
                            'QUESTION_4' => $question_4,
                            'QUESTION_5' => $question_5,
                            'QUESTION_5_SPECIFIC' => $question_5_specific,
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo()[2];
                }
            }
        }
    }
    # -------------------------------------------------------------

    # Meeting table
    else if($type == 'meeting table'){
        if(isset($_POST['filter_branch']) && isset($_POST['filter_department']) && isset($_POST['filter_meeting_type']) && isset($_POST['filter_start_date']) && isset($_POST['filter_end_date'])){
            if ($api->databaseConnection()) {
                $filter_start_date = $api->check_date('empty', $_POST['filter_start_date'], '', 'Y-m-d', '', '', '');
                $filter_end_date = $api->check_date('empty', $_POST['filter_end_date'], '', 'Y-m-d', '', '', '');
                $filter_branch = $_POST['filter_branch'];
                $filter_department = $_POST['filter_department'];
                $filter_meeting_type = $_POST['filter_meeting_type'];

                # Get role permission
                $delete_meeting = $api->check_role_permissions($username, 299);
                $view_all_meeting = $api->check_role_permissions($username, 300);
                $view_meeting_details_page = $api->check_role_permissions($username, 301);
                $view_meeting_printable = $api->check_role_permissions($username, 312);
                $tag_meeting_as_submitted = $api->check_role_permissions($username, 349);
                $tag_meeting_as_pending = $api->check_role_permissions($username, 351);

                $employee_details = $api->get_data_details_one_parameter('employee profile', $username);
                $employee_id = $employee_details[0]['EMPLOYEE_ID'];

                $query = 'SELECT MEETING_ID, AUTHOR, DEPARTMENT, TITLE, MEETING_DATE, START_TIME, END_TIME, MEETING_TYPE, STATUS, DECISION_DATE, DECISION_TIME, DECISION_BY, NOTED_BY FROM tblmeeting';

                if(!empty($filter_branch) || !empty($filter_department) || !empty($filter_meeting_type) || (!empty($filter_start_date) && !empty($filter_end_date))){

                    if($view_all_meeting > 0){
                        $query .= ' WHERE ';
                    }
                    else{
                        $query .= ' WHERE ';

                        $filter[] = '(AUTHOR = :employee_id OR MEETING_ID IN (SELECT MEETING_ID FROM tblmeetingattendees WHERE EMPLOYEE_ID = :employee_id) OR DEPARTMENT IN (SELECT DEPARTMENT FROM tblemployeeprofile WHERE EMPLOYEE_ID = :employee_id))';
                    }

                    if(!empty($filter_branch)){
                        $filter[] = 'AUTHOR IN (SELECT EMPLOYEE_ID FROM tblemployeeprofile WHERE BRANCH = :filter_branch)';
                    }

                    if(!empty($filter_department)){
                        $filter[] = 'AUTHOR IN (SELECT EMPLOYEE_ID FROM tblemployeeprofile WHERE DEPARTMENT = :filter_department)';
                    }

                    if(!empty($filter_meeting_type)){
                        $filter[] = 'MEETING_TYPE = :filter_meeting_type';
                    }

                    if(!empty($filter_start_date) && !empty($filter_end_date)){
                        $filter[] = 'MEETING_DATE BETWEEN :filter_start_date AND :filter_end_date';
                    }

                    if(!empty($filter)){
                        $query .= implode(' AND ', $filter);
                    }
                }
                else{
                    if($view_all_meeting <= 0){
                        $query .= ' WHERE (AUTHOR = :employee_id OR MEETING_ID IN (SELECT MEETING_ID FROM tblmeetingattendees WHERE EMPLOYEE_ID = :employee_id) OR DEPARTMENT IN (SELECT DEPARTMENT FROM tblemployeeprofile WHERE EMPLOYEE_ID = :employee_id))';
                    }
                }

                $sql = $api->db_connection->prepare($query);

                if(!empty($filter_branch) || !empty($filter_department) || !empty($filter_meeting_type) || (!empty($filter_start_date) && !empty($filter_end_date))){
                    if(!empty($filter_branch)){
                        $sql->bindValue(':filter_branch', $filter_branch);
                    }

                    if(!empty($filter_department)){
                        $sql->bindValue(':filter_department', $filter_department);
                    }

                    if(!empty($filter_meeting_type)){
                        $sql->bindValue(':filter_meeting_type', $filter_meeting_type);
                    }

                    if(!empty($filter_start_date) && !empty($filter_end_date)){
                        $sql->bindValue(':filter_start_date', $filter_start_date);
                        $sql->bindValue(':filter_end_date', $filter_end_date);
                    }

                    if($view_all_meeting <= 0){
                        $sql->bindValue(':employee_id', $employee_id);
                    }
                }
                else{
                    if($view_all_meeting <= 0){
                        $sql->bindValue(':employee_id', $employee_id);
                    }
                }

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $meeting_id = trim($row['MEETING_ID']);
                        $meeting_id_encrypted = $api->encrypt_data($meeting_id);
                        $author = trim($row['AUTHOR']);
                        $title = trim($row['TITLE']);
                        $noted_by = trim($row['NOTED_BY']);
                        $meeting_date = $api->check_date('empty', trim($row['MEETING_DATE']), '', 'F d, Y', '', '', '');
                        $start_time = $api->check_date('empty', trim($row['START_TIME']), '', 'h:i:s a', '', '', '');
                        $end_time = $api->check_date('empty', trim($row['END_TIME']), '', 'h:i:s a', '', '', '');
                        $decision_by = trim($row['DECISION_BY']);
                        $status = trim($row['STATUS']);
                        $meeting_status = $api->get_meeting_status($status)[0]['BADGE'];
                        $decision_date = $api->check_date('empty', trim($row['DECISION_DATE']), '', 'F d, Y', '', '', '');
                        $decision_time = $api->check_date('empty', trim($row['DECISION_TIME']), '', 'h:i:s a', '', '', '');
                        $department = trim($row['DEPARTMENT']);
                        $department_details = $api->get_data_details_one_parameter('department', $department);
                        $department_name = $department_details[0]['DEPARTMENT'];
                        $meeting_type = $api->get_system_description('MEETINGTYPE', $row['MEETING_TYPE']);
                        $approve_meeting_permission = $api->check_meeting_permission('A', $meeting_id, $employee_id);
                        $update_meeting_to_pending_permission = $api->check_meeting_permission('P', $meeting_id, $employee_id);
                        $set_meeting_permission = $api->check_meeting_permission('S', $meeting_id, $employee_id);

                        $author_details = $api->get_data_details_one_parameter('employee profile', $author);
                        $author_first_name = $author_details[0]['FIRST_NAME'];
                        $author_last_name = $author_details[0]['LAST_NAME'];
                        $author_middle_name = $author_details[0]['MIDDLE_NAME'];
                        $author_suffix = $author_details[0]['SUFFIX'];
                        $author_fullname = $api->get_full_name($author_first_name, $author_middle_name, $author_last_name, $author_suffix)[0]['REVERSE_FULL_NAME'];

                        if(!empty($decision_by)){
                            $decision_by_details = $api->get_data_details_one_parameter('employee profile', $decision_by);
                            $decision_by_first_name = $decision_by_details[0]['FIRST_NAME'];
                            $decision_by_last_name = $decision_by_details[0]['LAST_NAME'];
                            $decision_by_middle_name = $decision_by_details[0]['MIDDLE_NAME'];
                            $decision_by_suffix = $decision_by_details[0]['SUFFIX'];
                            $decision_by_fullname = $api->get_full_name($decision_by_first_name, $decision_by_middle_name, $decision_by_last_name, $decision_by_suffix)[0]['REVERSE_FULL_NAME'];
                        }
                        else{
                            $decision_by_fullname = '';
                        }

                        if($view_meeting_details_page > 0){
                            $view = '<a href="meeting-details.php?id='. $meeting_id_encrypted .'" class="btn btn-info waves-effect waves-light view-employee" title="View Meeting Details Page">
                                        <i class="bx bx-receipt font-size-16 align-middle"></i>
                                    </a>';
                        }
                        else{
                            $view = '';
                        }

                        if($view_meeting_printable > 0 && $status != '0'){
                            $print = '<a href="meeting-print.php?id='. $meeting_id_encrypted .'" target="_blank" class="btn btn-dark waves-effect waves-light view-employee" title="View Meeting Printable Version">
                                        <i class="bx bx-printer font-size-16 align-middle"></i>
                                    </a>';
                        }
                        else{
                            $print = '';
                        }

                        if($delete_meeting > 0 && $author == $employee_id && $status == '0'){
                            $delete = '<button type="button" class="btn btn-danger waves-effect waves-light delete-meeting" data-meetingid="'. $meeting_id .'" title="Delete Meeting">
                                        <i class="bx bx-trash font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $delete = '';
                        }

                         if(($noted_by == $employee_id) && $status == '2'){
                            $approve = '<button type="button" class="btn btn-success waves-effect waves-light approve-meeting" data-meetingid="'. $meeting_id .'" title="Approve Meeting">
                                        <i class="bx bx-check font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $approve = '';
                        }

                        if(($tag_meeting_as_submitted > 0 && $author == $employee_id) && $status == '0'){
                            $submitted = '<button type="button" class="btn btn-success waves-effect waves-light submit-meeting" data-meetingid="'. $meeting_id .'" title="Tag Meeting As Submitted">
                                        <i class="bx bx-check font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $submitted = '';
                        }

                        if(($tag_meeting_as_pending > 0 && ($author == $employee_id || $noted_by == $employee_id)) && $status == '2'){
                            $pending = '<button type="button" class="btn btn-success waves-effect waves-light update-to-pending-meeting" data-meetingid="'. $meeting_id .'" title="Update Meeting To Pending">
                                        <i class="bx bx-reset font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $pending = '';
                        }

                        if(($set_meeting_permission > 0 && ($author == $employee_id || $noted_by == $employee_id)) && $status == '0'){
                            $assign_permission = '<button type="button" class="btn btn-warning waves-effect waves-light assign-meeting-permission" data-meetingid="'. $meeting_id .'" title="Assign Permission">
                            <i class="bx bx-list-check font-size-16 align-middle"></i>
                            </button>';
                        }
                        else{
                            $assign_permission = '';
                        }

                        $response[] = array(
                            'TITLE' => $title,
                            'AUTHOR' => $author_fullname,
                            'DEPARTMENT' => $department_name,
                            'MEETING_DATE' => $meeting_date,
                            'MEETING_TIME' => $start_time . ' - ' . $end_time,
                            'MEETING_TYPE' => $meeting_type,
                            'STATUS' => $meeting_status,
                            'DECISION_BY' => $decision_by_fullname,
                            'DECISION_DATE' => $decision_date . '<br/>' . $decision_time,
                            'ACTION' => '<div class="d-flex gap-2">
                                    <button type="button" class="btn btn-primary waves-effect waves-light update-meeting" data-meetingid="'. $meeting_id .'" title="View Details">
                                        <i class="bx bx-show font-size-16 align-middle"></i>
                                    </button>
                                    ' . $view . $print . $submitted . $pending . $approve . $assign_permission . $delete .'
                                </div>'
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo()[2];
                }
            }
        }
    }
    # -------------------------------------------------------------

    # Meeting agenda task table
    else if($type == 'meeting task table'){
        if(isset($_POST['parameter'])){
            if ($api->databaseConnection()) {
                $parameter = $_POST['parameter'];

                $meeting_details = $api->get_data_details_one_parameter('meeting', $parameter);
                $meeting_status = $meeting_details[0]['STATUS'];
                $author = $meeting_details[0]['AUTHOR'];
                $noted_by = $meeting_details[0]['NOTED_BY'];

              #  $logged_user = $api->get_data_details_one_parameter('user account',$_SESSION['username'])[0]['EMPLOYEE_ID'];

                $employee_details = $api->get_data_details_one_parameter('employee profile', $username);
                $employee_id = $employee_details[0]['EMPLOYEE_ID'];

                # Get role permission
                $delete_meeting_task = $api->check_role_permissions($username, 306);

                $sql = $api->db_connection->prepare('SELECT TASK_ID, AGENDA, TASK, EMPLOYEE_ID, STATUS, DUE_DATE_TYPE, DUE_DATE, NEW_DUE_DATE FROM tblmeetingtask WHERE MEETING_ID = :parameter');
                $sql->bindParam(':parameter', $parameter);

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $task_id = trim($row['TASK_ID']);
                        $agenda = trim($row['AGENDA']);
                        $task = $row['TASK'];
                        $person = json_decode($row['EMPLOYEE_ID']) ?? null;
                        $status = $row['STATUS'];
                        $agenda_task_status = $api->get_agenda_task_status($status)[0]['BADGE'];
                        $due_date_type = $row['DUE_DATE_TYPE'];
                        $new_due_date = $api->check_date('empty', trim($row['NEW_DUE_DATE'] ), '', 'F d, Y', '', '', '');

                        $meeting_agenda = $api->get_system_description('MEETINGAGENDA', $agenda);

                        //for old meetings
                        if(gettype($person) == 'integer'){

                            $employee_details = $api->get_data_details_one_parameter('employee profile', json_encode ($person));
                            $employee_first_name = $employee_details[0]['FIRST_NAME'] ?? null;
                            $employee_last_name = $employee_details[0]['LAST_NAME'] ?? null;
                            $employee_middle_name = $employee_details[0]['MIDDLE_NAME'] ?? null;
                            $employee_suffix = $employee_details[0]['SUFFIX'] ?? null;
                            $employee_fullname = $api->get_full_name($employee_first_name, $employee_middle_name, $employee_last_name, $employee_suffix)[0]['REVERSE_FULL_NAME'];
                        //for new meetings
                        }else if(gettype($person)== 'array'){

                            $employee_fullname = '';
                            foreach ($person as  $value) {
                                 $employee_details = $api->get_data_details_one_parameter('employee profile', $value);
                                 $employee_first_name = $employee_details[0]['FIRST_NAME'] ?? null;
                                 $employee_last_name = $employee_details[0]['LAST_NAME'] ?? null;
                                 $employee_middle_name = $employee_details[0]['MIDDLE_NAME'] ?? null;
                                 $employee_suffix = $employee_details[0]['SUFFIX'] ?? null;
                                $employee_fullname .= $api->get_full_name($employee_first_name, $employee_middle_name, $employee_last_name, $employee_suffix)[0]['REVERSE_FULL_NAME'].' <br> ';
                            }

                        }





                        if($due_date_type == 'SPECIFICDATE'){
                            $due_date = $api->check_date('empty', trim($row['DUE_DATE']), '', 'F d, Y', '', '', '');
                        }
                        else{
                            $due_date = $api->get_system_description('DUEDATETYPE', $due_date_type);
                        }

                        if($delete_meeting_task > 0 && $meeting_status == '0' && ($author == $employee_id || $noted_by == $employee_id)){
                            $delete = '<button type="button" class="btn btn-danger waves-effect waves-light delete-meeting-task" data-taskid="'. $task_id .'" title="Delete Meeting Discussion">
                                        <i class="bx bx-trash font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $delete = '';
                        }

                        if($meeting_status == '0' && ($author == $employee_id || $noted_by == $employee_id)){
                            $update = '<button type="button" class="btn btn-primary waves-effect waves-light update-meeting-task" data-taskid="'. $task_id .'" title="View Details">
                                            <i class="bx bx-show font-size-16 align-middle"></i>
                                        </button>';
                        }
                        else{
                            $update = '';
                        }

                        $response[] = array(
                            'TASK' => $task,
                            'AGENDA' => $meeting_agenda,
                            'EMPLOYEE' => $employee_fullname,
                            'STATUS' => $agenda_task_status,
                            'DUE_DATE' => $due_date,
                            'NEW_DUE_DATE' => $new_due_date,
                            'ACTION' => '<div class="d-flex gap-2">
                                    ' . $update . $delete .'
                                </div>'
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo();
                }
            }
        }
    }
    # -------------------------------------------------------------

    # Previous meeting table
    else if($type == 'previous meeting table'){
        if(isset($_POST['parameter1'])){
            if(isset($_POST['parameter1']) && isset($_POST['parameter2'])){
                $parameter1 = $_POST['parameter1'];
                $parameter2 = $_POST['parameter2'];

                $meeting_details = $api->get_data_details_one_parameter('meeting', $parameter1);
                $meeting_status = $meeting_details[0]['STATUS'];
                $author = $meeting_details[0]['AUTHOR'];

                $employee_details = $api->get_data_details_one_parameter('employee profile', $username);
                $employee_id = $employee_details[0]['EMPLOYEE_ID'];

                #$sql = $api->db_connection->prepare("SELECT TASK_ID, TASK, EMPLOYEE_ID, STATUS, DUE_DATE_TYPE, DUE_DATE, NEW_DUE_DATE FROM tblmeetingtask WHERE MEETING_ID = :parameter2 AND AGENDA != 'PREVIOUSUPDATES'");
                $sql = $api->db_connection->prepare("SELECT TASK_ID, TASK, EMPLOYEE_ID, STATUS, DUE_DATE_TYPE, DUE_DATE, NEW_DUE_DATE FROM tblmeetingtask WHERE MEETING_ID = :parameter2");
                $sql->bindParam(':parameter2', $parameter2);

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $task_id = trim($row['TASK_ID']);
                        $task = $row['TASK'];
                        $person = json_decode($row['EMPLOYEE_ID']);
                        $status = $row['STATUS'];
                        $agenda_task_status = $api->get_agenda_task_status($status)[0]['BADGE'];
                        $due_date_type = $row['DUE_DATE_TYPE'];

                        // $employee_details = $api->get_data_details_one_parameter('employee profile', $person);
                        // $employee_first_name = $employee_details[0]['FIRST_NAME'];
                        // $employee_last_name = $employee_details[0]['LAST_NAME'];
                        // $employee_middle_name = $employee_details[0]['MIDDLE_NAME'];
                        // $employee_suffix = $employee_details[0]['SUFFIX'];
                        // $employee_fullname = $api->get_full_name($employee_first_name, $employee_middle_name, $employee_last_name, $employee_suffix)[0]['REVERSE_FULL_NAME'];




                        //for old meetings
                        if(gettype($person) == 'integer'){

                            $employee_details = $api->get_data_details_one_parameter('employee profile', json_encode ($person));
                            $employee_first_name = $employee_details[0]['FIRST_NAME'] ?? null;
                            $employee_last_name = $employee_details[0]['LAST_NAME'] ?? null;
                            $employee_middle_name = $employee_details[0]['MIDDLE_NAME'] ?? null;
                            $employee_suffix = $employee_details[0]['SUFFIX'] ?? null;
                            $employee_fullname = $api->get_full_name($employee_first_name, $employee_middle_name, $employee_last_name, $employee_suffix)[0]['REVERSE_FULL_NAME'];
                        //for new meetings
                        }else if(gettype($person)== 'array'){

                            $employee_fullname = '';
                            foreach ($person as  $value) {
                                $employee_details = $api->get_data_details_one_parameter('employee profile', $value);
                                $employee_first_name = $employee_details[0]['FIRST_NAME'] ?? null;
                                $employee_last_name = $employee_details[0]['LAST_NAME'] ?? null;
                                $employee_middle_name = $employee_details[0]['MIDDLE_NAME'] ?? null;
                                $employee_suffix = $employee_details[0]['SUFFIX'] ?? null;
                                $employee_fullname .= $api->get_full_name($employee_first_name, $employee_middle_name, $employee_last_name, $employee_suffix)[0]['REVERSE_FULL_NAME'].' <br> ';
                            }

                        }

                        if($due_date_type == 'SPECIFICDATE'){
                            if(!empty($row['NEW_DUE_DATE'])){
                                $due_date = $api->check_date('empty', trim($row['NEW_DUE_DATE'] ), '', 'F d, Y', '', '', '');
                            }
                            else{
                                $due_date = $api->check_date('empty', trim($row['DUE_DATE'] ), '', 'F d, Y', '', '', '');
                            }
                        }
                        else{
                            $due_date = $api->get_system_description('DUEDATETYPE', $due_date_type);
                        }

                        if($author == $employee_id){
                            $add = '
                            <button type="button" class="btn btn-success waves-effect waves-light add-previous-discussion-to-agenda" data-taskid="'. $task_id .'" title="Add Previous Discussion To Agenda">
                                <i class="bx bx-list-plus font-size-16 align-middle"></i>
                            </button>';
                        }
                        else{
                            $add = '';
                        }

                        $response[] = array(
                            'TASK' => $task,
                            'EMPLOYEE' => $employee_fullname,
                            'STATUS' => $agenda_task_status,
                            'DUE_DATE' => $due_date,
                            'ACTION' => '<div class="d-flex gap-2">
                                    ' . $add .'
                                </div>'
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo();
                }
            }
        }
    }
    # -------------------------------------------------------------

    # Meeting memo table
    else if($type == 'meeting memo table'){
        if(isset($_POST['parameter'])){
            if ($api->databaseConnection()) {
                $parameter = $_POST['parameter'];

                $meeting_details = $api->get_data_details_one_parameter('meeting', $parameter);
                $meeting_status = $meeting_details[0]['STATUS'];
                $author = $meeting_details[0]['AUTHOR'];

                $employee_details = $api->get_data_details_one_parameter('employee profile', $username);
                $employee_id = $employee_details[0]['EMPLOYEE_ID'];

                # Get role permission
                $delete_meeting_memo = $api->check_role_permissions($username, 312);

                $sql = $api->db_connection->prepare('SELECT MEMO_ID, DOCUMENT_ID FROM tblmeetingmemo WHERE MEETING_ID = :parameter');
                $sql->bindParam(':parameter', $parameter);

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $memo_id = trim($row['MEMO_ID']);
                        $document_id = trim($row['DOCUMENT_ID']);

                        $document_details = $api->get_data_details_one_parameter('document', $document_id);
                        $document_name = $document_details[0]['DOCUMENT_NAME'] ?? null;
                        $document_link = $document_details[0]['DOCUMENT_PATH'].'.'.$document_details[0]['DOCUMENT_EXTENSION'];

                        if($delete_meeting_memo > 0 && $meeting_status == '0' && $author == $employee_id){
                            $delete = '<button type="button" class="btn btn-danger waves-effect waves-light delete-meeting-memo" data-memoid="'. $memo_id .'" title="Delete Memos & Procedures">
                                        <i class="bx bx-trash font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $delete = '';
                        }

						if(!empty($document_name)){
						$response[] = array(
                            'DOCUMENT' => '<a href= "'.$document_link.'" target="_blank">'.$document_name.'</a>',
                            'ACTION' => '<div class="d-flex gap-2">
                                    '. $delete .'
                                </div>'
                        );
						}

                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo();
                }
            }
        }
    }
    # -------------------------------------------------------------

    # Meeting other matters table
    else if($type == 'meeting other matters table'){
        if(isset($_POST['parameter'])){
            if ($api->databaseConnection()) {
                $parameter = $_POST['parameter'];

                $meeting_details = $api->get_data_details_one_parameter('meeting', $parameter);
                $meeting_status = $meeting_details[0]['STATUS'];
                $author = $meeting_details[0]['AUTHOR'];
                $noted_by = $meeting_details[0]['NOTED_BY'];

                $employee_details = $api->get_data_details_one_parameter('employee profile', $username);
                $employee_id = $employee_details[0]['EMPLOYEE_ID'];

                # Get role permission
                $delete_meeting_other_matters = $api->check_role_permissions($username, 311);

                $sql = $api->db_connection->prepare('SELECT OTHER_MATTERS_ID, OTHER_MATTERS FROM tblmeetingothermatters WHERE MEETING_ID = :parameter');
                $sql->bindParam(':parameter', $parameter);

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $other_matters_id = trim($row['OTHER_MATTERS_ID']);
                        $other_matters = trim($row['OTHER_MATTERS']);

                        if($delete_meeting_other_matters > 0 && $meeting_status == '0' && $author == $employee_id){
                            $delete = '<button type="button" class="btn btn-danger waves-effect waves-light delete-meeting-other-matters" data-othermattersid="'. $other_matters_id .'" title="Delete Other Matters">
                                        <i class="bx bx-trash font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $delete = '';
                        }

                        if($meeting_status == '0' && ($author == $employee_id || $noted_by == $employee_id)){
                            $update = '<button type="button" class="btn btn-primary waves-effect waves-light update-meeting-other-matters" data-othermattersid="'. $other_matters_id .'" title="View Details">
                                            <i class="bx bx-show font-size-16 align-middle"></i>
                                        </button>';
                        }
                        else{
                            $update = '';
                        }

                        $response[] = array(
                            'OTHER_MATTERS' => $other_matters,
                            'ACTION' => '<div class="d-flex gap-2">
                                    '. $update . $delete .'
                                </div>'
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo();
                }
            }
        }
    }
    # -------------------------------------------------------------

    # Sales partner booking table
    else if($type == 'sales partner booking table'){
        $datas = $api->get_sales_partner_booking_all();
        echo json_encode($datas);
    }
    # -------------------------------------------------------------

    # Position monthly quota table
    else if($type == 'position monthly quota table'){
        $datas = $api->get_position_monthly_quota_all();
        echo json_encode($datas);
    }
    # -------------------------------------------------------------

    # Position monthly quota history table
    else if($type == 'position monthly quota history table'){
        $datas = $api->get_position_monthly_quota_history_all();
        echo json_encode($datas);
    }
    # -------------------------------------------------------------

    # Branch monthly quota history table
    else if($type == 'branch monthly quota history table'){
        $datas = $api->get_branch_monthly_quota_history_all();
        echo json_encode($datas);
    }
    # -------------------------------------------------------------


    #training and seminar report table
    else if($type == 'training and seminar report table'){

            if ($api->databaseConnection()) {
                $training_id = $_POST['parameter'];

                    $sql = $api->db_connection->prepare("SELECT tr.*,CONCAT(ep.LAST_NAME,', ',ep.FIRST_NAME,', ',ep.MIDDLE_NAME) AS FULLNAME
                    FROM tbltrainingreport as tr
                    LEFT JOIN tblemployeeprofile as ep on ep.EMPLOYEE_ID = tr.EMPLOYEE_ID
                    WHERE tr.TRAINING_ID=:training_id");

                    $sql->bindParam(':training_id', $training_id);

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $training_id = trim($row['TRAINING_ID']);
                        $employee = trim($row['FULLNAME']);
                        $learnings = trim($row['LEARNINGS']);
                        $comments = trim($row['COMMENTS']);

                        $response[] = array(
                            'RESPONDERS' => $employee,
                            'LEARNINGS' => $learnings,
                            'COMMENTS' => $comments,
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo()[2];
                }
            }


    }

    # Career table
    else if($type == 'career table'){
        if ($api->databaseConnection()) {
            $get_last_career_order = $api->get_last_career_order();

            # Get role permission
            $delete_career = $api->check_role_permissions($username, 431);
            $publish_career = $api->check_role_permissions($username, 433);
            $unpublish_career = $api->check_role_permissions($username, 434);

            $sql = $api->db_connection->prepare('SELECT CAREER_ID, BRANCH, POSITION, AVAILABLE_POSITION, CAREER_ORDER, PUBLISH, PUBLISH_DATETIME FROM tblcareer');

            if($sql->execute()){
                while($row = $sql->fetch()){
                    $career_id = trim($row['CAREER_ID']);
                    $position = trim($row['POSITION']);
                    $branch = trim($row['BRANCH']);
                    $available_position = number_format($row['AVAILABLE_POSITION']);
                    $career_order = number_format($row['CAREER_ORDER']);
                    $career_id_encrypted = $api->encrypt_data($career_id);

                    $publish = trim($row['PUBLISH']);
                    $publish_status = $api->get_publish_status($publish)[0]['BADGE'];
                    $publish_datetime = $row['PUBLISH_DATETIME'];
                    $hours_since_publish = '';

                    if ($publish == 1 && $publish_datetime) {
                        $now = new DateTime();
                        $published_time = new DateTime($publish_datetime);
                        $interval = $published_time->diff($now);
                        $hours_since_publish = ($interval->days * 24) + $interval->h . ' hr(s)';
                    } else {
                        $hours_since_publish = '-';
                    }





                    if($publish == 1){
                        if($unpublish_career > 0){
                            $publish_unpublish = '&nbsp; <button class="btn btn-danger waves-effect waves-light unpublish-career" title="Unpublish Career" data-careerid="'. $career_id .'">
                                <i class="bx bx-x font-size-16 align-middle"></i>
                                </button>';
                        }
                        else{
                            $publish_unpublish = '';
                        }

                        $delete = '';
                    }
                    else{
                        if($publish_career > 0){
                            $publish_unpublish = '&nbsp; <button class="btn btn-success waves-effect waves-light publish-career" title="Publish Career" data-careerid="'. $career_id .'">
                                <i class="bx bx-list-check font-size-16 align-middle"></i>
                                </button>';
                        }
                        else{
                            $publish_unpublish = '';
                        }

                        if($delete_career > 0){
                            $delete = '&nbsp; <button type="button" class="btn btn-danger waves-effect waves-light delete-career" data-careerid="'. $career_id .'" data-careerorder="'. $career_order .'" title="Delete Career">
                                        <i class="bx bx-trash font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $delete = '';
                        }
                    }

                    $response[] = array(
                        'POSITION' => $position,
                        'BRANCH' => $api->get_data_details_one_parameter('branch',$branch)[0]['BRANCH'] ?? 'NA',
                        'AVAILABLE_POSITION' => $available_position,
                        'HOURS_SINCE_PUBLISH' => $hours_since_publish, // NEW
                        'PUBLISH' => $publish_status,
                        'CAREER_ORDER' => $career_order,
                        'ACTION' => '<button type="button" class="btn btn-primary waves-effect waves-light update-career" data-careerid="'. $career_id .'" title="View Details">
                            <i class="bx bx-show font-size-16 align-middle"></i>
                        </button>' . $publish_unpublish . $delete
                    );

                }

                echo json_encode($response);
            }
            else{
                echo $sql->errorInfo();
            }
        }
    }
#6/18
# PMW Monitoring Table (Server-Side)
else if($type == 'pmw monitoring table'){
    $employment_type = $_POST['employment_type_filter'] ?? '';
    $status = $_POST['status_filter'] ?? '';
    $department = $_POST['department_filter'] ?? '';

    // Call the dedicated API function
    $data = $api->get_pmw_monitoring_data($employment_type, $status, $department);

    // Echo the data or the error string from the API
    if (is_array($data)) {
        echo json_encode($data);
    } else {
        // This sends the error string to our JavaScript error handler
        echo json_encode(['error' => $data]);
    }
    exit;
}

//       # overtime table
//   else if($type == 'overtime table'){
//     if(isset($_POST['parameter1']) && isset($_POST['parameter2'])){
//         if ($api->databaseConnection()) {



//             # Get role permission
//             $view_all_overtime = $api->check_role_permissions($username, 405);
//             $delete_overtime = $api->check_role_permissions($username, 408);
//             $cancel_overtime = $api->check_role_permissions($username, 409);

//             # Fetch Employee ID
//             $employee_details = $api->get_data_details_one_parameter('employee profile', $username);
//             $employee_id = $employee_details[0]['EMPLOYEE_ID'];

//             # Build the SQL query correctly
//             if($view_all_overtime > 0){
//                 $sql = $api->db_connection->prepare("SELECT OVERTIME_ID, EMPLOYEE_ID, TITLE
//                                                      FROM tblovertime
//                                                      ORDER BY OVERTIME_ID DESC");
//             }
//             else{
//                 $sql = $api->db_connection->prepare("SELECT OVERTIME_ID, EMPLOYEE_ID, TITLE
//                                                      FROM tblovertime
//                                                      WHERE EMPLOYEE_ID = :employee_id
//                                                      ORDER BY OVERTIME_ID DESC");
//                 $sql->bindParam(':employee_id', $employee_id);
//             }

//             $sql->bindParam(':parameter_1', $parameter_1);
//             $sql->bindParam(':parameter_2', $parameter_2);

//             if($sql->execute()){
//                 $response = [];
//                 while($row = $sql->fetch()){
//                     $overtime_id = trim($row['OVERTIME_ID']);
//                     $author = trim($row['EMPLOYEE_ID']);
//                     $title = trim($row['TITLE']);

//                     $author_details = $api->get_data_details_one_parameter('employee profile', $author);
//                     $author_first_name = $author_details[0]['FIRST_NAME'];
//                     $author_last_name = $author_details[0]['LAST_NAME'];
//                     $author_middle_name = $author_details[0]['MIDDLE_NAME'];
//                     $author_suffix = $author_details[0]['SUFFIX'];
//                     $author_fullname = $api->get_full_name($author_first_name, $author_middle_name, $author_last_name, $author_suffix)[0]['REVERSE_FULL_NAME'];

//                     # Set Action Buttons
//                     $cancel = ($cancel_overtime > 0) ? '<button type="button" class="btn btn-warning waves-effect waves-light cancel-overtime" data-overtimeid="'. $overtime_id .'" title="Cancel Overtime"><i class="bx bx-x font-size-16 align-middle"></i></button>' : '';
//                     $delete = ($delete_overtime > 0) ? '<button type="button" class="btn btn-danger waves-effect waves-light delete-overtime" data-overtimeid="'. $overtime_id .'" title="Delete Overtime"><i class="bx bx-trash font-size-16 align-middle"></i></button>' : '';

//                     $response[] = array(
//                         'TITLE' => $title,
//                         'AUTHOR' => $author_fullname,
//                         'ACTION' => '<div class="d-flex gap-2">
//                                         <button type="button" class="btn btn-primary waves-effect waves-light update-overtime" data-overtimeid="'. $overtime_id .'" title="View Details">
//                                             <i class="bx bx-show font-size-16 align-middle"></i>
//                                         </button>
//                                         ' .  $cancel . $delete .'
//                                     </div>'
//                     );
//                 }

//                 echo json_encode($response);
//             }
//             else{
//                 echo json_encode(['error' => $sql->errorInfo()[2]]);
//             }
//         }
//     }
// }


 # Training table
    else if($type == 'overtime table'){
        if(isset($_POST['parameter1']) && isset($_POST['parameter2'])){
            if ($api->databaseConnection()) {
                $parameter_1 = $api->check_date('empty', $_POST['parameter1'], '', 'Y-m-d', '', '', '');
                $parameter_2 = $api->check_date('empty', $_POST['parameter2'], '', 'Y-m-d', '', '', '');


                if(empty($parameter_1)){
                    $parameter_1 = date('Y-m-01');
                }

                if(empty($parameter_2)){
                    $parameter_2 = date('Y-m-t');
                }


                # Get role permission
               $view_all_overtime = $api->check_role_permissions($username, 405);
               $delete_overtime = $api->check_role_permissions($username, 408);
               $cancel_overtime = $api->check_role_permissions($username, 409);

                $employee_details = $api->get_data_details_one_parameter('employee profile', $username);
                $employee_id = $employee_details[0]['EMPLOYEE_ID'];

                if($view_all_overtime > 0){
                    $sql = $api->db_connection->prepare('SELECT OVERTIME_ID, EMPLOYEE_ID, TITLE, STATUS, HOLIDAY_TYPE, OVERTIME_DATE, START_TIME, END_TIME, DECISION_DATE, DECISION_TIME, DECISION_BY, REJECTION_REASON, CANCELLATION_REASON FROM tblovertime WHERE OVERTIME_DATE BETWEEN :parameter_1 AND :parameter_2 ORDER BY OVERTIME_DATE DESC');
                }
                else{
                    $sql = $api->db_connection->prepare("SELECT OVERTIME_ID, EMPLOYEE_ID, TITLE, STATUS, HOLIDAY_TYPE, OVERTIME_DATE, START_TIME, END_TIME, DECISION_DATE, DECISION_TIME, DECISION_BY, REJECTION_REASON, CANCELLATION_REASON FROM tblovertime WHERE OVERTIME_DATE BETWEEN :parameter_1 AND :parameter_2 AND EMPLOYEE_ID = :employee_id ORDER BY OVERTIME_DATE DESC");
                    $sql->bindParam(':employee_id', $employee_id);
                }

                $sql->bindParam(':parameter_1', $parameter_1);
                $sql->bindParam(':parameter_2', $parameter_2);

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $overtime_id= trim($row['OVERTIME_ID']);
                        $author = trim($row['EMPLOYEE_ID']);
                        $title = trim($row['TITLE']);
                        $overtime_date = $api->check_date('empty', trim($row['OVERTIME_DATE']), '', 'F d, Y', '', '', '');
                        $start_time_display = $api->check_date('empty', trim($row['START_TIME']), '', 'h:i:s a', '', '', '');
                        $end_time_display = $api->check_date('empty', trim($row['END_TIME']), '', 'h:i:s a', '', '', '');

                        $decision_by = trim($row['DECISION_BY']);
                        $status = trim($row['STATUS']);
                        $overtime_status = $api->get_training_status($status)[0]['BADGE'];
                        $rejection_reason = trim($row['REJECTION_REASON']);
                        $cancellation_reason = trim($row['CANCELLATION_REASON']);
                        $overtime_status = $api->get_training_status($status)[0]['BADGE'];
                        $decision_date = $api->check_date('empty', trim($row['DECISION_DATE']), '', 'F d, Y', '', '', '');
                        $decision_time = $api->check_date('empty', trim($row['DECISION_TIME']), '', 'h:i:s a', '', '', '');
                        $holiday_type = $api->get_system_description('HOLIDAYTYPE', $row['HOLIDAY_TYPE']);

                        $author_details = $api->get_data_details_one_parameter('employee profile', $author);
                        $author_first_name = $author_details[0]['FIRST_NAME'];
                        $author_last_name = $author_details[0]['LAST_NAME'];
                        $author_middle_name = $author_details[0]['MIDDLE_NAME'];
                        $author_suffix = $author_details[0]['SUFFIX'];
                        $author_fullname = $api->get_full_name($author_first_name, $author_middle_name, $author_last_name, $author_suffix)[0]['REVERSE_FULL_NAME'];

                        // Convert to DateTime objects for calculation
                        $start_datetime = new DateTime(trim($row['START_TIME']));
                        $end_datetime = new DateTime(trim($row['END_TIME']));

                        // Calculate the difference
                         $interval = $end_datetime->diff($start_datetime);

                        // Format the total hours and minutes
                        $total_hours = $interval->h + ($interval->days * 24);
                        $total_minutes = $interval->i;

                        // Create the formatted duration string
                        $duration = '';
                        if ($total_hours > 0) {
                            $duration .= $total_hours . ' hour' . ($total_hours != 1 ? 's' : '');
                        }
                        if ($total_minutes > 0) {
                            if ($duration != '') {
                                $duration .= ' ';
                            }
                            $duration .= $total_minutes . ' minute' . ($total_minutes != 1 ? 's' : '');
                        }

                        // If the duration is empty (less than a minute), show "Less than a minute"
                        if ($duration == '') {
                            $duration = 'Less than a minute';
                        }

                        if(!empty($decision_by)){
                            $decision_by_details = $api->get_data_details_one_parameter('employee profile', $decision_by);
                            $decision_by_first_name = $decision_by_details[0]['FIRST_NAME'];
                            $decision_by_last_name = $decision_by_details[0]['LAST_NAME'];
                            $decision_by_middle_name = $decision_by_details[0]['MIDDLE_NAME'];
                            $decision_by_suffix = $decision_by_details[0]['SUFFIX'];
                            $decision_by_fullname = $api->get_full_name($decision_by_first_name, $decision_by_middle_name, $decision_by_last_name, $decision_by_suffix)[0]['REVERSE_FULL_NAME'];
                        }
                        else{
                            $decision_by_fullname = '';
                        }

                        if($delete_overtime> 0 && $author == $employee_id && $status == '0'){
                            $delete = '<button type="button" class="btn btn-danger waves-effect waves-light delete-overtime" data-overtimeid="'. $overtime_id .'" title="Delete Overtime">
                                        <i class="bx bx-trash font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $delete = '';
                        }



                        if($cancel_overtime > 0 && ($status == '0' || $status == '1' || $status == '2') && $author == $employee_id){
                            $cancel = '<button type="button" class="btn btn-warning waves-effect waves-light cancel-overtime" data-overtimeid="'. $overtime_id .'" title="Cancel Overtime">
                                            <i class="bx bx-block font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $cancel = '';
                        }


                        $response[] = array(
                            'TITLE' =>$title ,
                            'AUTHOR' => $author_fullname,
                            'OVERTIME_DATE' => $overtime_date,
                            'OVERTIME_TIME' => $start_time_display . ' - ' . $end_time_display . ' <b>(' . $duration . ') </b>',
                            'HOLIDAY_TYPE' => $holiday_type,
                            'STATUS' => $overtime_status,
                            'DECISION_BY' => $decision_by_fullname,
                            'DECISION_DATE' => $decision_date . '<br/>' . $decision_time,
                            'REJECTION_REASON' => $rejection_reason,
                            'CANCELLATION_REASON' => $cancellation_reason,
                            'ACTION' => '<div class="d-flex gap-2">
                                    <button type="button" class="btn btn-primary waves-effect waves-light update-overtime" data-overtimeid="'. $overtime_id.'" title="View Details">
                                        <i class="bx bx-show font-size-16 align-middle"></i>
                                    </button>
                                    ' .  $cancel . $delete .'
                                </div>'
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo()[2];
                }
            }
        }
    }


    else if($type == 'overtime summary table'){
    if(isset($_POST['parameter1']) && !empty($_POST['parameter1']) && isset($_POST['parameter2']) && !empty($_POST['parameter2']) && isset($_POST['parameter3']) && !empty($_POST['parameter3'])){
        if ($api->databaseConnection()) {
            $parameter1 = $_POST['parameter1']; // Employee ID
            $parameter2 = $_POST['parameter2']; // Start date
            $parameter3 = $_POST['parameter3']; // End date

            // Convert dates to database format
            $start_date = $api->check_date('empty', $parameter2, '', 'Y-m-d', '', '', '');
            $end_date = $api->check_date('empty', $parameter3, '', 'Y-m-d', '', '', '');

            // Use default range (current month) if dates are empty or invalid
            if(empty($start_date)){
                $start_date = date('Y-m-01');
            }
            if(empty($end_date)){
                $end_date = date('Y-m-t');
            }

            // Query approved overtime entries (STATUS = '1') for the employee within date range
            $sql = $api->db_connection->prepare("SELECT OVERTIME_ID, TITLE, STATUS, HOLIDAY_TYPE, OVERTIME_DATE, START_TIME, END_TIME, DECISION_DATE, DECISION_TIME, DECISION_BY, REJECTION_REASON, CANCELLATION_REASON FROM tblovertime WHERE EMPLOYEE_ID = :parameter1 AND OVERTIME_DATE BETWEEN :parameter2 AND :parameter3 AND STATUS = '2' ORDER BY OVERTIME_DATE DESC");
            $sql->bindParam(':parameter1', $parameter1);
            $sql->bindParam(':parameter2', $start_date);
            $sql->bindParam(':parameter3', $end_date);

            if($sql->execute()){
                $response = array();

                while($row = $sql->fetch()){
                    $overtime_id = trim($row['OVERTIME_ID']);
                    $title = trim($row['TITLE']);
                    $overtime_date = $api->check_date('empty', trim($row['OVERTIME_DATE']), '', 'm/d/Y', '', '', '');
                    $status = trim($row['STATUS']);
                    $decision_date = $api->check_date('empty', trim($row['DECISION_DATE']), '', 'm/d/Y', '', '', '');
                    $decision_time = $api->check_date('empty', trim($row['DECISION_TIME']), '', 'h:i a', '', '', '');
                    $holiday_type = $api->get_system_description('HOLIDAYTYPE', $row['HOLIDAY_TYPE']);
                    $start_time = $api->check_date('empty', trim($row['START_TIME']), '', 'h:i a', '', '', '');
                    $end_time = $api->check_date('empty', trim($row['END_TIME']), '', 'h:i a', '', '', '');
                    $overtime_status = $api->get_training_status($status)[0]['BADGE'];
                    $rejection_reason = trim($row['REJECTION_REASON']);
                    $cancellation_reason = trim($row['CANCELLATION_REASON']);

                    // Get decision maker details if available
                    $decision_by = trim($row['DECISION_BY']);
                    $decision_by_fullname = '';

                    if(!empty($decision_by)){
                        $decision_by_details = $api->get_data_details_one_parameter('employee profile', $decision_by);
                        $decision_by_first_name = $decision_by_details[0]['FIRST_NAME'];
                        $decision_by_last_name = $decision_by_details[0]['LAST_NAME'];
                        $decision_by_middle_name = $decision_by_details[0]['MIDDLE_NAME'];
                        $decision_by_suffix = $decision_by_details[0]['SUFFIX'];
                        $decision_by_fullname = $api->get_full_name($decision_by_first_name, $decision_by_middle_name, $decision_by_last_name, $decision_by_suffix)[0]['REVERSE_FULL_NAME'];
                    }

                    // Calculate duration between start and end time
                    $start_datetime = new DateTime(trim($row['START_TIME']));
                    $end_datetime = new DateTime(trim($row['END_TIME']));
                    $interval = $end_datetime->diff($start_datetime);

                    // Format the total hours and minutes for human-readable display
                    $total_hours = $interval->h + ($interval->days * 24);
                    $total_minutes = $interval->i;

                    // Create the formatted duration string
                    $duration = '';
                    if ($total_hours > 0) {
                        $duration .= $total_hours . ' hour' . ($total_hours != 1 ? 's' : '');
                    }
                    if ($total_minutes > 0) {
                        if ($duration != '') {
                            $duration .= ' ';
                        }
                        $duration .= $total_minutes . ' minute' . ($total_minutes != 1 ? 's' : '');
                    }

                    if ($duration == '') {
                        $duration = 'Less than a minute';
                    }

                    // Calculate decimal hours for payroll purposes
                    $decimal_hours = $total_hours + ($total_minutes / 60);
                    $formatted_decimal_hours = number_format($decimal_hours, 2);

                    $response[] = array(
                        'OVERTIME_ID' => $overtime_id,
                        'TITLE' => $title,
                        'OVERTIME_DATE' => $overtime_date,
                        'OVERTIME_TIME' => $start_time . ' - ' . $end_time . ' <b>(' . $duration . ')</b>',
                        'DECIMAL_HOURS' => $formatted_decimal_hours,
                        'HOLIDAY_TYPE' => $holiday_type,
                        'STATUS' => $overtime_status,
                        'DECISION_BY' => $decision_by_fullname,
                        'DECISION_DATE' => $decision_date . ($decision_time ? '<br/>' . $decision_time : ''),
                        'REJECTION_REASON' => $rejection_reason,
                        'CANCELLATION_REASON' => $cancellation_reason
                    );
                }

                echo json_encode($response);
            }
            else{
                echo $sql->errorInfo()[2];
            }
        }
    }
}


     else if($type == 'overtime recommendation table'){
        if ($api->databaseConnection()) {

            # Get role permission
            $view_pending_recommendation = $api->check_role_permissions($username, 411);
            $recommend_overtime = $api->check_role_permissions($username, 412);
            $reject_overtime = $api->check_role_permissions($username, 413);
            $cancel_overtime = $api->check_role_permissions($username, 414);


            $employee_profile_details = $api->get_data_details_one_parameter('employee profile', $username);
            $employee_id = $employee_profile_details[0]['EMPLOYEE_ID'];



            if($view_pending_recommendation > 0){
                $sql = $api->db_connection->prepare("SELECT OVERTIME_ID, EMPLOYEE_ID, TITLE, STATUS, HOLIDAY_TYPE, OVERTIME_DATE, START_TIME, END_TIME FROM tblovertime WHERE STATUS = '0' ORDER BY OVERTIME_DATE DESC");
            }
            else{
                $sql = $api->db_connection->prepare("SELECT OVERTIME_ID, EMPLOYEE_ID, TITLE, STATUS, HOLIDAY_TYPE, OVERTIME_DATE, START_TIME, END_TIME FROM tblovertime WHERE STATUS = '0' AND EMPLOYEE_ID IN (SELECT SUBORDINATE_ID FROM tblemployeesubordinate WHERE EMPLOYEE_ID = :employee_id) ORDER BY OVERTIME_DATE DESC");
                $sql->bindParam(':employee_id', $employee_id);
            }





            if($sql->execute()){
                while($row = $sql->fetch()){
                        $overtime_id= trim($row['OVERTIME_ID']);
                        $author = trim($row['EMPLOYEE_ID']);
                        $title = trim($row['TITLE']);
                        $overtime_date = $api->check_date('empty', trim($row['OVERTIME_DATE']), '', 'F d, Y', '', '', '');

                        $decision_by = trim($row['DECISION_BY']);
                        $status = trim($row['STATUS']);
                        $overtime_status = $api->get_training_status($status)[0]['BADGE'];
                        $rejection_reason = trim($row['REJECTION_REASON']);
                        $cancellation_reason = trim($row['CANCELLATION_REASON']);
                        $overtime_status = $api->get_training_status($status)[0]['BADGE'];
                        $decision_date = $api->check_date('empty', trim($row['DECISION_DATE']), '', 'F d, Y', '', '', '');
                        $decision_time = $api->check_date('empty', trim($row['DECISION_TIME']), '', 'h:i:s a', '', '', '');
                        $holiday_type = $api->get_system_description('HOLIDAYTYPE', $row['HOLIDAY_TYPE']);

                        $start_time_display = $api->check_date('empty', trim($row['START_TIME']), '', 'h:i:s a', '', '', '');
                        $end_time_display = $api->check_date('empty', trim($row['END_TIME']), '', 'h:i:s a', '', '', '');
                        // Convert to DateTime objects for calculation
                        $start_datetime = new DateTime(trim($row['START_TIME']));
                        $end_datetime = new DateTime(trim($row['END_TIME']));

                        // Calculate the difference
                         $interval = $end_datetime->diff($start_datetime);

                        // Format the total hours and minutes
                        $total_hours = $interval->h + ($interval->days * 24);
                        $total_minutes = $interval->i;

                        // Create the formatted duration string
                        $duration = '';
                        if ($total_hours > 0) {
                            $duration .= $total_hours . ' hour' . ($total_hours != 1 ? 's' : '');
                        }
                        if ($total_minutes > 0) {
                            if ($duration != '') {
                                $duration .= ' ';
                            }
                            $duration .= $total_minutes . ' minute' . ($total_minutes != 1 ? 's' : '');
                        }

                        // If the duration is empty (less than a minute), show "Less than a minute"
                        if ($duration == '') {
                            $duration = 'Less than a minute';
                        }

                    $author_details = $api->get_data_details_one_parameter('employee profile', $author);
                    $author_first_name = $author_details[0]['FIRST_NAME'];
                    $author_last_name = $author_details[0]['LAST_NAME'];
                    $author_middle_name = $author_details[0]['MIDDLE_NAME'];
                    $author_suffix = $author_details[0]['SUFFIX'];
                    $author_fullname = $api->get_full_name($author_first_name, $author_middle_name, $author_last_name, $author_suffix)[0]['REVERSE_FULL_NAME'];

                    if($cancel_overtime > 0 && strtotime($overtime_date) > strtotime($system_date)){
                        $cancel = '<button type="button" class="btn btn-warning waves-effect waves-light cancel-overtime" data-overtimeid="'. $overtime_id .'" title="Cancel Overtime">
                                        <i class="bx bx-block font-size-16 align-middle"></i>
                                </button>';
                    }
                    else{
                        $cancel = '';
                    }

                    if($reject_overtime > 0){
                        $reject = '<button type="button" class="btn btn-danger waves-effect waves-light reject-overtime" data-overtimeid="'. $overtime_id .'" title="Reject Overtime">
                                    <i class="bx bx-x font-size-16 align-middle"></i>
                                </button>';
                    }
                    else{
                        $reject = '';
                    }

                    if($recommend_overtime > 0){
                        $recommend = '<button type="button" class="btn btn-success waves-effect waves-light recommend-overtime" data-overtimeid="'. $overtime_id .'" title="Recommend Overtime">
                                    <i class="bx bx-check font-size-16 align-middle"></i>
                                </button>';
                    }
                    else{
                        $recommend = '';
                    }

                    $response[] = array(
                            'TITLE' =>$title ,
                            'AUTHOR' => $author_fullname,
                            'OVERTIME_DATE' => $overtime_date,
                            'OVERTIME_TIME' => $start_time_display . ' - ' . $end_time_display . ' <b>(' . $duration . ') </>',
                            'HOLIDAY_TYPE' => $holiday_type,
                            'STATUS' => $overtime_status,
                            'ACTION' => '<div class="d-flex gap-2">
                                ' . $recommend . $reject .'
                            </div>'
                    );
                }

                echo json_encode($response);
            }
            else{
                echo $sql->errorInfo()[2];
            }
        }
    }

    else if($type == 'overtime summary table'){
    if(isset($_POST['parameter1']) && !empty($_POST['parameter1']) && isset($_POST['parameter2']) && !empty($_POST['parameter2']) && isset($_POST['parameter3']) && !empty($_POST['parameter3'])){
        if ($api->databaseConnection()) {
            $parameter1 = $_POST['parameter1']; // Employee ID
            $parameter2 = $_POST['parameter2']; // Start date
            $parameter3 = $_POST['parameter3']; // End date

            // Convert dates to database format
            $start_date = $api->check_date('empty', $parameter2, '', 'Y-m-d', '', '', '');
            $end_date = $api->check_date('empty', $parameter3, '', 'Y-m-d', '', '', '');

            // Use default range (current month) if dates are empty or invalid
            if(empty($start_date)){
                $start_date = date('Y-m-01');
            }
            if(empty($end_date)){
                $end_date = date('Y-m-t');
            }

            // Query approved overtime entries (STATUS = '1') for the employee within date range
            $sql = $api->db_connection->prepare("SELECT OVERTIME_ID, TITLE, STATUS, HOLIDAY_TYPE, OVERTIME_DATE, START_TIME, END_TIME, DECISION_DATE, DECISION_TIME, DECISION_BY, REJECTION_REASON, CANCELLATION_REASON FROM tblovertime WHERE EMPLOYEE_ID = :parameter1 AND OVERTIME_DATE BETWEEN :parameter2 AND :parameter3 AND STATUS = '1' ORDER BY OVERTIME_DATE DESC");
            $sql->bindParam(':parameter1', $parameter1);
            $sql->bindParam(':parameter2', $start_date);
            $sql->bindParam(':parameter3', $end_date);

            if($sql->execute()){
                $response = array();

                while($row = $sql->fetch()){
                    $overtime_id = trim($row['OVERTIME_ID']);
                    $title = trim($row['TITLE']);
                    $overtime_date = $api->check_date('empty', trim($row['OVERTIME_DATE']), '', 'm/d/Y', '', '', '');
                    $status = trim($row['STATUS']);
                    $decision_date = $api->check_date('empty', trim($row['DECISION_DATE']), '', 'm/d/Y', '', '', '');
                    $decision_time = $api->check_date('empty', trim($row['DECISION_TIME']), '', 'h:i a', '', '', '');
                    $holiday_type = $api->get_system_description('HOLIDAYTYPE', $row['HOLIDAY_TYPE']);
                    $start_time = $api->check_date('empty', trim($row['START_TIME']), '', 'h:i a', '', '', '');
                    $end_time = $api->check_date('empty', trim($row['END_TIME']), '', 'h:i a', '', '', '');
                    $overtime_status = $api->get_training_status($status)[0]['BADGE'];
                    $rejection_reason = trim($row['REJECTION_REASON']);
                    $cancellation_reason = trim($row['CANCELLATION_REASON']);

                    // Get decision maker details if available
                    $decision_by = trim($row['DECISION_BY']);
                    $decision_by_fullname = '';

                    if(!empty($decision_by)){
                        $decision_by_details = $api->get_data_details_one_parameter('employee profile', $decision_by);
                        $decision_by_first_name = $decision_by_details[0]['FIRST_NAME'];
                        $decision_by_last_name = $decision_by_details[0]['LAST_NAME'];
                        $decision_by_middle_name = $decision_by_details[0]['MIDDLE_NAME'];
                        $decision_by_suffix = $decision_by_details[0]['SUFFIX'];
                        $decision_by_fullname = $api->get_full_name($decision_by_first_name, $decision_by_middle_name, $decision_by_last_name, $decision_by_suffix)[0]['REVERSE_FULL_NAME'];
                    }

                    // Calculate duration between start and end time
                    $start_datetime = new DateTime(trim($row['START_TIME']));
                    $end_datetime = new DateTime(trim($row['END_TIME']));
                    $interval = $end_datetime->diff($start_datetime);

                    // Format the total hours and minutes for human-readable display
                    $total_hours = $interval->h + ($interval->days * 24);
                    $total_minutes = $interval->i;

                    // Create the formatted duration string
                    $duration = '';
                    if ($total_hours > 0) {
                        $duration .= $total_hours . ' hour' . ($total_hours != 1 ? 's' : '');
                    }
                    if ($total_minutes > 0) {
                        if ($duration != '') {
                            $duration .= ' ';
                        }
                        $duration .= $total_minutes . ' minute' . ($total_minutes != 1 ? 's' : '');
                    }

                    if ($duration == '') {
                        $duration = 'Less than a minute';
                    }

                    // Calculate decimal hours for payroll purposes
                    $decimal_hours = $total_hours + ($total_minutes / 60);
                    $formatted_decimal_hours = number_format($decimal_hours, 2);

                    $response[] = array(
                        'OVERTIME_ID' => $overtime_id,
                        'TITLE' => $title,
                        'OVERTIME_DATE' => $overtime_date,
                        'OVERTIME_TIME' => $start_time . ' - ' . $end_time . ' <b>(' . $duration . ')</b>',
                        'DECIMAL_HOURS' => $formatted_decimal_hours,
                        'HOLIDAY_TYPE' => $holiday_type,
                        'STATUS' => $overtime_status,
                        'DECISION_BY' => $decision_by_fullname,
                        'DECISION_DATE' => $decision_date . ($decision_time ? '<br/>' . $decision_time : ''),
                        'REJECTION_REASON' => $rejection_reason,
                        'CANCELLATION_REASON' => $cancellation_reason
                    );
                }

                echo json_encode($response);
            }
            else{
                echo $sql->errorInfo()[2];
            }
        }
    }
}


    else if($type == 'overtime approval table'){
        if ($api->databaseConnection()) {

            # Get role permission
            $approve_overtime = $api->check_role_permissions($username, 418);
            $reject_overtime = $api->check_role_permissions($username, 416);
            $cancel_overtime = $api->check_role_permissions($username, 417);
            $view_all_approval_overtime = $api->check_role_permissions($username, 415);
            $employee_details = $api->get_data_details_one_parameter('employee profile', $username);
            $employee_id = $employee_details[0]['EMPLOYEE_ID'];

            if($view_all_approval_overtime > 0){
                $sql = $api->db_connection->prepare("SELECT OVERTIME_ID, EMPLOYEE_ID, TITLE, STATUS, HOLIDAY_TYPE, OVERTIME_DATE, START_TIME, END_TIME FROM tblovertime WHERE STATUS = '1' ORDER BY OVERTIME_DATE DESC");
            }
            else{
                $sql = $api->db_connection->prepare("SELECT OVERTIME_ID, EMPLOYEE_ID, TITLE, STATUS, HOLIDAY_TYPE, OVERTIME_DATE, START_TIME, END_TIME FROM tblovertime
                WHERE STATUS = '1'
                AND (EMPLOYEE_ID IN (SELECT SUBORDINATE_ID FROM tblemployeesubordinate WHERE EMPLOYEE_ID = :employee_id) OR EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM tblemployeeauthorizer WHERE AUTHORIZER_ID = :employee_id)) ORDER BY OVERTIME_DATE DESC");
                $sql->bindParam(':employee_id', $employee_id);
            }




            if($sql->execute()){
                while($row = $sql->fetch()){
                        $overtime_id= trim($row['OVERTIME_ID']);
                        $author = trim($row['EMPLOYEE_ID']);
                        $title = trim($row['TITLE']);
                        $overtime_date = $api->check_date('empty', trim($row['OVERTIME_DATE']), '', 'F d, Y', '', '', '');
                        $decision_by = trim($row['DECISION_BY']);
                        $status = trim($row['STATUS']);
                        $overtime_status = $api->get_training_status($status)[0]['BADGE'];
                        $rejection_reason = trim($row['REJECTION_REASON']);
                        $cancellation_reason = trim($row['CANCELLATION_REASON']);
                        $overtime_status = $api->get_training_status($status)[0]['BADGE'];
                        $decision_date = $api->check_date('empty', trim($row['DECISION_DATE']), '', 'F d, Y', '', '', '');
                        $decision_time = $api->check_date('empty', trim($row['DECISION_TIME']), '', 'h:i:s a', '', '', '');
                        $holiday_type = $api->get_system_description('HOLIDAYTYPE', $row['HOLIDAY_TYPE']);


                        $start_time_display = $api->check_date('empty', trim($row['START_TIME']), '', 'h:i:s a', '', '', '');
                        $end_time_display = $api->check_date('empty', trim($row['END_TIME']), '', 'h:i:s a', '', '', '');
                        // Convert to DateTime objects for calculation
                        $start_datetime = new DateTime(trim($row['START_TIME']));
                        $end_datetime = new DateTime(trim($row['END_TIME']));

                        // Calculate the difference
                         $interval = $end_datetime->diff($start_datetime);

                        // Format the total hours and minutes
                        $total_hours = $interval->h + ($interval->days * 24);
                        $total_minutes = $interval->i;

                        // Create the formatted duration string
                        $duration = '';
                        if ($total_hours > 0) {
                            $duration .= $total_hours . ' hour' . ($total_hours != 1 ? 's' : '');
                        }
                        if ($total_minutes > 0) {
                            if ($duration != '') {
                                $duration .= ' ';
                            }
                            $duration .= $total_minutes . ' minute' . ($total_minutes != 1 ? 's' : '');
                        }

                        // If the duration is empty (less than a minute), show "Less than a minute"
                        if ($duration == '') {
                            $duration = 'Less than a minute';
                        }


                    $author_details = $api->get_data_details_one_parameter('employee profile', $author);
                    $author_first_name = $author_details[0]['FIRST_NAME'];
                    $author_last_name = $author_details[0]['LAST_NAME'];
                    $author_middle_name = $author_details[0]['MIDDLE_NAME'];
                    $author_suffix = $author_details[0]['SUFFIX'];
                    $author_fullname = $api->get_full_name($author_first_name, $author_middle_name, $author_last_name, $author_suffix)[0]['REVERSE_FULL_NAME'];

                    if($cancel_overtime > 0 && strtotime($overtime_date) > strtotime($system_date)){
                        $cancel = '<button type="button" class="btn btn-warning waves-effect waves-light cancel-overtime" data-overtimeid="'. $overtime_id .'" title="Cancel Overtime">
                                        <i class="bx bx-block font-size-16 align-middle"></i>
                                </button>';
                    }
                    else{
                        $cancel = '';
                    }

                    if($reject_overtime > 0){
                        $reject = '<button type="button" class="btn btn-danger waves-effect waves-light reject-overtime" data-overtimeid="'. $overtime_id .'" title="Reject Overtime">
                                    <i class="bx bx-x font-size-16 align-middle"></i>
                                </button>';
                    }
                    else{
                        $reject = '';
                    }

                    if($approve_overtime > 0){
                        $approve = '<button type="button" class="btn btn-success waves-effect waves-light approve-overtime" data-overtimeid="'. $overtime_id .'" title="Approve Overtime">
                                    <i class="bx bx-check font-size-16 align-middle"></i>
                                </button>';
                    }
                    else{
                        $approve = '';
                    }

                    $response[] = array(
                             'TITLE' =>$title ,
                            'AUTHOR' => $author_fullname,
                            'OVERTIME_DATE' => $overtime_date,
                            'OVERTIME_TIME' => $start_time_display . ' - ' . $end_time_display . ' <b>(' . $duration . ') </b>',
                            'HOLIDAY_TYPE' => $holiday_type,
                            'STATUS' => $overtime_status,
                        'ACTION' => '<div class="d-flex gap-2">
                                ' . $approve . $reject . $cancel .'
                            </div>'
                    );
                }

                echo json_encode($response);
            }
            else{
                echo $sql->errorInfo()[2];
            }
        }
    }

    # -------------------------------------------------------------

    # Training table
    else if($type == 'training table'){
        if(isset($_POST['parameter1']) && isset($_POST['parameter2'])){
            if ($api->databaseConnection()) {
                $parameter_1 = $api->check_date('empty', $_POST['parameter1'], '', 'Y-m-d', '', '', '');
                $parameter_2 = $api->check_date('empty', $_POST['parameter2'], '', 'Y-m-d', '', '', '');


                if(empty($parameter_1)){
                    $parameter_1 = date('Y-m-01');
                }

                if(empty($parameter_2)){
                    $parameter_2 = date('Y-m-t');
                }


                # Get role permission
                $view_all_training = $api->check_role_permissions($username, 316);
                $delete_training = $api->check_role_permissions($username, 319);
                $assign_attendees = $api->check_role_permissions($username, 320);
                $cancel_training = $api->check_role_permissions($username, 321);
                $lock_training = $api->check_role_permissions($username, 333);
                $unlock_training = $api->check_role_permissions($username, 334);

                $employee_details = $api->get_data_details_one_parameter('employee profile', $username);
                $employee_id = $employee_details[0]['EMPLOYEE_ID'];

                if($view_all_training > 0){
                    $sql = $api->db_connection->prepare('SELECT TRAINING_ID, EMPLOYEE_ID, TITLE, STATUS, TRAINING_TYPE, TRAINING_DATE, START_TIME, END_TIME, DECISION_DATE, DECISION_TIME, DECISION_BY, REJECTION_REASON, CANCELLATION_REASON FROM tbltraining WHERE TRAINING_DATE BETWEEN :parameter_1 AND :parameter_2 ORDER BY TRAINING_DATE DESC');
                }
                else{
                    $sql = $api->db_connection->prepare("SELECT TRAINING_ID, EMPLOYEE_ID, TITLE, STATUS, TRAINING_TYPE, TRAINING_DATE, START_TIME, END_TIME, DECISION_DATE, DECISION_TIME, DECISION_BY, REJECTION_REASON, CANCELLATION_REASON FROM tbltraining WHERE TRAINING_DATE BETWEEN :parameter_1 AND :parameter_2 AND (EMPLOYEE_ID = :employee_id OR TRAINING_ID IN (SELECT TRAINING_ID FROM tbltrainingattendees WHERE EMPLOYEE_ID = :employee_id)) ORDER BY TRAINING_DATE DESC");
                    $sql->bindParam(':employee_id', $employee_id);
                }

                $sql->bindParam(':parameter_1', $parameter_1);
                $sql->bindParam(':parameter_2', $parameter_2);

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $training_id = trim($row['TRAINING_ID']);
                        $author = trim($row['EMPLOYEE_ID']);
                        $title = trim($row['TITLE']);
                        $training_date = $api->check_date('empty', trim($row['TRAINING_DATE']), '', 'F d, Y', '', '', '');
                        $start_time = $api->check_date('empty', trim($row['START_TIME']), '', 'h:i:s a', '', '', '');
                        $end_time = $api->check_date('empty', trim($row['END_TIME']), '', 'h:i:s a', '', '', '');
                        $decision_by = trim($row['DECISION_BY']);
                        $status = trim($row['STATUS']);
                        $rejection_reason = trim($row['REJECTION_REASON']);
                        $cancellation_reason = trim($row['CANCELLATION_REASON']);
                        $training_status = $api->get_training_status($status)[0]['BADGE'];
                        $decision_date = $api->check_date('empty', trim($row['DECISION_DATE']), '', 'F d, Y', '', '', '');
                        $decision_time = $api->check_date('empty', trim($row['DECISION_TIME']), '', 'h:i:s a', '', '', '');
                        $training_type = $api->get_system_description('TRAININGTYPE', $row['TRAINING_TYPE']);

                        $author_details = $api->get_data_details_one_parameter('employee profile', $author);
                        $author_first_name = $author_details[0]['FIRST_NAME'];
                        $author_last_name = $author_details[0]['LAST_NAME'];
                        $author_middle_name = $author_details[0]['MIDDLE_NAME'];
                        $author_suffix = $author_details[0]['SUFFIX'];
                        $author_fullname = $api->get_full_name($author_first_name, $author_middle_name, $author_last_name, $author_suffix)[0]['REVERSE_FULL_NAME'];

                        if(!empty($decision_by)){
                            $decision_by_details = $api->get_data_details_one_parameter('employee profile', $decision_by);
                            $decision_by_first_name = $decision_by_details[0]['FIRST_NAME'];
                            $decision_by_last_name = $decision_by_details[0]['LAST_NAME'];
                            $decision_by_middle_name = $decision_by_details[0]['MIDDLE_NAME'];
                            $decision_by_suffix = $decision_by_details[0]['SUFFIX'];
                            $decision_by_fullname = $api->get_full_name($decision_by_first_name, $decision_by_middle_name, $decision_by_last_name, $decision_by_suffix)[0]['REVERSE_FULL_NAME'];
                        }
                        else{
                            $decision_by_fullname = '';
                        }

                        if($delete_training > 0 && $author == $employee_id && $status == '0'){
                            $delete = '<button type="button" class="btn btn-danger waves-effect waves-light delete-training" data-trainingid="'. $training_id .'" title="Delete Training">
                                        <i class="bx bx-trash font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $delete = '';
                        }

                        if($cancel_training > 0 && ($status == '0' || $status == '1' || $status == '2') && $author == $employee_id){
                            $cancel = '<button type="button" class="btn btn-warning waves-effect waves-light cancel-training" data-trainingid="'. $training_id .'" title="Cancel Training">
                                            <i class="bx bx-block font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $cancel = '';
                        }

                        if($assign_attendees > 0 && $status == '0'){
                            $assign_user = '<button type="button" class="btn btn-dark waves-effect waves-light assign-training-attendees" data-trainingid="'. $training_id .'" title="Assign Training Attendees">
                            <i class="bx bx-user-check font-size-16 align-middle"></i>
                            </button>';
                        }
                        else{
                            $assign_user = '';
                        }

                        if($unlock_training > 0 && $status == '5'){
                            $unlock = '<button class="btn btn-info waves-effect waves-light unlock-training" title="Unlock Training" data-trainingid="'. $training_id .'">
                            <i class="bx bx-lock-open-alt font-size-16 align-middle"></i>
                            </button>';
                        }
                        else{
                            $unlock = '';
                        }

                        if($lock_training > 0 && ($status == '6' || $status == '2')){
                            $lock = '<button class="btn btn-warning waves-effect waves-light lock-training" title="Lock Training" data-trainingid="'. $training_id .'">
                            <i class="bx bx-lock-alt font-size-16 align-middle"></i>
                            </button>';
                        }
                        else{
                            $lock = '';
                        }

                        //validation for displaying link if the date of training greater than today's date
                        if(date($row['TRAINING_DATE']) < date("Y-m-d")){
                           $title = '<a href = "trainings-and-seminars-report.php?trainingid='.$training_id.'">'.$title.'</a>';
                        }

                        $response[] = array(
                            'TITLE' =>$title ,
                            'AUTHOR' => $author_fullname,
                            'TRAINING_DATE' => $training_date,
                            'TRAINING_TIME' => $start_time . ' - ' . $end_time,
                            'TRAINING_TYPE' => $training_type,
                            'STATUS' => $training_status,
                            'DECISION_BY' => $decision_by_fullname,
                            'DECISION_DATE' => $decision_date . '<br/>' . $decision_time,
                            'REJECTION_REASON' => $rejection_reason,
                            'CANCELLATION_REASON' => $cancellation_reason,
                            'ACTION' => '<div class="d-flex gap-2">
                                    <button type="button" class="btn btn-primary waves-effect waves-light update-training" data-trainingid="'. $training_id .'" title="View Details">
                                        <i class="bx bx-show font-size-16 align-middle"></i>
                                    </button>
                                    ' . $assign_user . $lock . $unlock . $cancel . $delete .'
                                </div>'
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo()[2];
                }
            }
        }
    }
    # -------------------------------------------------------------




    # Training recommendation table
    else if($type == 'training recommendation table'){
        if ($api->databaseConnection()) {

            # Get role permission
            $view_all_training = $api->check_role_permissions($username, 323);
            $recommend_training = $api->check_role_permissions($username, 324);
            $reject_training = $api->check_role_permissions($username, 325);
            $cancel_training = $api->check_role_permissions($username, 326);

            $employee_details = $api->get_data_details_one_parameter('employee profile', $username);
            $employee_id = $employee_details[0]['EMPLOYEE_ID'];

            if($view_all_training > 0){
                $sql = $api->db_connection->prepare("SELECT TRAINING_ID, EMPLOYEE_ID, TITLE, STATUS, TRAINING_TYPE, TRAINING_DATE, START_TIME, END_TIME FROM tbltraining WHERE STATUS = '0' ORDER BY TRAINING_DATE DESC");
            }
            else{
                $sql = $api->db_connection->prepare("SELECT TRAINING_ID, EMPLOYEE_ID, TITLE, STATUS, TRAINING_TYPE, TRAINING_DATE, START_TIME, END_TIME FROM tbltraining WHERE STATUS = '0'
                      AND (EMPLOYEE_ID IN (SELECT SUBORDINATE_ID FROM tblemployeesubordinate WHERE EMPLOYEE_ID = :employee_id) OR EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM tblemployeeauthorizer WHERE AUTHORIZER_ID = :employee_id)) ORDER BY TRAINING_DATE DESC");
                $sql->bindParam(':employee_id', $employee_id);
            }




            if($sql->execute()){
                while($row = $sql->fetch()){
                    $training_id = trim($row['TRAINING_ID']);
                    $author = trim($row['EMPLOYEE_ID']);
                    $title = trim($row['TITLE']);
                    $training_date = $api->check_date('empty', trim($row['TRAINING_DATE']), '', 'F d, Y', '', '', '');
                    $start_time = $api->check_date('empty', trim($row['START_TIME']), '', 'h:i:s a', '', '', '');
                    $end_time = $api->check_date('empty', trim($row['END_TIME']), '', 'h:i:s a', '', '', '');
                    $status = trim($row['STATUS']);
                    $training_status = $api->get_training_status($status)[0]['BADGE'];
                    $training_type = $api->get_system_description('TRAININGTYPE', $row['TRAINING_TYPE']);

                    $author_details = $api->get_data_details_one_parameter('employee profile', $author);
                    $author_first_name = $author_details[0]['FIRST_NAME'];
                    $author_last_name = $author_details[0]['LAST_NAME'];
                    $author_middle_name = $author_details[0]['MIDDLE_NAME'];
                    $author_suffix = $author_details[0]['SUFFIX'];
                    $author_fullname = $api->get_full_name($author_first_name, $author_middle_name, $author_last_name, $author_suffix)[0]['REVERSE_FULL_NAME'];

                    if($cancel_training > 0 && strtotime($training_date) > strtotime($system_date)){
                        $cancel = '<button type="button" class="btn btn-warning waves-effect waves-light cancel-training" data-trainingid="'. $training_id .'" title="Cancel Training">
                                        <i class="bx bx-block font-size-16 align-middle"></i>
                                </button>';
                    }
                    else{
                        $cancel = '';
                    }

                    if($reject_training > 0){
                        $reject = '<button type="button" class="btn btn-danger waves-effect waves-light reject-training" data-trainingid="'. $training_id .'" title="Reject Training">
                                    <i class="bx bx-x font-size-16 align-middle"></i>
                                </button>';
                    }
                    else{
                        $reject = '';
                    }

                    if($recommend_training > 0){
                        $recommend = '<button type="button" class="btn btn-success waves-effect waves-light recommend-training" data-trainingid="'. $training_id .'" title="Recommend Training">
                                    <i class="bx bx-check font-size-16 align-middle"></i>
                                </button>';
                    }
                    else{
                        $recommend = '';
                    }

                    $response[] = array(
                        'TITLE' => $title,
                        'AUTHOR' => $author_fullname,
                        'TRAINING_DATE' => $training_date,
                        'TRAINING_TIME' => $start_time . ' - ' . $end_time,
                        'TRAINING_TYPE' => $training_type,
                        'STATUS' => $training_status,
                        'ACTION' => '<div class="d-flex gap-2">
                                ' . $recommend . $reject . $cancel .'
                            </div>'
                    );
                }

                echo json_encode($response);
            }
            else{
                echo $sql->errorInfo()[2];
            }
        }
    }



    # -------------------------------------------------------------

    # Training approval table
    else if($type == 'training approval table'){
        if ($api->databaseConnection()) {

            # Get role permission
            $approve_approve = $api->check_role_permissions($username, 328);
            $reject_training = $api->check_role_permissions($username, 329);
            $cancel_training = $api->check_role_permissions($username, 330);

            $employee_details = $api->get_data_details_one_parameter('employee profile', $username);
            $employee_id = $employee_details[0]['EMPLOYEE_ID'];

            $sql = $api->db_connection->prepare("SELECT TRAINING_ID, EMPLOYEE_ID, TITLE, STATUS, TRAINING_TYPE, TRAINING_DATE, START_TIME, END_TIME FROM tbltraining WHERE STATUS = '1' ORDER BY TRAINING_DATE DESC");

            if($sql->execute()){
                while($row = $sql->fetch()){
                    $training_id = trim($row['TRAINING_ID']);
                    $author = trim($row['EMPLOYEE_ID']);
                    $title = trim($row['TITLE']);
                    $training_date = $api->check_date('empty', trim($row['TRAINING_DATE']), '', 'F d, Y', '', '', '');
                    $start_time = $api->check_date('empty', trim($row['START_TIME']), '', 'h:i:s a', '', '', '');
                    $end_time = $api->check_date('empty', trim($row['END_TIME']), '', 'h:i:s a', '', '', '');
                    $status = trim($row['STATUS']);
                    $training_status = $api->get_training_status($status)[0]['BADGE'];
                    $training_type = $api->get_system_description('TRAININGTYPE', $row['TRAINING_TYPE']);

                    $author_details = $api->get_data_details_one_parameter('employee profile', $author);
                    $author_first_name = $author_details[0]['FIRST_NAME'];
                    $author_last_name = $author_details[0]['LAST_NAME'];
                    $author_middle_name = $author_details[0]['MIDDLE_NAME'];
                    $author_suffix = $author_details[0]['SUFFIX'];
                    $author_fullname = $api->get_full_name($author_first_name, $author_middle_name, $author_last_name, $author_suffix)[0]['REVERSE_FULL_NAME'];

                    if($cancel_training > 0 && strtotime($training_date) > strtotime($system_date)){
                        $cancel = '<button type="button" class="btn btn-warning waves-effect waves-light cancel-training" data-trainingid="'. $training_id .'" title="Cancel Training">
                                        <i class="bx bx-block font-size-16 align-middle"></i>
                                </button>';
                    }
                    else{
                        $cancel = '';
                    }

                    if($reject_training > 0){
                        $reject = '<button type="button" class="btn btn-danger waves-effect waves-light reject-training" data-trainingid="'. $training_id .'" title="Reject Training">
                                    <i class="bx bx-x font-size-16 align-middle"></i>
                                </button>';
                    }
                    else{
                        $reject = '';
                    }

                    if($approve_approve > 0){
                        $approve = '<button type="button" class="btn btn-success waves-effect waves-light approve-training" data-trainingid="'. $training_id .'" title="Approve Training">
                                    <i class="bx bx-check font-size-16 align-middle"></i>
                                </button>';
                    }
                    else{
                        $approve = '';
                    }

                    $response[] = array(
                        'TITLE' => $title,
                        'AUTHOR' => $author_fullname,
                        'TRAINING_DATE' => $training_date,
                        'TRAINING_TIME' => $start_time . ' - ' . $end_time,
                        'TRAINING_TYPE' => $training_type,
                        'STATUS' => $training_status,
                        'ACTION' => '<div class="d-flex gap-2">
                                ' . $approve . $reject . $cancel .'
                            </div>'
                    );
                }

                echo json_encode($response);
            }
            else{
                echo $sql->errorInfo()[2];
            }
        }
    }
    # -------------------------------------------------------------

    # Training report table
    else if($type == 'training report table'){
        if ($api->databaseConnection()) {
            # Get role permission
            $add_training_report = $api->check_role_permissions($username, 332);

            $employee_details = $api->get_data_details_one_parameter('employee profile', $username);
            $employee_id = $employee_details[0]['EMPLOYEE_ID'];

            $sql = $api->db_connection->prepare("SELECT TRAINING_ID, EMPLOYEE_ID, TITLE, STATUS, TRAINING_TYPE, TRAINING_DATE, START_TIME, END_TIME FROM tbltraining WHERE (STATUS = '2' OR STATUS = '6') AND TRAINING_DATE <= :system_date AND TRAINING_ID IN (SELECT TRAINING_ID FROM tbltrainingattendees WHERE EMPLOYEE_ID = :username) ORDER BY TRAINING_DATE DESC");
            $sql->bindParam(':system_date', $system_date);
            $sql->bindParam(':username', $username);

            if($sql->execute()){
                while($row = $sql->fetch()){
                    $training_id = trim($row['TRAINING_ID']);
                    $author = trim($row['EMPLOYEE_ID']);
                    $title = trim($row['TITLE']);
                    $training_date = $api->check_date('empty', trim($row['TRAINING_DATE']), '', 'F d, Y', '', '', '');
                    $start_time = $api->check_date('empty', trim($row['START_TIME']), '', 'h:i:s a', '', '', '');
                    $end_time = $api->check_date('empty', trim($row['END_TIME']), '', 'h:i:s a', '', '', '');
                    $training_type = $api->get_system_description('TRAININGTYPE', $row['TRAINING_TYPE']);

                    $check_training_report = $api->check_data_exist_two_parameter('training report', $training_id, $employee_id);

                    if($check_training_report > 0){
                        $status = '<span class="badge bg-success">Submitted</span>';
                    }
                    else{
                        $status = '<span class="badge bg-danger">Not Yet Submitted</span>';
                    }


                    $author_details = $api->get_data_details_one_parameter('employee profile', $author);
                    $author_first_name = $author_details[0]['FIRST_NAME'];
                    $author_last_name = $author_details[0]['LAST_NAME'];
                    $author_middle_name = $author_details[0]['MIDDLE_NAME'];
                    $author_suffix = $author_details[0]['SUFFIX'];
                    $author_fullname = $api->get_full_name($author_first_name, $author_middle_name, $author_last_name, $author_suffix)[0]['REVERSE_FULL_NAME'];

                    if($add_training_report > 0){
                        $add = '<button type="button" class="btn btn-success waves-effect waves-light add-training-report" data-trainingid="'. $training_id .'" title="Add/Update Training Report">
                                    <i class="bx bx-plus font-size-16 align-middle"></i>
                                </button>';
                    }
                    else{
                        $add = '';
                    }

                    $response[] = array(
                        'TITLE' => $title,
                        'AUTHOR' => $author_fullname,
                        'TRAINING_DATE' => $training_date,
                        'TRAINING_TIME' => $start_time . ' - ' . $end_time,
                        'TRAINING_TYPE' => $training_type,
                        'STATUS' => $status,
                        'ACTION' => '<div class="d-flex gap-2">
                                ' . $add .'
                            </div>'
                    );
                }

                echo json_encode($response);
            }
            else{
                echo $sql->errorInfo()[2];
            }
        }
    }


    #--------------------------------------------------------------

    else if($type == 'purchase request items table'){

        if ($api->databaseConnection()){

            #pr number
            $prno = $_POST['prno'];

            #ROLES
            $delete_pr_items = 1;

            $sql = $api->db_connection->prepare("SELECT * FROM tblpritems WHERE PRNO=?");


            if($sql->execute([$prno])){
                while($row = $sql->fetch()){
                    $IDNO  = trim($row['IDNO']);
                    $QUANTITY = trim($row['QUANTITY']);
                    $UNIT = trim($row['UNIT']);
                    $PARTICULAR = trim($row['PARTICULAR']);
                    $BUDGET = trim($row['BUDGET']);
                    $ESTIMATEDCOST = trim($row['ESTIMATEDCOST']);


                    $actions = '';

                    if($delete_pr_items > 0){
                      $actions .= '<button class="btn btn-danger btn-delete-item-purchase-request" data-item-pr="'.$api->encrypt_data($IDNO)  .'" ><i class="bx bxs-trash"></i></button>';
                   }

                    $response[] = array(
                        'IDNO' => $IDNO,
                        'QUANTITY' => $QUANTITY,
                        'UNIT' =>  $UNIT,
                        'PARTICULAR' => $PARTICULAR,
                        'BUDGET' => $BUDGET,
                        'ESTIMATEDCOST' => $ESTIMATEDCOST,
                        'ACTION' => '<div class="d-flex gap-2 justify-content-center">
                               '.$actions.'
                            </div>'
                    );

                }
                echo json_encode($response);
            }
            else{
                echo $sql->errorInfo()[2];
            }
        }

    }
    else if($type == 'purchase request table'){

        if ($api->databaseConnection()){

            #LOGGED USER DETAILS
            $user_details_dept = $api->get_data_details_one_parameter('employee profile',$_POST['username'])[0]['DEPARTMENT'];

            #FILTER DATA
            $filter_date_type = $_POST['filter_date_type'];
            $filter_date_start = $api->convert_date($_POST['filter_date_start'],"m/d/Y","Y-m-d");
            $filter_date_end =   $api->convert_date( $_POST['filter_date_end'],"m/d/Y","Y-m-d");
            $filter_status = $_POST['filter_status'];
            $filter_department = $_POST['filter_department'];

            #ROLES
            $view_pr_items = $api->check_role_permissions($username, 399);
            $condition = '1 ';
            if(isset($filter_date_type)){
                $date_type = '';
                if($filter_date_type == 'requested_date'){$date_type ='CREATED_AT';}
                if($filter_date_type == 'date_needed'){$date_type ='DATE_NEEDED';}
                $condition .= "AND (DATE(".$date_type.") BETWEEN DATE('".$filter_date_start."') AND DATE('". $filter_date_end."'))" ;
            }

            if(isset($filter_status)){
                    if($filter_status == "SHOW ALL STATUS"){
                        $condition .=" ";
                    }else{
                        $condition .= " AND tblpurchaserequest.STATUS = '".$filter_status."' ";
                    }
            }

            if(isset($filter_department)){
                if($filter_department == "SHOW ALL DEPT"){
                    $condition .=" ";
                }else{
                    if($filter_department == "GET_CURRENT_DEPT"){
                        $condition .= " AND DEPARTMENT = '".$user_details_dept."' ";
                    }else{
                        $condition .= " AND DEPARTMENT = '".$filter_department."' ";
                    }

                }
            }



            $sql = $api->db_connection->prepare("SELECT * FROM tblpurchaserequest WHERE ".$condition );


            if($sql->execute()){
                while($row = $sql->fetch()){

                    $PRNO = trim($row['PRNO']);
                    $TITLE = trim($row['TITLE']);
                    $DEPARTMENT = $api->get_data_details_one_parameter('department',trim($row['DEPARTMENT']))[0]['DEPARTMENT'];
                    $DATE_NEEDED = trim($row['DATE_NEEDED']);
                    $STATUS = trim($row['STATUS']);
                    $CREATED_AT = trim($row['CREATED_AT']);

                    $actions = '';

                    if($view_pr_items > 0){
                      $actions .= '<a class="btn btn-primary" href="purchase-request-create.php?prid='.$api->encrypt_data($PRNO).'"><i class="bx bx-show-alt"></i> | <i class="bx bx-edit"></i></a>';
                   }

                    $response[] = array(
                        'PRNO' => $PRNO,
                        'TITLE' =>  $TITLE,
                        'DEPARTMENT' => $DEPARTMENT,
                        'DATE_NEEDED' => $DATE_NEEDED,
                        'STATUS' => $STATUS,
                        'REQUESTED_DATE'=>$CREATED_AT,
                        'ACTION' => '<div class="d-flex gap-2 justify-content-center">
                               '.$actions.'
                            </div>'
                    );

                }
                echo json_encode($response);
            }
            else{
                echo $sql->errorInfo()[2];
            }
        }


    }

    # Vault access table

    else if ($type == 'vault access logs table'){

        if ($api->databaseConnection()){

            $sql = '';
            $start_date = ($_POST['filter_start_date'] == "") ? date('Y-m-01')  : date('Y-m-d',strtotime($_POST['filter_start_date']));
            $end_date = ($_POST['filter_end_date'] == "") ? date('Y-m-t')  : date('Y-m-d',strtotime($_POST['filter_end_date']));
            $act_type = $_POST['filter_act'];


            #Roles


            if($act_type == ""){
                $sql = $api->db_connection->prepare("SELECT * FROM tblvaultacess WHERE 1 AND( DATE(TIME_IN)  BETWEEN :start_dt AND :end_dt) AND ACTIVITY is not null");
                $sql->bindParam(':start_dt', $start_date);
                $sql->bindParam(':end_dt', $end_date);
            }else{

                $sql = $api->db_connection->prepare("SELECT * FROM tblvaultacess WHERE 1 AND( DATE(TIME_IN)  BETWEEN :start_dt AND :end_dt) AND ACTIVITY=:act");

                $sql->bindParam(':start_dt', $start_date);
                $sql->bindParam(':end_dt', $end_date);
                $sql->bindParam(':act', $act_type);

            }

            if($sql->execute()){
                while($row = $sql->fetch()){

                    $ID = trim($row['ID']);
                    $person = trim($row['PERSON']);
                    $activity = trim($row['ACTIVITY']);
                    $branch = trim($row['VAULT_BRANCH']);
                    $timein = trim($row['TIME_IN']);
                    $timeout = trim($row['TIME_OUT']);
                    $rem = trim($row['REMARKS']);


                    $actions = '';


                    $response[] = array(
                        'ID' => $ID,
                        'PERSON' =>  $person,
                        'ACTIVITY' => $api->get_system_description('VACT',$activity),
                        'VAULT_BRANCH' => $api->get_data_details_one_parameter('branch',$branch)[0]['BRANCH'] ?? 'NA',
                        'TIME_IN' => $timein,
                        'TIME_OUT' => $timeout,
                        'REMARKS' => $rem,
                        'ACTION' => '<div class="d-flex gap-2 justify-content-center">
                               '.$actions.'
                            </div>'
                    );

                }
                echo json_encode($response);
            }
            else{
                echo $sql->errorInfo()[2];
            }
        }

    }

    else if($type == "insurance request table"){

        if ($api->databaseConnection()){

            $sql = '';
            $start_date='';
            $end_date = '';
            $filtering_date = '';
            $filtering_status = 'AND IRS="pending"';

            if($_POST["filter_start_date"]=="" && $_POST["filter_end_date"]==""){
                $start_date =  date('Y-m-01');
                $end_date  =   date('Y-m-t');
            }else{
                $date_start = new DateTime($_POST['filter_start_date']);
                $start_date = $date_start->format('Y-m-d');

                $date_end = new DateTime($_POST['filter_end_date']);
                $end_date = $date_end->format('Y-m-d');
            }

            if($_POST["filter_insurance_status"] ?? null == null || $_POST["filter_insurance_status"] == ''){
                $filtering_status = "AND IRS='".$_POST["filter_insurance_status"]."'";
            }else{
                $filtering_status = 'AND IRS="pending"';
            }




            $filtering_date .= "AND DATE(REQ_DT) BETWEEN :startdate AND :enddate ";

            #Roles
            $addinsurancereq =  $api->check_role_permissions($username, 390);
            $generateinsurancereq =  $api->check_role_permissions($username, 394);
            $deleteinsurancereq =  $api->check_role_permissions($username, 392);

            $sql = $api->db_connection->prepare("SELECT * FROM tblinsurancerequest WHERE 1 AND DELETED_AT IS NULL ".$filtering_date . $filtering_status);
            $sql->bindParam(':startdate', $start_date);
            $sql->bindParam(':enddate', $end_date);




            if($sql->execute()){
                while($row = $sql->fetch()){
                    $ID =  $api->encrypt_data(trim($row['ID']));
                    $clientname = trim($row['CLIENT_NAME']);
                    $collaid = trim($row['COLLA_ID']);
                    $yearmodel = trim($row['YEAR_MOD']);
                    $unitdesc = trim($row['UNIT_DESC']);
                    $requestedby = trim($row['REQ_BY']);
                    $requesteddt = trim($row['REQ_DT']);
                    $status = trim($row['IRS']);


                    $actions = '';
                    if($addinsurancereq > 0){
                         $actions .= '<a class="btn btn-primary" href="insurance-request-create-update.php?ID='.$ID.'"><i class="bx bx-show-alt"></i> | <i class="bx bx-edit"></i></a>';
                    }

                    if($generateinsurancereq > 0 ){
                    $actions .= '<a class="btn btn-success" href="insurance-request-pdf.php?ID='.$ID.'"><i class="bx bxs-report"></i></a>';
                    }

                    if($deleteinsurancereq > 0 ){
                        $actions .= '<button class="btn btn-danger btn-delete-insurance-request" data-insurance-requestid="'. $ID .'" ><i class="bx bxs-trash"></i></button>';
                    }


                    if($status=='pending'){
                        $status = '<span class="badge bg-warning">'.$status.'</span>';
                    }elseif ($status=='complete') {
                        $status = '<span class="badge bg-primary">'.$status.'</span>';
                    }

                    $response[] = array(
                        'CLIENTNAME' => $clientname,
                        'COLID' =>  $collaid,
                        'YEARMODEL' => $yearmodel,
                        'UNITDESC' => $unitdesc,
                        'REQUESTEDBY' => $requestedby,
                        'REQUESTEDDATE' => $requesteddt,
                        'STATUS'=> $status,
                        'ACTION' => '<div class="d-flex gap-2 justify-content-center">
                               '.$actions.'
                            </div>'
                    );

                }
                echo json_encode($response);
            }
            else{
                echo $sql->errorInfo()[2];
            }
        }
    }




    # -------------------------------------------------------------

    #activity note attachment table
    else if($type == "activity table attachment"){
        if ($api->databaseConnection()){
            $act_id = $_POST['activity_id'];
            #Roles
            $delete_activity_attachment =  $api->check_role_permissions($username, 388);

            $sql = $api->db_connection->prepare("SELECT * FROM tblactivityattachments WHERE NOTE_ID = :act_id");
            $sql->bindParam(':act_id', $act_id);

            if($sql->execute()){
                while($row = $sql->fetch()){
                    $ID = trim($row['ID']);
                    $title = trim($row['TITLE']);
                    $path = trim($row['PATH']);
                    $actions = '';
                    // if($update_activity > 0){
                    //     $actions .= '<button class="btn btn-warning btn-update-activity" data-activityid="'. $act_id .'">update</button>';
                    // }
                    if($delete_activity_attachment > 0 ){
                        $actions .= '<button class="btn btn-danger btn-delete-activity-attachment" data-activityidattach="'. $ID .'" >delete</button>';
                    }

                    $response[] = array(
                        'TITLE' => '<div><a href="activity-download-attachment.php?link='.$api->encrypt_data($path).'">'.$title.'</a></div>',
                        'ACTION' => '<div class="d-flex gap-2 justify-content-center">
                               '.$actions.'
                            </div>'
                    );

                }
                echo json_encode($response);
            }
            else{
                echo $sql->errorInfo()[2];
            }
        }
    }

    #ACTIVITY TABLE
    else if($type == 'activity table'){
        if ($api->databaseConnection()) {
            # Get role permission
            $view_own_activity = $api->check_role_permissions($username, 382);
            $view_dept_activity = $api->check_role_permissions($username, 381);
            $view_all_activity = $api->check_role_permissions($username, 380);
            $update_activity = $api->check_role_permissions($username, 384);
            $delete_activity = $api->check_role_permissions($username, 385);
            $employee_details = $api->get_data_details_one_parameter('employee profile', $username);
            $employee_dept = $employee_details[0]['DEPARTMENT'];
            $sql = '';

            //date filtering
            $start_date='';
            $end_date = '';
            if($_POST["filter_start_date"]=="" && $_POST["filter_end_date"]==""){
                $start_date =  date('Y-m-01');
                $end_date  =   date('Y-m-t');
            }else{
                $date_start = new DateTime($_POST['filter_start_date']);
                $start_date = $date_start->format('Y-m-d');

                $date_end = new DateTime($_POST['filter_end_date']);
                $end_date = $date_end->format('Y-m-d');
            }
            $filtering_date = "AND DATE(an.ACTIVITY_DATE) BETWEEN  '".$start_date."' AND '".$end_date."' ";


            //department filtering
            $filter_dept = '';
            if($_POST['filter_department']!=""){
                $filter_dept = " AND an.USER_DEPT ='".$_POST['filter_department']."' ";
            }

            //activity type filtering
            $filter_act_type = '';
            if($_POST['filter_act_type']!=""){
                $filter_act_type = " AND an.NOTE_TYPE ='".$_POST['filter_act_type']."' ";
            }


            if ($view_own_activity > 0) {

                $sql = $api->db_connection->prepare("SELECT an.*,CONCAT(ep.LAST_NAME,', ',ep.LAST_NAME,', ',ep.MIDDLE_NAME) as EMP_FULLNAME, sc.SYSTEM_DESC  as ACT_NOTE_TYPE
                FROM  tblactivitynotes as an
                LEFT JOIN tblemployeeprofile as ep on ep.USERNAME = an.USERNAME
                LEFT JOIN tblsystemcode as sc on sc.SYSTEM_CODE = an.NOTE_TYPE
                WHERE an.USERNAME =:username ".$filtering_date.$filter_dept.$filter_act_type);
                $sql->bindParam(':username', $username);

            }  if ($view_dept_activity > 0) {

                $sql = $api->db_connection->prepare("SELECT an.*,CONCAT(ep.LAST_NAME,', ',ep.LAST_NAME,', ',ep.MIDDLE_NAME) as EMP_FULLNAME, sc.SYSTEM_DESC as ACT_NOTE_TYPE
                FROM  tblactivitynotes as an
                LEFT JOIN tblemployeeprofile as ep on ep.USERNAME = an.USERNAME
                LEFT JOIN tblsystemcode as sc on sc.SYSTEM_CODE = an.NOTE_TYPE
                WHERE an.USER_DEPT =:employee_dept ".$filtering_date.$filter_dept.$filter_act_type);
                $sql->bindParam(':employee_dept', $employee_dept);

            }  if ($view_all_activity > 0) {
                $sql = $api->db_connection->prepare("SELECT an.*,CONCAT(ep.LAST_NAME,', ',ep.LAST_NAME,', ',ep.MIDDLE_NAME) as EMP_FULLNAME, sc.SYSTEM_DESC as ACT_NOTE_TYPE
                FROM  tblactivitynotes as an
                LEFT JOIN tblemployeeprofile as ep on ep.USERNAME = an.USERNAME
                LEFT JOIN tblsystemcode as sc on sc.SYSTEM_CODE = an.NOTE_TYPE
                WHERE 1 ".$filtering_date.$filter_dept.$filter_act_type);
            }


           // $sql = $api->db_connection->prepare("SELECT TRAINING_ID, EMPLOYEE_ID, TITLE, STATUS, TRAINING_TYPE, TRAINING_DATE, START_TIME, END_TIME FROM tbltraining WHERE (STATUS = '2' OR STATUS = '6') AND TRAINING_DATE <= :system_date AND TRAINING_ID IN (SELECT TRAINING_ID FROM tbltrainingattendees WHERE EMPLOYEE_ID = :username) ORDER BY TRAINING_DATE DESC");
            //actions


            if($sql->execute()){
                while($row = $sql->fetch()){
                    $long = trim($row['GEO_LONG']);
                    $lat = trim($row['GEO_LAT']);
                    $act_id = trim($row['ID']);
                    $partner = trim($row['EMP_FULLNAME']);
                    $client_name = trim($row['CLIENT_NAME']);
                    $activity_note = trim($row['NOTE_DESC']);
                    $activity_type = trim($row['ACT_NOTE_TYPE']);
                    $activity_date = trim($row['ACTIVITY_DATE']);
                    $client_tel = trim($row['CLIENT_TEL']);

                    $actions = '';
                    if($update_activity > 0){
                        $actions .= '<button class="btn btn-warning btn-update-activity" data-activityid="'. $act_id .'">update</button>';


                    }
                    if($delete_activity > 0){
                        $actions .= '<button  class="btn btn-danger btn-delete-activity" data-activityid="'. $act_id .'" >delete</button>';
                    }

                    $response[] = array(
                        'EMP_LOCATION' => '<a href="activity-notes-details.php?id='.$act_id.'" class="btn btn-primary waves-effect waves-light"><i class="bx bx-show font-size-16 align-middle"></i></a>',
                        'EMP_FULLNAME' => $partner,
                        'CLIENT_NAME' => $client_name,
                        'NOTES' => $activity_note,
                        'ACTIVITY_TYPE' => $activity_type,
                        'ACTIVITY_DATE' => $activity_date,
                        'CLIENT_NUM' => $client_tel,
                        'ACTION' => '<div class="d-flex gap-2">
                               '.$actions.'
                            </div>'
                    );

                }

                echo json_encode($response);
            }
            else{
                echo $sql->errorInfo()[2];
            }
        }
    }





    # -------------------------------------------------------------
    #   Generate options functions
    # -------------------------------------------------------------

    # Payroll specification category options
    else if($type == 'payroll specification category options'){
        if ($api->databaseConnection()) {
            if(isset($_POST['specificationtype']) && !empty($_POST['specificationtype'])){
                $specification_type = $_POST['specificationtype'];

                if($specification_type == 'ALLOWANCE'){
                    $query = 'SELECT ALLOWANCE_TYPE_ID AS CATEGORYID, ALLOWANCE AS CATEGORYDESC FROM tblallowancetype ORDER BY ALLOWANCE';
                }
                else if($specification_type == 'DEDUCTION'){
                    $query = 'SELECT DEDUCTION_TYPE_ID AS CATEGORYID, DEDUCTION AS CATEGORYDESC FROM tbldeductiontype ORDER BY DEDUCTION';
                }
                else{
                    $query = 'SELECT OTHER_INCOME_TYPE_ID AS CATEGORYID, OTHER_INCOME AS CATEGORYDESC FROM tblotherincometype ORDER BY OTHER_INCOME';
                }

                $sql = $api->db_connection->prepare($query);

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $response[] = array(
                            'CATEGORYID' => trim($row['CATEGORYID']),
                            'CATEGORYDESC' => trim($row['CATEGORYDESC'])
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo();
                }
            }
        }
    }

    # -------------------------------------------------------------

    # Province options
    else if($type == 'province options'){
        if ($api->databaseConnection()) {
            if(isset($_POST['countryid']) && !empty($_POST['countryid'])){
                $country_id = $_POST['countryid'];

                $sql = $api->db_connection->prepare('SELECT STATE_ID, STATE_NAME FROM tblstate WHERE COUNTRY_ID = :country_id ORDER BY STATE_NAME');
                $sql->bindParam(':country_id', $country_id);

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $response[] = array(
                            'STATE_ID' => trim($row['STATE_ID']),
                            'STATE_NAME' => trim($row['STATE_NAME'])
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo();
                }
            }
        }
    }
    # -------------------------------------------------------------

    # City options
    else if($type == 'city options'){
        if ($api->databaseConnection()) {
            if(isset($_POST['provinceid']) && !empty($_POST['provinceid']) && isset($_POST['countryid']) && !empty($_POST['countryid'])){
                $province_id = $_POST['provinceid'];
                $country_id = $_POST['countryid'];

                $sql = $api->db_connection->prepare('SELECT CITY_ID, CITY_NAME FROM tblcity WHERE STATE_ID = :province_id AND COUNTRY_ID = :country_id ORDER BY CITY_NAME');
                $sql->bindParam(':province_id', $province_id);
                $sql->bindParam(':country_id', $country_id);

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $response[] = array(
                            'CITY_ID' => trim($row['CITY_ID']),
                            'CITY_NAME' => trim($row['CITY_NAME'])
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo();
                }
            }
        }
    }
    # -------------------------------------------------------------

    # Priority person options
    else if($type == 'priority person options'){
        if ($api->databaseConnection()) {
            if(isset($_POST['departmentid']) && !empty($_POST['departmentid'])){
                $department_id = $_POST['departmentid'];
                $status = '1';

                $sql = $api->db_connection->prepare("SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME, MIDDLE_NAME, SUFFIX FROM tblemployeeprofile WHERE EMPLOYMENT_STATUS = :status AND EMPLOYEE_ID NOT LIKE 'USER-%' AND DEPARTMENT = :department_id ORDER BY FIRST_NAME");
                $sql->bindParam(':status', $status);
                $sql->bindParam(':department_id', $department_id);

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $employee_id = trim($row['EMPLOYEE_ID']);
                        $first_name = trim($row['FIRST_NAME']);
                        $last_name = trim($row['LAST_NAME']);
                        $middle_name = trim($row['MIDDLE_NAME']);
                        $suffix = trim($row['SUFFIX']);
                        $full_name = $api->get_full_name($first_name, $middle_name, $last_name, $suffix)[0]['REVERSE_FULL_NAME'];

                        $response[] = array(
                            'EMPLOYEE_ID' => trim($row['EMPLOYEE_ID']),
                            'FULL_NAME' => $full_name
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo();
                }
            }
        }
    }
    # -------------------------------------------------------------

    # Subordinates options
    else if($type == 'subordinates options'){
        if ($api->databaseConnection()) {
            if(isset($_POST['employeeid']) && isset($_POST['superior'])){
                $employee_id = $_POST['employeeid'];
                $superior = $_POST['superior'];
                $status = '1';

                $sql = $api->db_connection->prepare("SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME, MIDDLE_NAME, SUFFIX FROM tblemployeeprofile WHERE EMPLOYMENT_STATUS = :status AND EMPLOYEE_ID NOT IN (:employee_id, :superior) AND EMPLOYEE_ID NOT LIKE 'USER-%' ORDER BY FIRST_NAME");
                $sql->bindParam(':status', $status);
                $sql->bindParam(':employee_id', $employee_id);
                $sql->bindParam(':superior', $superior);

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $employee_id = trim($row['EMPLOYEE_ID']);
                        $first_name = trim($row['FIRST_NAME']);
                        $last_name = trim($row['LAST_NAME']);
                        $middle_name = trim($row['MIDDLE_NAME']);
                        $suffix = trim($row['SUFFIX']);
                        $full_name = $api->get_full_name($first_name, $middle_name, $last_name, $suffix)[0]['REVERSE_FULL_NAME'];

                        $response[] = array(
                            'EMPLOYEE_ID' => trim($row['EMPLOYEE_ID']),
                            'FULL_NAME' => $full_name
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo();
                }
            }
        }
    }
    # -------------------------------------------------------------

    # Document filter options
    else if($type == 'document filter options'){
        if ($api->databaseConnection()) {
            if(isset($_POST['filterby']) && !empty($_POST['filterby'])){
                $filter_by = $_POST['filterby'];

                $view_all_documents = $api->check_role_permissions($username, 185);

                if($view_all_documents > 0){
                    if($filter_by == 'author'){
                        $query = 'SELECT DISTINCT(AUTHOR) AS FILTERVAL FROM tbldocument ORDER BY AUTHOR';
                    }
                    else if($filter_by == 'department'){
                        $query = 'SELECT DISTINCT(DEPARTMENT) AS FILTERVAL FROM tbldocument ORDER BY DEPARTMENT';
                    }
                    else{
                        $query = 'SELECT DISTINCT(DOCUMENT_CATEGORY) AS FILTERVAL FROM tbldocument ORDER BY DOCUMENT_CATEGORY';
                    }
                }
                else{
                    if($filter_by == 'author'){
                        $query = "SELECT DISTINCT(AUTHOR) AS FILTERVAL FROM tbldocument WHERE PUBLISH = '1' ORDER BY AUTHOR";
                    }
                    else if($filter_by == 'department'){
                        $query = "SELECT DISTINCT(DEPARTMENT) AS FILTERVAL FROM tbldocument WHERE PUBLISH = '1' ORDER BY DEPARTMENT";
                    }
                    else{
                        $query = "SELECT DISTINCT(DOCUMENT_CATEGORY) AS FILTERVAL FROM tbldocument WHERE PUBLISH = '1' ORDER BY DOCUMENT_CATEGORY";
                    }
                }

                $sql = $api->db_connection->prepare($query);

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $filter_value = $row['FILTERVAL'];

                        if(!empty($filter_value)){
                            if($filter_by == 'author'){
                                $employee_profile_details = $api->get_data_details_one_parameter('employee profile', $filter_value);
                                $first_name = $employee_profile_details[0]['FIRST_NAME'];
                                $last_name = $employee_profile_details[0]['LAST_NAME'];
                                $middle_name = $employee_profile_details[0]['MIDDLE_NAME'];
                                $suffix = $employee_profile_details[0]['SUFFIX'];
                                $filter_desc = $api->get_full_name($first_name, $middle_name, $last_name, $suffix)[0]['REVERSE_FULL_NAME'];
                            }
                            else if($filter_by == 'department'){
                                $department_details = $api->get_data_details_one_parameter('department', $filter_value);
                                $filter_desc = $department_details[0]['DEPARTMENT'];
                            }
                            else{
                                $filter_desc = $api->get_system_description('DOCUMENTCATEGORY', $filter_value);
                            }

                            $response[] = array(
                                'FILTERVAL' => $filter_value,
                                'FILTERDESC' => $filter_desc
                            );
                        }
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo();
                }
            }
        }
    }
    # -------------------------------------------------------------

    # Employee filter options
    else if($type == 'employee filter options'){
        if ($api->databaseConnection()) {
            if(isset($_POST['filterby']) && !empty($_POST['filterby'])){
                $filter_by = $_POST['filterby'];

                if($filter_by == 'branch'){
                    $query = "SELECT DISTINCT(BRANCH) AS FILTERVAL FROM tblemployeeprofile WHERE EMPLOYEE_ID NOT LIKE 'USER-%' ORDER BY BRANCH";
                }
                else if($filter_by == 'department'){
                    $query = "SELECT DISTINCT(DEPARTMENT) AS FILTERVAL FROM tblemployeeprofile WHERE EMPLOYEE_ID NOT LIKE 'USER-%' ORDER BY DEPARTMENT";
                }
                else if($filter_by == 'designation'){
                    $query = "SELECT DISTINCT(DESIGNATION) AS FILTERVAL FROM tblemployeeprofile WHERE EMPLOYEE_ID NOT LIKE 'USER-%' ORDER BY DESIGNATION";
                }
                else if($filter_by == 'employmenttype'){
                    $query = "SELECT DISTINCT(EMPLOYEMENT_TYPE) AS FILTERVAL FROM tblemployeeprofile WHERE EMPLOYEE_ID NOT LIKE 'USER-%' ORDER BY EMPLOYEMENT_TYPE";
                }
                else{
                    $query = "SELECT DISTINCT(EMPLOYMENT_STATUS) AS FILTERVAL FROM tblemployeeprofile WHERE EMPLOYEE_ID NOT LIKE 'USER-%' ORDER BY EMPLOYMENT_STATUS";
                }

                $sql = $api->db_connection->prepare($query);

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $filter_value = $row['FILTERVAL'];

                        if($filter_by == 'branch'){
                            $branch_details = $api->get_data_details_one_parameter('branch', $filter_value);
                            $filter_desc = $branch_details[0]['BRANCH'];
                        }
                        else if($filter_by == 'department'){
                            $department_details = $api->get_data_details_one_parameter('department', $filter_value);
                            $filter_desc = $department_details[0]['DEPARTMENT'];
                        }
                        else if($filter_by == 'designation'){
                            $designation_details = $api->get_data_details_one_parameter('designation', $filter_value);
                            $filter_desc = $designation_details[0]['DESIGNATION'];
                        }
                        else if($filter_by == 'employmenttype'){
                            $filter_desc = $api->get_system_description('EMPLOYMENTTP', $filter_value);
                        }
                        else{
                            $filter_desc = $api->get_employment_status($filter_value)[0]['STATUS'];
                        }

                        $response[] = array(
                            'FILTERVAL' => $filter_value,
                            'FILTERDESC' => $filter_desc
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo();
                }
            }
        }
    }
    # -------------------------------------------------------------


     # -------------------------------------------------------------

    //  =======================changes lemar bill========================


    //activity note module


    # Activity Type options
    elseif($type == 'activity type option'){
        $option ='<option value="" disabled>-- --</option>';

        if ($api->databaseConnection()) {

            $sql = $api->db_connection->prepare("SELECT * FROM tblsystemcode where SYSTEM_TYPE = 'ACTTYPE'");

                if($sql->execute()){


                        while($row = $sql->fetch()){
                            $code = trim($row['SYSTEM_CODE']);
                            $name = trim($row['SYSTEM_DESC']);

                            $option .= "<option value='". $code ."'>". $name ."</option>";
                        }
                        echo  json_encode($option);
                }
                else{

                    echo $sql->errorInfo();
                }
        }

    }

    # Item Category filter options
    elseif ($type == 'item category option') {

        //$dept_owner = $_POST['data']['dept_owner'];
        $option ='<option value="" disabled>-- --</option>';

        if ($api->databaseConnection()) {

            $sql = $api->db_connection->prepare("SELECT * FROM tblitemcategory where DELETED_AT is null");

                if($sql->execute()){


                        while($row = $sql->fetch()){
                            $item_categ = trim($row['ITEM_CATEGORY']);
                            $categ_name = trim($row['CATEG_NAME']);

                            $option .= "<option value='". $item_categ ."'>". $categ_name ."</option>";
                        }
                        echo  json_encode( $option);
                }
                else{

                    echo $sql->errorInfo();
                }
        }

    }
    # Item Brand Option
    else if($type == 'item brand option'){

        //$item_cat = $_POST['data']['sel_cat'];
        $option =' <option value="" >-- --</option>';


        if ($api->databaseConnection()) {


            $sql = $api->db_connection->prepare("SELECT * FROM tblitembrand where DELETED_AT is null ");

                if($sql->execute()){


                        while($row = $sql->fetch()){
                            $brand_code = trim($row['BRAND_CODE']);
                            $brand_name = trim($row['BRANDNAME']);

                            $option .= "<option value='". $brand_code ."'>". $brand_name ."</option>";
                        }
                        echo  json_encode($option);
                }
                else{

                    echo $sql->errorInfo();
                }


        }
    }


    else if($type == 'item category brand option'){

        $item_cat = $_POST['data']['sel_cat'];
        $option =' <option value="" >-- --</option>';


        if ($api->databaseConnection()) {


            $sql = $api->db_connection->prepare("SELECT cb.*,b.BRAND_CODE,b.BRANDNAME FROM tblcathasbrand as cb
            LEFT JOIN tblitembrand as b on b.BRAND = cb.BRAND
             where cb.ITEM_CATEGORY=:item_cat");
            $sql->bindParam(':item_cat', $item_cat);


                if($sql->execute()){

                        while($row = $sql->fetch()){
                            $brand_code = trim($row['BRAND_CODE']);
                            $brand_name = trim($row['BRANDNAME']);

                            $option .= "<option value='". $brand_code ."'>". $brand_name ."</option>";
                        }
                        echo  json_encode($option);

                }
                else{

                    echo $sql->errorInfo();
                }


        }
    }
    # department option
    else if($type == 'department option'){
        $dept = '<option value="all_dept">All department</option>'.$api->generate_department_options();
        echo json_encode($dept);
    }

    #department category option
    else if($type == 'department item category option'){
        $dept_owner = $_POST['data']['dept_owner'];
        $condition = " WHERE dept_categ.DELETED_AT is null";
        $option ='<option value="" selected>-- --</option>';

        if ($dept_owner == 'all_dept') {
          $condition.=" GROUP BY dept_categ.ITEM_CATEGORY";
        }else{
            $condition.= " AND dept_categ.DEPARTMENT_ID=:dept_owner";
        }

        if ($api->databaseConnection()) {

            $sql = $api->db_connection->prepare("SELECT dept_categ.*,categ.CATEG_NAME FROM tbldepthasitemcategory as dept_categ LEFT JOIN tblitemcategory as categ on categ.ITEM_CATEGORY = dept_categ.ITEM_CATEGORY ".$condition);
                if($dept_owner!="all_dept"){ $sql->bindParam(':dept_owner', $dept_owner);}


                if($sql->execute()){


                        while($row = $sql->fetch()){
                            $item_categ = trim($row['ITEM_CATEGORY']);
                            $categ_name = trim($row['CATEG_NAME']);

                            $option .= "<option value='". $item_categ ."'>". $categ_name ."</option>";
                        }
                        echo  json_encode( $option);
                }
                else{

                    echo $sql->errorInfo();
                }

        }
    }

        #insurance acreditted
        else if($type == 'acredited insurance option'){
            $res = '<option value="">-- --</option> '. $api->generate_insurance_options('INSCODEACRED');
            echo json_encode($res);
        }
        #insurance
        else if($type == 'insurance option'){
            $dept = '<option value="">-- --</option> '. $api->generate_insurance_options('INSCODE');
            echo json_encode($dept);
        }



	# Price index item table
    else if($type == 'price index item table'){
        if(isset($_POST['filter_brand']) && isset($_POST['filter_model']) && isset($_POST['filter_variant']) && isset($_POST['filter_engine_size']) && isset($_POST['filter_gas_type']) && isset($_POST['filter_transmission']) && isset($_POST['filter_drive_train']) && isset($_POST['filter_body_type']) && isset($_POST['filter_seating_capacity']) && isset($_POST['filter_camshaft_profile']) && isset($_POST['filter_color_type']) && isset($_POST['filter_aircon_type'])){
            if ($api->databaseConnection()) {
                $filter_brand = $_POST['filter_brand'];
                $filter_model = $_POST['filter_model'];
                $filter_variant = $_POST['filter_variant'];
                $filter_engine_size = $_POST['filter_engine_size'];
                $filter_gas_type = $_POST['filter_gas_type'];
                $filter_transmission = $_POST['filter_transmission'];
                $filter_drive_train = $_POST['filter_drive_train'];
                $filter_body_type = $_POST['filter_body_type'];
                $filter_seating_capacity = $_POST['filter_seating_capacity'];
                $filter_camshaft_profile = $_POST['filter_camshaft_profile'];
                $filter_color_type = $_POST['filter_color_type'];
                $filter_aircon_type = $_POST['filter_aircon_type'];

                # Get role permission
                $delete_price_index_item = $api->check_role_permissions($username, 360);

                $query = 'SELECT ITEM_ID, BRAND, MODEL, VARIANT, ENGINE_SIZE, GAS_TYPE, TRANSMISSION, DRIVE_TRAIN, BODY_TYPE, SEATING_CAPACITY, CAMSHAFT_PROFILE, COLOR_TYPE, AIRCON_TYPE, OTHER_INFORMATION FROM tblpriceindexitem';

                if(!empty($filter_brand) || !empty($filter_model) || !empty($filter_variant) || !empty($filter_engine_size) || !empty($filter_gas_type) || !empty($filter_transmission) || !empty($filter_drive_train) || !empty($filter_body_type) || !empty($filter_seating_capacity) || !empty($filter_camshaft_profile) || !empty($filter_color_type) || !empty($filter_aircon_type)){
                    $query .= ' WHERE ';

                    if(!empty($filter_brand)){
                        $filter[] = 'BRAND = :filter_brand';
                    }

                    if(!empty($filter_model)){
                        $filter[] = 'MODEL = :filter_model';
                    }

                    if(!empty($filter_variant)){
                        $filter[] = 'VARIANT = :filter_variant';
                    }

                    if(!empty($filter_engine_size)){
                        $filter[] = 'ENGINE_SIZE = :filter_engine_size';
                    }

                    if(!empty($filter_gas_type)){
                        $filter[] = 'GAS_TYPE = :filter_gas_type';
                    }

                    if(!empty($filter_transmission)){
                        $filter[] = 'TRANSMISSION = :filter_transmission';
                    }

                    if(!empty($filter_drive_train)){
                        $filter[] = 'DRIVE_TRAIN = :filter_drive_train';
                    }

                    if(!empty($filter_body_type)){
                        $filter[] = 'BODY_TYPE = :filter_body_type';
                    }

                    if(!empty($filter_seating_capacity)){
                        $filter[] = 'SEATING_CAPACITY = :filter_seating_capacity';
                    }

                    if(!empty($filter_camshaft_profile)){
                        $filter[] = 'CAMSHAFT_PROFILE = :filter_camshaft_profile';
                    }

                    if(!empty($filter_color_type)){
                        $filter[] = 'COLOR_TYPE = :filter_color_type';
                    }

                    if(!empty($filter_aircon_type)){
                        $filter[] = 'AIRCON_TYPE = :filter_aircon_type';
                    }

                    if(!empty($filter)){
                        $query .= implode(' AND ', $filter);
                    }
                }

                $query .= ' LIMIT 100';

                $sql = $api->db_connection->prepare($query);

                if(!empty($filter_brand) || !empty($filter_model) || !empty($filter_variant) || !empty($filter_engine_size) || !empty($filter_gas_type) || !empty($filter_transmission) || !empty($filter_drive_train) || !empty($filter_body_type) || !empty($filter_seating_capacity) || !empty($filter_camshaft_profile) || !empty($filter_color_type) || !empty($filter_aircon_type)){
                    if(!empty($filter_brand)){
                        $sql->bindValue(':filter_brand', $filter_brand);
                    }

                    if(!empty($filter_model)){
                        $sql->bindValue(':filter_model', $filter_model);
                    }

                    if(!empty($filter_variant)){
                        $sql->bindValue(':filter_variant', $filter_variant);
                    }

                    if(!empty($filter_engine_size)){
                        $sql->bindValue(':filter_engine_size', $filter_engine_size);
                    }

                    if(!empty($filter_gas_type)){
                        $sql->bindValue(':filter_gas_type', $filter_gas_type);
                    }

                    if(!empty($filter_transmission)){
                        $sql->bindValue(':filter_transmission', $filter_transmission);
                    }

                    if(!empty($filter_drive_train)){
                        $sql->bindValue(':filter_drive_train', $filter_drive_train);
                    }

                    if(!empty($filter_body_type)){
                        $sql->bindValue(':filter_body_type', $filter_body_type);
                    }

                    if(!empty($filter_seating_capacity)){
                        $sql->bindValue(':filter_seating_capacity', $filter_seating_capacity);
                    }

                    if(!empty($filter_camshaft_profile)){
                        $sql->bindValue(':filter_camshaft_profile', $filter_camshaft_profile);
                    }

                    if(!empty($filter_color_type)){
                        $sql->bindValue(':filter_color_type', $filter_color_type);
                    }

                    if(!empty($filter_aircon_type)){
                        $sql->bindValue(':filter_aircon_type', $filter_aircon_type);
                    }
                }

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $item = '';
                        $item_array = [];
                        $item_id = trim($row['ITEM_ID']);
                        $brand = $api->get_data_details_one_parameter('car search parameter', $row['BRAND'])[0]['PARAMETER_VALUE'] ?? null;
                        $model = $api->get_data_details_one_parameter('car search parameter', $row['MODEL'])[0]['PARAMETER_VALUE'] ?? null;
                        $variant = $api->get_data_details_one_parameter('car search parameter', $row['VARIANT'])[0]['PARAMETER_VALUE'] ?? null;
                        $engine_size = $api->get_data_details_one_parameter('car search parameter', $row['ENGINE_SIZE'])[0]['PARAMETER_VALUE'] ?? null;
                        $gas_type = $api->get_data_details_one_parameter('car search parameter', $row['GAS_TYPE'])[0]['PARAMETER_VALUE'] ?? null;
                        $transmission = $api->get_data_details_one_parameter('car search parameter', $row['TRANSMISSION'])[0]['PARAMETER_VALUE'] ?? null;
                        $drive_train = $api->get_data_details_one_parameter('car search parameter', $row['DRIVE_TRAIN'])[0]['PARAMETER_VALUE'] ?? null;
                        $body_type = $api->get_data_details_one_parameter('car search parameter', $row['BODY_TYPE'])[0]['PARAMETER_VALUE'] ?? null;
                        $seating_capacity = $api->get_data_details_one_parameter('car search parameter', $row['SEATING_CAPACITY'])[0]['PARAMETER_VALUE'] ?? null;
                        $camshaft_profile = $api->get_data_details_one_parameter('car search parameter', $row['CAMSHAFT_PROFILE'])[0]['PARAMETER_VALUE'] ?? null;
                        $color_type = $api->get_data_details_one_parameter('car search parameter', $row['COLOR_TYPE'])[0]['PARAMETER_VALUE'] ?? null;
                        $aircon_type = $api->get_data_details_one_parameter('car search parameter', $row['AIRCON_TYPE'])[0]['PARAMETER_VALUE'] ?? null;
                        $other_information = $row['OTHER_INFORMATION'];

                        if(!empty($brand)){
                            $item_array[] = $brand;
                        }

                        if(!empty($model)){
                            $item_array[] = $model;
                        }

                        if(!empty($variant)){
                            $item_array[] = $variant;
                        }

                        if(!empty($engine_size)){
                            $item_array[] = $engine_size;
                        }

                        if(!empty($gas_type)){
                            $item_array[] = $gas_type;
                        }

                        if(!empty($transmission)){
                            $item_array[] = $transmission;
                        }

                        if(!empty($drive_train)){
                            $item_array[] = $drive_train;
                        }

                        if(!empty($body_type)){
                            $item_array[] = $body_type;
                        }

                        if(!empty($seating_capacity)){
                            $item_array[] = $seating_capacity;
                        }

                        if(!empty($camshaft_profile)){
                            $item_array[] = $camshaft_profile;
                        }

                        if(!empty($color_type)){
                            $item_array[] = $color_type;
                        }

                        if(!empty($aircon_type)){
                            $item_array[] = $aircon_type;
                        }

                        if(!empty($other_information)){
                            $item_array[] = $other_information;
                        }

                        if(!empty($item_array)){
                            $item .= implode(' ', $item_array);
                        }

                        if($delete_price_index_item > 0){
                            $delete = '<button type="button" class="btn btn-danger waves-effect waves-light delete-price-index-item" data-itemid="'. $item_id .'" title="Delete Price Index Item">
                                        <i class="bx bx-trash font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $delete = '';
                        }

                        $response[] = array(
                            'ID' => $item_id,
                            'ITEM' => $item,
                            'ACTION' => '<div class="d-flex gap-2">
                                    <button type="button" class="btn btn-primary waves-effect waves-light update-price-index-item" data-itemid="'. $item_id .'" title="View Details">
                                        <i class="bx bx-show font-size-16 align-middle"></i>
                                    </button>
                                    ' . $delete .'
                                </div>'
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo()[2];
                }
            }
        }
    }
    # -------------------------------------------------------------

    # Price index amount table
    else if($type == 'price index amount table'){
        if(isset($_POST['filter_year']) && isset($_POST['filter_brand']) && isset($_POST['filter_model']) && isset($_POST['filter_variant']) && isset($_POST['filter_engine_size']) && isset($_POST['filter_gas_type']) && isset($_POST['filter_transmission']) && isset($_POST['filter_drive_train']) && isset($_POST['filter_body_type']) && isset($_POST['filter_seating_capacity']) && isset($_POST['filter_camshaft_profile']) && isset($_POST['filter_color_type']) && isset($_POST['filter_aircon_type'])){
            if ($api->databaseConnection()) {
                $filter_year = $_POST['filter_year'];
                $filter_brand = $_POST['filter_brand'];
                $filter_model = $_POST['filter_model'];
                $filter_variant = $_POST['filter_variant'];
                $filter_engine_size = $_POST['filter_engine_size'];
                $filter_gas_type = $_POST['filter_gas_type'];
                $filter_transmission = $_POST['filter_transmission'];
                $filter_drive_train = $_POST['filter_drive_train'];
                $filter_body_type = $_POST['filter_body_type'];
                $filter_seating_capacity = $_POST['filter_seating_capacity'];
                $filter_camshaft_profile = $_POST['filter_camshaft_profile'];
                $filter_color_type = $_POST['filter_color_type'];
                $filter_aircon_type = $_POST['filter_aircon_type'];

                # Get role permission
                $update_price_index_item = $api->check_role_permissions($username, 359);
                $delete_price_index_item = $api->check_role_permissions($username, 360);
                $add_price_index_amount_adjustment = $api->check_role_permissions($username, 370);

                $query = 'SELECT ITEM_ID, BRAND, MODEL, VARIANT, ENGINE_SIZE, GAS_TYPE, TRANSMISSION, DRIVE_TRAIN, BODY_TYPE, SEATING_CAPACITY, CAMSHAFT_PROFILE, COLOR_TYPE, AIRCON_TYPE, OTHER_INFORMATION FROM tblpriceindexitem';

                if(!empty($filter_year) || !empty($filter_brand)  || !empty($filter_model) || !empty($filter_variant) || !empty($filter_engine_size) || !empty($filter_gas_type) || !empty($filter_transmission) || !empty($filter_drive_train) || !empty($filter_body_type) || !empty($filter_seating_capacity) || !empty($filter_camshaft_profile) || !empty($filter_color_type) || !empty($filter_aircon_type)){
                    $query .= ' WHERE ';

                    if(!empty($filter_year)){
                        $filter[] = 'ITEM_ID IN (SELECT ITEM_ID FROM tblpriceindexitemvalue WHERE YEAR_MODEL = :filter_year)';
                    }

                    if(!empty($filter_brand)){
                        $filter[] = 'BRAND = :filter_brand';
                    }

                    if(!empty($filter_model)){
                        $filter[] = 'MODEL = :filter_model';
                    }

                    if(!empty($filter_variant)){
                        $filter[] = 'VARIANT = :filter_variant';
                    }

                    if(!empty($filter_engine_size)){
                        $filter[] = 'ENGINE_SIZE = :filter_engine_size';
                    }

                    if(!empty($filter_gas_type)){
                        $filter[] = 'GAS_TYPE = :filter_gas_type';
                    }

                    if(!empty($filter_transmission)){
                        $filter[] = 'TRANSMISSION = :filter_transmission';
                    }

                    if(!empty($filter_drive_train)){
                        $filter[] = 'DRIVE_TRAIN = :filter_drive_train';
                    }

                    if(!empty($filter_body_type)){
                        $filter[] = 'BODY_TYPE = :filter_body_type';
                    }

                    if(!empty($filter_seating_capacity)){
                        $filter[] = 'SEATING_CAPACITY = :filter_seating_capacity';
                    }

                    if(!empty($filter_camshaft_profile)){
                        $filter[] = 'CAMSHAFT_PROFILE = :filter_camshaft_profile';
                    }

                    if(!empty($filter_color_type)){
                        $filter[] = 'COLOR_TYPE = :filter_color_type';
                    }

                    if(!empty($filter_aircon_type)){
                        $filter[] = 'AIRCON_TYPE = :filter_aircon_type';
                    }

                    if(!empty($filter)){
                        $query .= implode(' AND ', $filter);
                    }
                }

                #$query .= ' LIMIT 100';

                $sql = $api->db_connection->prepare($query);

                if(!empty($filter_year) || !empty($filter_brand) || !empty($filter_model) || !empty($filter_variant) || !empty($filter_engine_size) || !empty($filter_gas_type) || !empty($filter_transmission) || !empty($filter_drive_train) || !empty($filter_body_type) || !empty($filter_seating_capacity) || !empty($filter_camshaft_profile) || !empty($filter_color_type) || !empty($filter_aircon_type)){
                    if(!empty($filter_year)){
                        $sql->bindValue(':filter_year', $filter_year);
                    }

                    if(!empty($filter_brand)){
                        $sql->bindValue(':filter_brand', $filter_brand);
                    }

                    if(!empty($filter_model)){
                        $sql->bindValue(':filter_model', $filter_model);
                    }

                    if(!empty($filter_variant)){
                        $sql->bindValue(':filter_variant', $filter_variant);
                    }

                    if(!empty($filter_engine_size)){
                        $sql->bindValue(':filter_engine_size', $filter_engine_size);
                    }

                    if(!empty($filter_gas_type)){
                        $sql->bindValue(':filter_gas_type', $filter_gas_type);
                    }

                    if(!empty($filter_transmission)){
                        $sql->bindValue(':filter_transmission', $filter_transmission);
                    }

                    if(!empty($filter_drive_train)){
                        $sql->bindValue(':filter_drive_train', $filter_drive_train);
                    }

                    if(!empty($filter_body_type)){
                        $sql->bindValue(':filter_body_type', $filter_body_type);
                    }

                    if(!empty($filter_seating_capacity)){
                        $sql->bindValue(':filter_seating_capacity', $filter_seating_capacity);
                    }

                    if(!empty($filter_camshaft_profile)){
                        $sql->bindValue(':filter_camshaft_profile', $filter_camshaft_profile);
                    }

                    if(!empty($filter_color_type)){
                        $sql->bindValue(':filter_color_type', $filter_color_type);
                    }

                    if(!empty($filter_aircon_type)){
                        $sql->bindValue(':filter_aircon_type', $filter_aircon_type);
                    }
                }

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $item = '';
                        $item_array = [];
                        $item_id = trim($row['ITEM_ID']);
                        $brand = $api->get_data_details_one_parameter('car search parameter', $row['BRAND'])[0]['PARAMETER_VALUE'] ?? null;
                        $model = $api->get_data_details_one_parameter('car search parameter', $row['MODEL'])[0]['PARAMETER_VALUE'] ?? null;
                        $variant = $api->get_data_details_one_parameter('car search parameter', $row['VARIANT'])[0]['PARAMETER_VALUE'] ?? null;
                        $engine_size = $api->get_data_details_one_parameter('car search parameter', $row['ENGINE_SIZE'])[0]['PARAMETER_VALUE'] ?? null;
                        $gas_type = $api->get_data_details_one_parameter('car search parameter', $row['GAS_TYPE'])[0]['PARAMETER_VALUE'] ?? null;
                        $transmission = $api->get_data_details_one_parameter('car search parameter', $row['TRANSMISSION'])[0]['PARAMETER_VALUE'] ?? null;
                        $drive_train = $api->get_data_details_one_parameter('car search parameter', $row['DRIVE_TRAIN'])[0]['PARAMETER_VALUE'] ?? null;
                        $body_type = $api->get_data_details_one_parameter('car search parameter', $row['BODY_TYPE'])[0]['PARAMETER_VALUE'] ?? null;
                        $seating_capacity = $api->get_data_details_one_parameter('car search parameter', $row['SEATING_CAPACITY'])[0]['PARAMETER_VALUE'] ?? null;
                        $camshaft_profile = $api->get_data_details_one_parameter('car search parameter', $row['CAMSHAFT_PROFILE'])[0]['PARAMETER_VALUE'] ?? null;
                        $color_type = $api->get_data_details_one_parameter('car search parameter', $row['COLOR_TYPE'])[0]['PARAMETER_VALUE'] ?? null;
                        $aircon_type = $api->get_data_details_one_parameter('car search parameter', $row['AIRCON_TYPE'])[0]['PARAMETER_VALUE'] ?? null;
                        $other_information = $row['OTHER_INFORMATION'];

                        $price_index_amount_details = $api->get_data_details_two_parameter('price index amount', $item_id, $filter_year);
                        $item_value = $price_index_amount_details[0]['ITEM_VALUE'];
                        $created_by = $price_index_amount_details[0]['CREATED_BY'];
                        $last_updated_by = $price_index_amount_details[0]['LAST_UPDATE_BY'];
                        $created_date = $api->check_date('empty', $price_index_amount_details[0]['CREATED_DATE'], '', 'F d, Y', '', '', '');
                        $created_time = $api->check_date('empty', $price_index_amount_details[0]['CREATED_TIME'], '', 'h:i:s a', '', '', '');
                        $last_update_date = $api->check_date('empty', $price_index_amount_details[0]['LAST_UPDATE_DATE'], '', 'F d, Y', '', '', '');
                        $last_update_time = $api->check_date('empty', $price_index_amount_details[0]['LAST_UPDATE_TIME'], '', 'h:i:s a', '', '', '');

                        $created_by_details = $api->get_data_details_one_parameter('employee profile', $created_by);
                        $created_by_first_name = $created_by_details[0]['FIRST_NAME'];
                        $created_by_last_name = $created_by_details[0]['LAST_NAME'];
                        $created_by_middle_name = $created_by_details[0]['MIDDLE_NAME'];
                        $created_by_suffix = $created_by_details[0]['SUFFIX'];
                        $created_by_fullname = $api->get_full_name($created_by_first_name, $created_by_middle_name, $created_by_last_name, $created_by_suffix)[0]['REVERSE_FULL_NAME'];

                        if(!empty($last_updated_by)){
                            $last_updated_by_details = $api->get_data_details_one_parameter('employee profile', $last_updated_by);
                            $last_updated_by_first_name = $last_updated_by_details[0]['FIRST_NAME'];
                            $last_updated_by_last_name = $last_updated_by_details[0]['LAST_NAME'];
                            $last_updated_by_middle_name = $last_updated_by_details[0]['MIDDLE_NAME'];
                            $last_updated_by_suffix = $last_updated_by_details[0]['SUFFIX'];
                            $last_updated_by_fullname = $api->get_full_name($last_updated_by_first_name, $last_updated_by_middle_name, $last_updated_by_last_name, $last_updated_by_suffix)[0]['REVERSE_FULL_NAME'];
                        }
                        else{
                            $last_updated_by_fullname = '';
                        }

                        if(!empty($brand)){
                            $item_array[] = $brand;
                        }

                        if(!empty($model)){
                            $item_array[] = $model;
                        }

                        if(!empty($variant)){
                            $item_array[] = $variant;
                        }

                        if(!empty($engine_size)){
                            $item_array[] = $engine_size;
                        }

                        if(!empty($gas_type)){
                            $item_array[] = $gas_type;
                        }

                        if(!empty($transmission)){
                            $item_array[] = $transmission;
                        }

                        if(!empty($drive_train)){
                            $item_array[] = $drive_train;
                        }

                        if(!empty($body_type)){
                            $item_array[] = $body_type;
                        }

                        if(!empty($seating_capacity)){
                            $item_array[] = $seating_capacity;
                        }

                        if(!empty($camshaft_profile)){
                            $item_array[] = $camshaft_profile;
                        }

                        if(!empty($color_type)){
                            $item_array[] = $color_type;
                        }

                        if(!empty($aircon_type)){
                            $item_array[] = $aircon_type;
                        }

                        if(!empty($other_information)){
                            $item_array[] = $other_information;
                        }

                        if(!empty($item_array)){
                            $item .= implode(' ', $item_array);
                        }

                        if($add_price_index_amount_adjustment > 0){
                            $request = '<button type="button" class="btn btn-success waves-effect waves-light add-price-index-amount-adjustment" data-itemid="'. $item_id .'" data-year="'. $filter_year .'" title="Request Attendance Record Adjustment">
                                        <i class="bx bx-food-menu font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $request = '';
                        }

                        if($update_price_index_item > 0){
                            $update = '<button type="button" class="btn btn-primary waves-effect waves-light update-price-index-amount" data-itemid="'. $item_id .'" data-year="'. $filter_year .'" title="View Details">
                                    <i class="bx bx-show font-size-16 align-middle"></i>
                                </button>';
                        }
                        else{
                            $update = '';
                        }

                        if($delete_price_index_item > 0){
                            $delete = '<button type="button" class="btn btn-danger waves-effect waves-light delete-price-index-amount" data-itemid="'. $item_id .'" data-year="'. $filter_year .'" title="Delete Price Index Value">
                                        <i class="bx bx-trash font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $delete = '';
                        }

                        $response[] = array(
                            'ITEM' => $item,
                            'YEAR' => $filter_year,
                            'ITEM_VALUE' => number_format($item_value, 2),
                            'LOANABLE_AMOUNT' => number_format($item_value, 2),
                            'CREATED_DATE' => $created_date .' '. $created_time,
                            'CREATED_BY' => $created_by_fullname,
                            'LAST_UPDATE_DATE' => $last_update_date .' '. $last_update_time,
                            'LAST_UPDATE_BY' => $last_updated_by_fullname,
                            'ACTION' => '<div class="d-flex gap-2">
                                    ' . $update .'
                                    ' . $request .'
                                    ' . $delete .'
                                </div>'
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo()[2];
                }
            }
        }
    }
    # -------------------------------------------------------------

    # Price index amount adjustment table
    else if($type == 'price index amount adjustment table'){
        if ($api->databaseConnection()) {

            # Get role permission
            $approve_price_index_amount_adjustment = $api->check_role_permissions($username, 372);
            $reject_price_index_amount_adjustment = $api->check_role_permissions($username, 373);
            $cancel_price_index_amount_adjustment = $api->check_role_permissions($username, 374);

            $sql = $api->db_connection->prepare('SELECT ADJUSTMENT_ID, ITEM_ID, YEAR_MODEL, INITIAL_ITEM_VALUE, PROPOSED_ITEM_VALUE, STATUS FROM tblpriceindexvalueadustment WHERE STATUS = "0"');

            if($sql->execute()){
                while($row = $sql->fetch()){
                    $item = '';
                    $item_array = [];
                    $adjustment_id = trim($row['ADJUSTMENT_ID']);
                    $item_id = trim($row['ITEM_ID']);
                    $year_model = trim($row['YEAR_MODEL']);
                    $initial_item_value = trim($row['INITIAL_ITEM_VALUE']);
                    $proposed_item_value = trim($row['PROPOSED_ITEM_VALUE']);
                    $status = trim($row['STATUS']);
                    $request_status = $api->get_price_index_amount_adjustment_status($status)[0]['BADGE'];

                    $price_index_item_details = $api->get_data_details_one_parameter('price index item', $item_id);

                    $brand = $api->get_data_details_one_parameter('car search parameter', $price_index_item_details[0]['BRAND'])[0]['PARAMETER_VALUE'] ?? null;
                        $model = $api->get_data_details_one_parameter('car search parameter', $price_index_item_details[0]['MODEL'])[0]['PARAMETER_VALUE'] ?? null;
                        $variant = $api->get_data_details_one_parameter('car search parameter', $price_index_item_details[0]['VARIANT'])[0]['PARAMETER_VALUE'] ?? null;
                        $engine_size = $api->get_data_details_one_parameter('car search parameter', $price_index_item_details[0]['ENGINE_SIZE'])[0]['PARAMETER_VALUE'] ?? null;
                        $gas_type = $api->get_data_details_one_parameter('car search parameter', $price_index_item_details[0]['GAS_TYPE'])[0]['PARAMETER_VALUE'] ?? null;
                        $transmission = $api->get_data_details_one_parameter('car search parameter', $price_index_item_details[0]['TRANSMISSION'])[0]['PARAMETER_VALUE'] ?? null;
                        $drive_train = $api->get_data_details_one_parameter('car search parameter', $price_index_item_details[0]['DRIVE_TRAIN'])[0]['PARAMETER_VALUE'] ?? null;
                        $body_type = $api->get_data_details_one_parameter('car search parameter', $price_index_item_details[0]['BODY_TYPE'])[0]['PARAMETER_VALUE'] ?? null;
                        $seating_capacity = $api->get_data_details_one_parameter('car search parameter', $price_index_item_details[0]['SEATING_CAPACITY'])[0]['PARAMETER_VALUE'] ?? null;
                        $camshaft_profile = $api->get_data_details_one_parameter('car search parameter', $price_index_item_details[0]['CAMSHAFT_PROFILE'])[0]['PARAMETER_VALUE'] ?? null;
                        $color_type = $api->get_data_details_one_parameter('car search parameter', $price_index_item_details[0]['COLOR_TYPE'])[0]['PARAMETER_VALUE'] ?? null;
                        $aircon_type = $api->get_data_details_one_parameter('car search parameter', $price_index_item_details[0]['AIRCON_TYPE'])[0]['PARAMETER_VALUE'] ?? null;

                        if(!empty($brand)){
                            $item_array[] = $brand;
                        }

                        if(!empty($model)){
                            $item_array[] = $model;
                        }

                        if(!empty($variant)){
                            $item_array[] = $variant;
                        }

                        if(!empty($engine_size)){
                            $item_array[] = $engine_size;
                        }

                        if(!empty($gas_type)){
                            $item_array[] = $gas_type;
                        }

                        if(!empty($transmission)){
                            $item_array[] = $transmission;
                        }

                        if(!empty($drive_train)){
                            $item_array[] = $drive_train;
                        }

                        if(!empty($body_type)){
                            $item_array[] = $body_type;
                        }

                        if(!empty($seating_capacity)){
                            $item_array[] = $seating_capacity;
                        }

                        if(!empty($camshaft_profile)){
                            $item_array[] = $camshaft_profile;
                        }

                        if(!empty($color_type)){
                            $item_array[] = $color_type;
                        }

                        if(!empty($aircon_type)){
                            $item_array[] = $aircon_type;
                        }

                        if(!empty($other_information)){
                            $item_array[] = $other_information;
                        }

                        if(!empty($item_array)){
                            $item .= implode(' ', $item_array);
                        }

                        if($cancel_price_index_amount_adjustment > 0){
                            $cancel = '<button type="button" class="btn btn-warning waves-effect waves-light cancel-price-index-amount-adjustment" data-adjustmentid="'. $adjustment_id .'" title="Cancel Price Index Amount Adjustment">
                                        <i class="bx bx-x font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $cancel = '';
                        }

                        if($reject_price_index_amount_adjustment > 0){
                            $reject = '<button type="button" class="btn btn-danger waves-effect waves-light reject-price-index-amount-adjustment" data-adjustmentid="'. $adjustment_id .'" title="Reject Price Index Amount Adjustment">
                                        <i class="bx bx-block font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $reject = '';
                        }

                        if($approve_price_index_amount_adjustment > 0){
                            $approve = '<button type="button" class="btn btn-success waves-effect waves-light approve-price-index-amount-adjustment" data-adjustmentid="'. $adjustment_id .'" title="Approve Price Index Amount Adjustment">
                                        <i class="bx bx-check font-size-16 align-middle"></i>
                                    </button>';
                        }
                        else{
                            $approve = '';
                        }

                    $response[] = array(
                        'ITEM' => $item,
                        'YEAR' => $year_model,
                        'AMOUNT' => number_format($initial_item_value, 2) . '->' . number_format($proposed_item_value, 2),
                        'STATUS' => $request_status,
                        'ACTION' => '<div class="d-flex gap-2">
                            '.  $approve . $reject . $cancel .'
                            </div>'
                    );
                }

                echo json_encode($response);
            }
            else{
                echo $sql->errorInfo()[2];
            }
        }
    }
    # -------------------------------------------------------------



    # -------------------------------------------------------------

//   ======================changes lemar =========================================


    # Transmittal filter options
    else if($type == 'transmittal filter options'){
        if ($api->databaseConnection()) {
            if(isset($_POST['filterby']) && !empty($_POST['filterby'])){
                $filter_by = $_POST['filterby'];

                if($filter_by == 'transmittedto' || $filter_by == 'transmittedby'){
                    $query = "SELECT DEPARTMENT_ID AS FILTERVAL FROM tbldepartment ORDER BY DEPARTMENT";
                }
                else{
                    $query = "SELECT DISTINCT(STATUS) AS FILTERVAL FROM tbltransmittal ORDER BY STATUS";
                }

                $sql = $api->db_connection->prepare($query);

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $filter_value = $row['FILTERVAL'];

                        if($filter_by == 'transmittedto' || $filter_by == 'transmittedby'){
                            $department_details = $api->get_data_details_one_parameter('department', $filter_value);
                            $filter_desc = $department_details[0]['DEPARTMENT'];
                        }
                        else{
                            $filter_desc = $api->get_transmittal_status($filter_value)[0]['STATUS'];
                        }

                        $response[] = array(
                            'FILTERVAL' => $filter_value,
                            'FILTERDESC' => $filter_desc
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo();
                }
            }
        }
    }
    # -------------------------------------------------------------

    # Meeting attendees options
    else if($type == 'meeting attendees options'){
        if ($api->databaseConnection()) {
            if(isset($_POST['meetingid']) && !empty($_POST['meetingid'])){
                $meeting_id = $_POST['meetingid'];
                $status = '1';

                $sql = $api->db_connection->prepare("SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME, MIDDLE_NAME, SUFFIX FROM tblemployeeprofile WHERE EMPLOYMENT_STATUS = :status AND EMPLOYEE_ID NOT LIKE 'USER-%' AND (EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM tblmeetingattendees WHERE MEETING_ID = :meeting_id) OR EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM tblmeetingabsentattendees WHERE MEETING_ID = :meeting_id))  ORDER BY FIRST_NAME");
                $sql->bindParam(':status', $status);
                $sql->bindParam(':meeting_id', $meeting_id);

                if($sql->execute()){
                    while($row = $sql->fetch()){
                        $employee_id = trim($row['EMPLOYEE_ID']);
                        $first_name = trim($row['FIRST_NAME']);
                        $last_name = trim($row['LAST_NAME']);
                        $middle_name = trim($row['MIDDLE_NAME']);
                        $suffix = trim($row['SUFFIX']);
                        $full_name = $api->get_full_name($first_name, $middle_name, $last_name, $suffix)[0]['REVERSE_FULL_NAME'];

                        $response[] = array(
                            'EMPLOYEE_ID' => trim($row['EMPLOYEE_ID']),
                            'FULL_NAME' => $full_name
                        );
                    }

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo();
                }
            }
        }
    }
    # -------------------------------------------------------------

	 # Price index item options
    else if($type == 'price index item options'){
        if ($api->databaseConnection()) {
            if(isset($_POST['search_brand']) && isset($_POST['search_model'])){
                $search_brand = $_POST['search_brand'];
                $search_model = $_POST['search_model'];

                if(!empty($search_brand) && !empty($search_model)){
                    $sql = $api->db_connection->prepare("SELECT ITEM_ID, BRAND, MODEL, VARIANT, ENGINE_SIZE, GAS_TYPE, TRANSMISSION, DRIVE_TRAIN, BODY_TYPE, SEATING_CAPACITY, CAMSHAFT_PROFILE, COLOR_TYPE, AIRCON_TYPE, OTHER_INFORMATION FROM tblpriceindexitem WHERE BRAND = :search_brand AND MODEL = :search_model ORDER BY ITEM_ID");
                    $sql->bindParam(':search_brand', $search_brand);
                    $sql->bindParam(':search_model', $search_model);
                }
                else if(!empty($search_brand) && empty($search_model)){
                    $sql = $api->db_connection->prepare("SELECT ITEM_ID, BRAND, MODEL, VARIANT, ENGINE_SIZE, GAS_TYPE, TRANSMISSION, DRIVE_TRAIN, BODY_TYPE, SEATING_CAPACITY, CAMSHAFT_PROFILE, COLOR_TYPE, AIRCON_TYPE, OTHER_INFORMATION FROM tblpriceindexitem WHERE BRAND = :search_brand ORDER BY ITEM_ID");
                    $sql->bindParam(':search_brand', $search_brand);
                }
                else if(empty($search_brand) && !empty($search_model)){
                    $sql = $api->db_connection->prepare("SELECT ITEM_ID, BRAND, MODEL, VARIANT, ENGINE_SIZE, GAS_TYPE, TRANSMISSION, DRIVE_TRAIN, BODY_TYPE, SEATING_CAPACITY, CAMSHAFT_PROFILE, COLOR_TYPE, AIRCON_TYPE, OTHER_INFORMATION FROM tblpriceindexitem WHERE MODEL = :search_model ORDER BY ITEM_ID");
                    $sql->bindParam(':search_model', $search_model);
                }

                if($sql->execute()){
                    $count = $sql->rowCount();

                    if($count > 0){
                        while($row = $sql->fetch()){
                            $item = '';
                            $item_array = [];
                            $item_id = trim($row['ITEM_ID']);
                            $brand = $api->get_data_details_one_parameter('car search parameter', $row['BRAND'])[0]['PARAMETER_VALUE'] ?? null;
                            $model = $api->get_data_details_one_parameter('car search parameter', $row['MODEL'])[0]['PARAMETER_VALUE'] ?? null;
                            $variant = $api->get_data_details_one_parameter('car search parameter', $row['VARIANT'])[0]['PARAMETER_VALUE'] ?? null;
                            $engine_size = $api->get_data_details_one_parameter('car search parameter', $row['ENGINE_SIZE'])[0]['PARAMETER_VALUE'] ?? null;
                            $gas_type = $api->get_data_details_one_parameter('car search parameter', $row['GAS_TYPE'])[0]['PARAMETER_VALUE'] ?? null;
                            $transmission = $api->get_data_details_one_parameter('car search parameter', $row['TRANSMISSION'])[0]['PARAMETER_VALUE'] ?? null;
                            $drive_train = $api->get_data_details_one_parameter('car search parameter', $row['DRIVE_TRAIN'])[0]['PARAMETER_VALUE'] ?? null;
                            $body_type = $api->get_data_details_one_parameter('car search parameter', $row['BODY_TYPE'])[0]['PARAMETER_VALUE'] ?? null;
                            $seating_capacity = $api->get_data_details_one_parameter('car search parameter', $row['SEATING_CAPACITY'])[0]['PARAMETER_VALUE'] ?? null;
                            $camshaft_profile = $api->get_data_details_one_parameter('car search parameter', $row['CAMSHAFT_PROFILE'])[0]['PARAMETER_VALUE'] ?? null;
                            $color_type = $api->get_data_details_one_parameter('car search parameter', $row['COLOR_TYPE'])[0]['PARAMETER_VALUE'] ?? null;
                            $aircon_type = $api->get_data_details_one_parameter('car search parameter', $row['AIRCON_TYPE'])[0]['PARAMETER_VALUE'] ?? null;
                            $other_information = $row['OTHER_INFORMATION'];

                            if(!empty($brand)){
                                $item_array[] = $brand;
                            }

                            if(!empty($model)){
                                $item_array[] = $model;
                            }

                            if(!empty($variant)){
                                $item_array[] = $variant;
                            }

                            if(!empty($engine_size)){
                                $item_array[] = $engine_size;
                            }

                            if(!empty($gas_type)){
                                $item_array[] = $gas_type;
                            }

                            if(!empty($transmission)){
                                $item_array[] = $transmission;
                            }

                            if(!empty($drive_train)){
                                $item_array[] = $drive_train;
                            }

                            if(!empty($body_type)){
                                $item_array[] = $body_type;
                            }

                            if(!empty($seating_capacity)){
                                $item_array[] = $seating_capacity;
                            }

                            if(!empty($camshaft_profile)){
                                $item_array[] = $camshaft_profile;
                            }

                            if(!empty($color_type)){
                                $item_array[] = $color_type;
                            }

                            if(!empty($aircon_type)){
                                $item_array[] = $aircon_type;
                            }

                            if(!empty($other_information)){
                                $item_array[] = $other_information;
                            }

                            if(!empty($item_array)){
                                $item .= implode(' ', $item_array);
                            }

                            $response[] = array(
                                'ITEM_ID' => $item_id,
                                'ITEM' => $item
                            );
                        }

                        echo json_encode($response);
                    }
                }
                else{
                    echo $sql->errorInfo();
                }
            }
        }
    }
    # -------------------------------------------------------------

    # -------------------------------------------------------------
    #   Generate html functions
    # -------------------------------------------------------------

    # Ticket notes
    else if($type == 'ticket notes'){
        if(isset($_POST['ticketid'])){
            if ($api->databaseConnection()) {
                $ticket_id = $_POST['ticketid'];

                $delete_ticket_note = $api->check_role_permissions($username, 270);

                $sql = $api->db_connection->prepare('SELECT NOTE_ID, NOTE_BY, NOTE, NOTE_DATE, NOTE_TIME FROM tblticketnotes WHERE TICKET_ID = :ticket_id ORDER BY NOTE_DATE DESC, NOTE_TIME DESC');
                $sql->bindParam(':ticket_id', $ticket_id);

                if($sql->execute()){
                    $count = $sql->rowCount();

                    if($count > 0){
                        $notes = '';

                        while($row = $sql->fetch()){
                            $note_id = $row['NOTE_ID'];
                            $note_by = $row['NOTE_BY'];
                            $note = $row['NOTE'];
                            $note_by_details = $api->get_data_details_one_parameter('employee profile', $note_by);
                            $note_by_first_name = $note_by_details[0]['FIRST_NAME'];
                            $note_by_last_name = $note_by_details[0]['LAST_NAME'];
                            $note_by_middle_name = $note_by_details[0]['MIDDLE_NAME'];
                            $note_by_suffix = $note_by_details[0]['SUFFIX'];
                            $note_by_fullname = $api->get_full_name($note_by_first_name, $note_by_middle_name, $note_by_last_name, $note_by_suffix)[0]['REVERSE_FULL_NAME'];
                            $profile_image = $api->check_profile_image($note_by_details[0]['PROFILE_IMAGE']);

                            $note_date = $api->check_date('empty', $row['NOTE_DATE'], '', 'd M Y', '', '', '');
                            $note_time = $api->check_date('empty', trim($row['NOTE_TIME']), '', 'h:i:s a', '', '', '');
                            $date_diff = round((strtotime($note_date) - strtotime($system_date)) / (60 * 60 * 24));

                            if($date_diff <= 7){
                                $date_elapsed = $api->time_elapsed_string($note_date .' '. $note_time);
                            }
                            else{
                                $date_elapsed = $note_date .' '. $note_time;
                            }

                            if($delete_ticket_note > 0){
                                $delete = '<div>
                                <a href="javascript: void(0);" class="text-danger delete-ticket-note" data-noteid="'. $note_id .'"><i class="bx bx-trash me-1"></i> Delete</a>
                            </div>';
                            }
                            else{
                                $delete = '';
                            }

                            $notes .= '<li class="list-group-item py-3">
                                            <div class="d-flex">
                                                <div class="flex-shrink-0 me-3">
                                                    <div class="avatar-xs">
                                                        <img src="'. $profile_image .'" alt="" class="img-fluid d-block rounded-circle">
                                                    </div>
                                                </div>
                                                <div class="flex-grow-1" style="overflow-x: hidden;">
                                                    <h5 class="font-size-14 mb-1">'. $note_by_fullname .' <small class="text-muted float-end">'. $date_elapsed .'</small></h5>
                                                    <p class="text-muted text-wrap">'. $note .'</p>
                                                    '. $delete .'
                                                </div>
                                            </div>
                                        </li>';
                        }
                    }
                    else{
                        $notes = '<li class="list-group-item border-0">
                                    <p class="text-muted text-center">No ticket note found</p>
                                </li>';
                    }

                    $response[] = array(
                        'NOTES' => $notes
                    );

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo();
                }
            }
        }
    }
    # -------------------------------------------------------------

    # Meeting notes
    else if($type == 'meeting notes'){
        if(isset($_POST['meetingid'])){
            if ($api->databaseConnection()) {
                $meeting_id = $_POST['meetingid'];

                $delete_meeting_note = $api->check_role_permissions($username, 303);

                $sql = $api->db_connection->prepare('SELECT NOTE_ID, NOTE_BY, NOTE, NOTE_DATE, NOTE_TIME FROM tblmeetingnotes WHERE MEETING_ID = :meeting_id ORDER BY NOTE_DATE DESC, NOTE_TIME DESC');
                $sql->bindParam(':meeting_id', $meeting_id);

                if($sql->execute()){
                    $count = $sql->rowCount();

                    if($count > 0){
                        $notes = '';

                        while($row = $sql->fetch()){
                            $note_id = $row['NOTE_ID'];
                            $note_by = $row['NOTE_BY'];
                            $note = $row['NOTE'];
                            $note_by_details = $api->get_data_details_one_parameter('employee profile', $note_by);
                            $note_by_first_name = $note_by_details[0]['FIRST_NAME'];
                            $note_by_last_name = $note_by_details[0]['LAST_NAME'];
                            $note_by_middle_name = $note_by_details[0]['MIDDLE_NAME'];
                            $note_by_suffix = $note_by_details[0]['SUFFIX'];
                            $note_by_fullname = $api->get_full_name($note_by_first_name, $note_by_middle_name, $note_by_last_name, $note_by_suffix)[0]['REVERSE_FULL_NAME'];
                            $profile_image = $api->check_profile_image($note_by_details[0]['PROFILE_IMAGE']);

                            $note_date = $api->check_date('empty', $row['NOTE_DATE'], '', 'd M Y', '', '', '');
                            $note_time = $api->check_date('empty', trim($row['NOTE_TIME']), '', 'h:i:s a', '', '', '');
                            $date_diff = round((strtotime($note_date) - strtotime($system_date)) / (60 * 60 * 24));

                            if($date_diff <= 7){
                                $date_elapsed = $api->time_elapsed_string($note_date .' '. $note_time);
                            }
                            else{
                                $date_elapsed = $note_date .' '. $note_time;
                            }

                            if($delete_meeting_note > 0){
                                $delete = '<div>
                                    <a href="javascript: void(0);" class="text-danger delete-meeting-note" data-noteid="'. $note_id .'"><i class="bx bx-trash me-1"></i> Delete</a>
                                </div>';
                            }
                            else{
                                $delete = '';
                            }

                            $notes .= '<li class="list-group-item py-3">
                                            <div class="d-flex">
                                                <div class="flex-shrink-0 me-3">
                                                    <div class="avatar-xs">
                                                        <img src="'. $profile_image .'" alt="" class="img-fluid d-block rounded-circle">
                                                    </div>
                                                </div>
                                                <div class="flex-grow-1" style="overflow-x: hidden;">
                                                    <h5 class="font-size-14 mb-1">'. $note_by_fullname .' <small class="text-muted float-end">'. $date_elapsed .'</small></h5>
                                                    <p class="text-muted text-wrap">'. $note .'</p>
                                                    '. $delete .'
                                                </div>
                                            </div>
                                        </li>';
                        }
                    }
                    else{
                        $notes = '<li class="list-group-item border-0">
                                    <p class="text-muted text-center">No meeting note found</p>
                                </li>';
                    }

                    $response[] = array(
                        'NOTES' => $notes
                    );

                    echo json_encode($response);
                }
                else{
                    echo $sql->errorInfo();
                }
            }
        }
    }


    # -------------------------------------------------------------
}

?>